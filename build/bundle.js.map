{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/src/runtime/internal/utils.js","../../node_modules/svelte/src/runtime/internal/environment.js","../../node_modules/svelte/src/runtime/internal/loop.js","../../node_modules/svelte/src/runtime/internal/dom.js","../../node_modules/svelte/src/runtime/internal/style_manager.js","../../node_modules/svelte/src/runtime/internal/lifecycle.js","../../node_modules/svelte/src/runtime/internal/scheduler.js","../../node_modules/svelte/src/runtime/internal/transitions.js","../../node_modules/svelte/src/runtime/internal/each.js","../../node_modules/svelte/src/runtime/internal/Component.js","../../node_modules/svelte/src/runtime/easing/index.js","../../node_modules/svelte/src/runtime/transition/index.js","../../node_modules/marked/lib/marked.esm.js","../../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../../node_modules/svelte/src/shared/version.js","../../node_modules/dompurify/dist/purify.js","../../node_modules/remove-markdown/index.js","../../src/utils/assetHelper.js","../../src/utils/transitions.js","../../src/components/TransitionWrapper.svelte","../../node_modules/svelte/src/runtime/store/index.js","../../src/stores.js","../../src/components/ClickToAdvanceOverlay.svelte","../../src/slides/DialogueSlide.svelte","../../src/slides/ChoicesSlide.svelte","../../src/slides/InfoSlide.svelte","../../src/slides/QuoteSlide.svelte","../../src/slides/QuoteQuizSlide.svelte","../../src/slides/DreamSlide.svelte","../../src/components/FlashScreen.svelte","../../src/slides/ScoreSummary.svelte","../../src/utils/appLogic.js","../../src/App.svelte","../../src/utils/collectAssetPaths.js","../../src/main.js"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { noop } from './utils.js';\n\nexport const is_client = typeof window !== 'undefined';\n\n/** @type {() => number} */\nexport let now = is_client ? () => window.performance.now() : () => Date.now();\n\nexport let raf = is_client ? (cb) => requestAnimationFrame(cb) : noop;\n\n// used internally for testing\n/** @returns {void} */\nexport function set_now(fn) {\n\tnow = fn;\n}\n\n/** @returns {void} */\nexport function set_raf(fn) {\n\traf = fn;\n}\n","import { raf } from './environment.js';\n\nconst tasks = new Set();\n\n/**\n * @param {number} now\n * @returns {void}\n */\nfunction run_tasks(now) {\n\ttasks.forEach((task) => {\n\t\tif (!task.c(now)) {\n\t\t\ttasks.delete(task);\n\t\t\ttask.f();\n\t\t}\n\t});\n\tif (tasks.size !== 0) raf(run_tasks);\n}\n\n/**\n * For testing purposes only!\n * @returns {void}\n */\nexport function clear_loops() {\n\ttasks.clear();\n}\n\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n * @param {import('./private.js').TaskCallback} callback\n * @returns {import('./private.js').Task}\n */\nexport function loop(callback) {\n\t/** @type {import('./private.js').TaskEntry} */\n\tlet task;\n\tif (tasks.size === 0) raf(run_tasks);\n\treturn {\n\t\tpromise: new Promise((fulfill) => {\n\t\t\ttasks.add((task = { c: callback, f: fulfill }));\n\t\t}),\n\t\tabort() {\n\t\t\ttasks.delete(task);\n\t\t}\n\t};\n}\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { append_empty_stylesheet, detach, get_root_for_style } from './dom.js';\nimport { raf } from './environment.js';\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\n/** @type {Map<Document | ShadowRoot, import('./private.d.ts').StyleInformation>} */\nconst managed_styles = new Map();\n\nlet active = 0;\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\n/**\n * @param {string} str\n * @returns {number}\n */\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\n/**\n * @param {Document | ShadowRoot} doc\n * @param {Element & ElementCSSInlineStyle} node\n * @returns {{ stylesheet: any; rules: {}; }}\n */\nfunction create_style_information(doc, node) {\n\tconst info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n\tmanaged_styles.set(doc, info);\n\treturn info;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {number} a\n * @param {number} b\n * @param {number} duration\n * @param {number} delay\n * @param {(t: number) => number} ease\n * @param {(t: number, u: number) => string} fn\n * @param {number} uid\n * @returns {string}\n */\nexport function create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + (b - a) * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\tconst rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n\tconst name = `__svelte_${hash(rule)}_${uid}`;\n\tconst doc = get_root_for_style(node);\n\tconst { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n\tif (!rules[name]) {\n\t\trules[name] = true;\n\t\tstylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n\t}\n\tconst animation = node.style.animation || '';\n\tnode.style.animation = `${\n\t\tanimation ? `${animation}, ` : ''\n\t}${name} ${duration}ms linear ${delay}ms 1 both`;\n\tactive += 1;\n\treturn name;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {string} [name]\n * @returns {void}\n */\nexport function delete_rule(node, name) {\n\tconst previous = (node.style.animation || '').split(', ');\n\tconst next = previous.filter(\n\t\tname\n\t\t\t? (anim) => anim.indexOf(name) < 0 // remove specific animation\n\t\t\t: (anim) => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n\t);\n\tconst deleted = previous.length - next.length;\n\tif (deleted) {\n\t\tnode.style.animation = next.join(', ');\n\t\tactive -= deleted;\n\t\tif (!active) clear_rules();\n\t}\n}\n\n/** @returns {void} */\nexport function clear_rules() {\n\traf(() => {\n\t\tif (active) return;\n\t\tmanaged_styles.forEach((info) => {\n\t\t\tconst { ownerNode } = info.stylesheet;\n\t\t\t// there is no ownerNode if it runs on jsdom.\n\t\t\tif (ownerNode) detach(ownerNode);\n\t\t});\n\t\tmanaged_styles.clear();\n\t});\n}\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nexport { identity as linear } from '../internal/index.js';\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backInOut(t) {\n\tconst s = 1.70158 * 1.525;\n\tif ((t *= 2) < 1) return 0.5 * (t * t * ((s + 1) * t - s));\n\treturn 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backIn(t) {\n\tconst s = 1.70158;\n\treturn t * t * ((s + 1) * t - s);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backOut(t) {\n\tconst s = 1.70158;\n\treturn --t * t * ((s + 1) * t + s) + 1;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceOut(t) {\n\tconst a = 4.0 / 11.0;\n\tconst b = 8.0 / 11.0;\n\tconst c = 9.0 / 10.0;\n\tconst ca = 4356.0 / 361.0;\n\tconst cb = 35442.0 / 1805.0;\n\tconst cc = 16061.0 / 1805.0;\n\tconst t2 = t * t;\n\treturn t < a\n\t\t? 7.5625 * t2\n\t\t: t < b\n\t\t? 9.075 * t2 - 9.9 * t + 3.4\n\t\t: t < c\n\t\t? ca * t2 - cb * t + cc\n\t\t: 10.8 * t * t - 20.52 * t + 10.72;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceInOut(t) {\n\treturn t < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0)) : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceIn(t) {\n\treturn 1.0 - bounceOut(1.0 - t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circInOut(t) {\n\tif ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circIn(t) {\n\treturn 1.0 - Math.sqrt(1.0 - t * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circOut(t) {\n\treturn Math.sqrt(1 - --t * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicInOut(t) {\n\treturn t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicIn(t) {\n\treturn t * t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicOut(t) {\n\tconst f = t - 1.0;\n\treturn f * f * f + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticInOut(t) {\n\treturn t < 0.5\n\t\t? 0.5 * Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) * Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n\t\t: 0.5 *\n\t\t\t\tMath.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n\t\t\t\tMath.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n\t\t\t\t1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticIn(t) {\n\treturn Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticOut(t) {\n\treturn Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoInOut(t) {\n\treturn t === 0.0 || t === 1.0\n\t\t? t\n\t\t: t < 0.5\n\t\t? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n\t\t: -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoIn(t) {\n\treturn t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoOut(t) {\n\treturn t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadInOut(t) {\n\tt /= 0.5;\n\tif (t < 1) return 0.5 * t * t;\n\tt--;\n\treturn -0.5 * (t * (t - 2) - 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadIn(t) {\n\treturn t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadOut(t) {\n\treturn -t * (t - 2.0);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartInOut(t) {\n\treturn t < 0.5 ? +8.0 * Math.pow(t, 4.0) : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartIn(t) {\n\treturn Math.pow(t, 4.0);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartOut(t) {\n\treturn Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintInOut(t) {\n\tif ((t *= 2) < 1) return 0.5 * t * t * t * t * t;\n\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintIn(t) {\n\treturn t * t * t * t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintOut(t) {\n\treturn --t * t * t * t * t + 1;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineInOut(t) {\n\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineIn(t) {\n\tconst v = Math.cos(t * Math.PI * 0.5);\n\tif (Math.abs(v) < 1e-14) return 1;\n\telse return 1 - v;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineOut(t) {\n\treturn Math.sin((t * Math.PI) / 2);\n}\n","import { cubicOut, cubicInOut, linear } from '../easing/index.js';\nimport { assign, split_css_unit, is_function } from '../internal/index.js';\n\n/**\n * Animates a `blur` filter alongside an element's opacity.\n *\n * https://svelte.dev/docs/svelte-transition#blur\n * @param {Element} node\n * @param {import('./public').BlurParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function blur(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst f = style.filter === 'none' ? '' : style.filter;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [value, unit] = split_css_unit(amount);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `opacity: ${target_opacity - od * u}; filter: ${f} blur(${u * value}${unit});`\n\t};\n}\n\n/**\n * Animates the opacity of an element from 0 to the current opacity for `in` transitions and from the current opacity to 0 for `out` transitions.\n *\n * https://svelte.dev/docs/svelte-transition#fade\n * @param {Element} node\n * @param {import('./public').FadeParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n\tconst o = +getComputedStyle(node).opacity;\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) => `opacity: ${t * o}`\n\t};\n}\n\n/**\n * Animates the x and y positions and the opacity of an element. `in` transitions animate from the provided values, passed as parameters to the element's default values. `out` transitions animate from the element's default values to the provided values.\n *\n * https://svelte.dev/docs/svelte-transition#fly\n * @param {Element} node\n * @param {import('./public').FlyParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function fly(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [xValue, xUnit] = split_css_unit(x);\n\tconst [yValue, yUnit] = split_css_unit(y);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * xValue}${xUnit}, ${(1 - t) * yValue}${yUnit});\n\t\t\topacity: ${target_opacity - od * u}`\n\t};\n}\n\n/**\n * Slides an element in and out.\n *\n * https://svelte.dev/docs/svelte-transition#slide\n * @param {Element} node\n * @param {import('./public').SlideParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function slide(node, { delay = 0, duration = 400, easing = cubicOut, axis = 'y' } = {}) {\n\tconst style = getComputedStyle(node);\n\tconst opacity = +style.opacity;\n\tconst primary_property = axis === 'y' ? 'height' : 'width';\n\tconst primary_property_value = parseFloat(style[primary_property]);\n\tconst secondary_properties = axis === 'y' ? ['top', 'bottom'] : ['left', 'right'];\n\tconst capitalized_secondary_properties = secondary_properties.map(\n\t\t(e) => `${e[0].toUpperCase()}${e.slice(1)}`\n\t);\n\tconst padding_start_value = parseFloat(style[`padding${capitalized_secondary_properties[0]}`]);\n\tconst padding_end_value = parseFloat(style[`padding${capitalized_secondary_properties[1]}`]);\n\tconst margin_start_value = parseFloat(style[`margin${capitalized_secondary_properties[0]}`]);\n\tconst margin_end_value = parseFloat(style[`margin${capitalized_secondary_properties[1]}`]);\n\tconst border_width_start_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[0]}Width`]\n\t);\n\tconst border_width_end_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[1]}Width`]\n\t);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) =>\n\t\t\t'overflow: hidden;' +\n\t\t\t`opacity: ${Math.min(t * 20, 1) * opacity};` +\n\t\t\t`${primary_property}: ${t * primary_property_value}px;` +\n\t\t\t`padding-${secondary_properties[0]}: ${t * padding_start_value}px;` +\n\t\t\t`padding-${secondary_properties[1]}: ${t * padding_end_value}px;` +\n\t\t\t`margin-${secondary_properties[0]}: ${t * margin_start_value}px;` +\n\t\t\t`margin-${secondary_properties[1]}: ${t * margin_end_value}px;` +\n\t\t\t`border-${secondary_properties[0]}-width: ${t * border_width_start_value}px;` +\n\t\t\t`border-${secondary_properties[1]}-width: ${t * border_width_end_value}px;`\n\t};\n}\n\n/**\n * Animates the opacity and scale of an element. `in` transitions animate from an element's current (default) values to the provided values, passed as parameters. `out` transitions animate from the provided values to an element's default values.\n *\n * https://svelte.dev/docs/svelte-transition#scale\n * @param {Element} node\n * @param {import('./public').ScaleParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function scale(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst sd = 1 - start;\n\tconst od = target_opacity * (1 - opacity);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - sd * u});\n\t\t\topacity: ${target_opacity - od * u}\n\t\t`\n\t};\n}\n\n/**\n * Animates the stroke of an SVG element, like a snake in a tube. `in` transitions begin with the path invisible and draw the path to the screen over time. `out` transitions start in a visible state and gradually erase the path. `draw` only works with elements that have a `getTotalLength` method, like `<path>` and `<polyline>`.\n *\n * https://svelte.dev/docs/svelte-transition#draw\n * @param {SVGElement & { getTotalLength(): number }} node\n * @param {import('./public').DrawParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n\tlet len = node.getTotalLength();\n\tconst style = getComputedStyle(node);\n\tif (style.strokeLinecap !== 'butt') {\n\t\tlen += parseInt(style.strokeWidth);\n\t}\n\tif (duration === undefined) {\n\t\tif (speed === undefined) {\n\t\t\tduration = 800;\n\t\t} else {\n\t\t\tduration = len / speed;\n\t\t}\n\t} else if (typeof duration === 'function') {\n\t\tduration = duration(len);\n\t}\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_, u) => `\n\t\t\tstroke-dasharray: ${len};\n\t\t\tstroke-dashoffset: ${u * len};\n\t\t`\n\t};\n}\n\n/**\n * The `crossfade` function creates a pair of [transitions](https://svelte.dev/docs#template-syntax-element-directives-transition-fn) called `send` and `receive`. When an element is 'sent', it looks for a corresponding element being 'received', and generates a transition that transforms the element to its counterpart's position and fades it out. When an element is 'received', the reverse happens. If there is no counterpart, the `fallback` transition is used.\n *\n * https://svelte.dev/docs/svelte-transition#crossfade\n * @param {import('./public').CrossfadeParams & {\n * \tfallback?: (node: Element, params: import('./public').CrossfadeParams, intro: boolean) => import('./public').TransitionConfig;\n * }} params\n * @returns {[(node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig, (node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig]}\n */\nexport function crossfade({ fallback, ...defaults }) {\n\t/** @type {Map<any, Element>} */\n\tconst to_receive = new Map();\n\t/** @type {Map<any, Element>} */\n\tconst to_send = new Map();\n\t/**\n\t * @param {Element} from_node\n\t * @param {Element} node\n\t * @param {import('./public').CrossfadeParams} params\n\t * @returns {import('./public').TransitionConfig}\n\t */\n\tfunction crossfade(from_node, node, params) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = (d) => Math.sqrt(d) * 30,\n\t\t\teasing = cubicOut\n\t\t} = assign(assign({}, defaults), params);\n\t\tconst from = from_node.getBoundingClientRect();\n\t\tconst to = node.getBoundingClientRect();\n\t\tconst dx = from.left - to.left;\n\t\tconst dy = from.top - to.top;\n\t\tconst dw = from.width / to.width;\n\t\tconst dh = from.height / to.height;\n\t\tconst d = Math.sqrt(dx * dx + dy * dy);\n\t\tconst style = getComputedStyle(node);\n\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\t\tconst opacity = +style.opacity;\n\t\treturn {\n\t\t\tdelay,\n\t\t\tduration: is_function(duration) ? duration(d) : duration,\n\t\t\teasing,\n\t\t\tcss: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${\n\t\t\t\tt + (1 - t) * dh\n\t\t\t});\n\t\t\t`\n\t\t};\n\t}\n\n\t/**\n\t * @param {Map<any, Element>} items\n\t * @param {Map<any, Element>} counterparts\n\t * @param {boolean} intro\n\t * @returns {(node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig}\n\t */\n\tfunction transition(items, counterparts, intro) {\n\t\treturn (node, params) => {\n\t\t\titems.set(params.key, node);\n\t\t\treturn () => {\n\t\t\t\tif (counterparts.has(params.key)) {\n\t\t\t\t\tconst other_node = counterparts.get(params.key);\n\t\t\t\t\tcounterparts.delete(params.key);\n\t\t\t\t\treturn crossfade(other_node, node, params);\n\t\t\t\t}\n\t\t\t\t// if the node is disappearing altogether\n\t\t\t\t// (i.e. wasn't claimed by the other list)\n\t\t\t\t// then we need to supply an outro\n\t\t\t\titems.delete(params.key);\n\t\t\t\treturn fallback && fallback(node, params, intro);\n\t\t\t};\n\t\t};\n\t}\n\treturn [transition(to_send, to_receive, false), transition(to_receive, to_send, true)];\n}\n","/**\n * marked v14.1.3 - a markdown parser\n * Copyright (c) 2011-2024, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n/**\n * Gets the original marked default options.\n */\nfunction _getDefaults() {\n    return {\n        async: false,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        hooks: null,\n        pedantic: false,\n        renderer: null,\n        silent: false,\n        tokenizer: null,\n        walkTokens: null,\n    };\n}\nlet _defaults = _getDefaults();\nfunction changeDefaults(newDefaults) {\n    _defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape$1(html, encode) {\n    if (encode) {\n        if (escapeTest.test(html)) {\n            return html.replace(escapeReplace, getEscapeReplacement);\n        }\n    }\n    else {\n        if (escapeTestNoEncode.test(html)) {\n            return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n        }\n    }\n    return html;\n}\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n    let source = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    const obj = {\n        replace: (name, val) => {\n            let valSource = typeof val === 'string' ? val : val.source;\n            valSource = valSource.replace(caret, '$1');\n            source = source.replace(name, valSource);\n            return obj;\n        },\n        getRegex: () => {\n            return new RegExp(source, opt);\n        },\n    };\n    return obj;\n}\nfunction cleanUrl(href) {\n    try {\n        href = encodeURI(href).replace(/%25/g, '%');\n    }\n    catch {\n        return null;\n    }\n    return href;\n}\nconst noopTest = { exec: () => null };\nfunction splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n        let escaped = false;\n        let curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\')\n            escaped = !escaped;\n        if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n        }\n        else {\n            // add space before unescaped |\n            return ' |';\n        }\n    }), cells = row.split(/ \\|/);\n    let i = 0;\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n        cells.shift();\n    }\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n        cells.pop();\n    }\n    if (count) {\n        if (cells.length > count) {\n            cells.splice(count);\n        }\n        else {\n            while (cells.length < count)\n                cells.push('');\n        }\n    }\n    for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n    return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n    const l = str.length;\n    if (l === 0) {\n        return '';\n    }\n    // Length of suffix matching the invert condition.\n    let suffLen = 0;\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n        const currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && !invert) {\n            suffLen++;\n        }\n        else if (currChar !== c && invert) {\n            suffLen++;\n        }\n        else {\n            break;\n        }\n    }\n    return str.slice(0, l - suffLen);\n}\nfunction findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n        return -1;\n    }\n    let level = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            i++;\n        }\n        else if (str[i] === b[0]) {\n            level++;\n        }\n        else if (str[i] === b[1]) {\n            level--;\n            if (level < 0) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n    const href = link.href;\n    const title = link.title ? escape$1(link.title) : null;\n    const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n    if (cap[0].charAt(0) !== '!') {\n        lexer.state.inLink = true;\n        const token = {\n            type: 'link',\n            raw,\n            href,\n            title,\n            text,\n            tokens: lexer.inlineTokens(text),\n        };\n        lexer.state.inLink = false;\n        return token;\n    }\n    return {\n        type: 'image',\n        raw,\n        href,\n        title,\n        text: escape$1(text),\n    };\n}\nfunction indentCodeCompensation(raw, text) {\n    const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n    if (matchIndentToCode === null) {\n        return text;\n    }\n    const indentToCode = matchIndentToCode[1];\n    return text\n        .split('\\n')\n        .map(node => {\n        const matchIndentInNode = node.match(/^\\s+/);\n        if (matchIndentInNode === null) {\n            return node;\n        }\n        const [indentInNode] = matchIndentInNode;\n        if (indentInNode.length >= indentToCode.length) {\n            return node.slice(indentToCode.length);\n        }\n        return node;\n    })\n        .join('\\n');\n}\n/**\n * Tokenizer\n */\nclass _Tokenizer {\n    options;\n    rules; // set by the lexer\n    lexer; // set by the lexer\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(src) {\n        const cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n            return {\n                type: 'space',\n                raw: cap[0],\n            };\n        }\n    }\n    code(src) {\n        const cap = this.rules.block.code.exec(src);\n        if (cap) {\n            const text = cap[0].replace(/^(?: {1,4}| {0,3}\\t)/gm, '');\n            return {\n                type: 'code',\n                raw: cap[0],\n                codeBlockStyle: 'indented',\n                text: !this.options.pedantic\n                    ? rtrim(text, '\\n')\n                    : text,\n            };\n        }\n    }\n    fences(src) {\n        const cap = this.rules.block.fences.exec(src);\n        if (cap) {\n            const raw = cap[0];\n            const text = indentCodeCompensation(raw, cap[3] || '');\n            return {\n                type: 'code',\n                raw,\n                lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n                text,\n            };\n        }\n    }\n    heading(src) {\n        const cap = this.rules.block.heading.exec(src);\n        if (cap) {\n            let text = cap[2].trim();\n            // remove trailing #s\n            if (/#$/.test(text)) {\n                const trimmed = rtrim(text, '#');\n                if (this.options.pedantic) {\n                    text = trimmed.trim();\n                }\n                else if (!trimmed || / $/.test(trimmed)) {\n                    // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n            }\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[1].length,\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    hr(src) {\n        const cap = this.rules.block.hr.exec(src);\n        if (cap) {\n            return {\n                type: 'hr',\n                raw: rtrim(cap[0], '\\n'),\n            };\n        }\n    }\n    blockquote(src) {\n        const cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n            let lines = rtrim(cap[0], '\\n').split('\\n');\n            let raw = '';\n            let text = '';\n            const tokens = [];\n            while (lines.length > 0) {\n                let inBlockquote = false;\n                const currentLines = [];\n                let i;\n                for (i = 0; i < lines.length; i++) {\n                    // get lines up to a continuation\n                    if (/^ {0,3}>/.test(lines[i])) {\n                        currentLines.push(lines[i]);\n                        inBlockquote = true;\n                    }\n                    else if (!inBlockquote) {\n                        currentLines.push(lines[i]);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                lines = lines.slice(i);\n                const currentRaw = currentLines.join('\\n');\n                const currentText = currentRaw\n                    // precede setext continuation with 4 spaces so it isn't a setext\n                    .replace(/\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g, '\\n    $1')\n                    .replace(/^ {0,3}>[ \\t]?/gm, '');\n                raw = raw ? `${raw}\\n${currentRaw}` : currentRaw;\n                text = text ? `${text}\\n${currentText}` : currentText;\n                // parse blockquote lines as top level tokens\n                // merge paragraphs if this is a continuation\n                const top = this.lexer.state.top;\n                this.lexer.state.top = true;\n                this.lexer.blockTokens(currentText, tokens, true);\n                this.lexer.state.top = top;\n                // if there is no continuation then we are done\n                if (lines.length === 0) {\n                    break;\n                }\n                const lastToken = tokens[tokens.length - 1];\n                if (lastToken?.type === 'code') {\n                    // blockquote continuation cannot be preceded by a code block\n                    break;\n                }\n                else if (lastToken?.type === 'blockquote') {\n                    // include continuation in nested blockquote\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.blockquote(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - oldToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.text.length) + newToken.text;\n                    break;\n                }\n                else if (lastToken?.type === 'list') {\n                    // include continuation in nested list\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.list(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - lastToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.raw.length) + newToken.raw;\n                    lines = newText.substring(tokens[tokens.length - 1].raw.length).split('\\n');\n                    continue;\n                }\n            }\n            return {\n                type: 'blockquote',\n                raw,\n                tokens,\n                text,\n            };\n        }\n    }\n    list(src) {\n        let cap = this.rules.block.list.exec(src);\n        if (cap) {\n            let bull = cap[1].trim();\n            const isordered = bull.length > 1;\n            const list = {\n                type: 'list',\n                raw: '',\n                ordered: isordered,\n                start: isordered ? +bull.slice(0, -1) : '',\n                loose: false,\n                items: [],\n            };\n            bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n            if (this.options.pedantic) {\n                bull = isordered ? bull : '[*+-]';\n            }\n            // Get next list item\n            const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n            let endsWithBlankLine = false;\n            // Check if current bullet point can start a new List Item\n            while (src) {\n                let endEarly = false;\n                let raw = '';\n                let itemContents = '';\n                if (!(cap = itemRegex.exec(src))) {\n                    break;\n                }\n                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                    break;\n                }\n                raw = cap[0];\n                src = src.substring(raw.length);\n                let line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n                let nextLine = src.split('\\n', 1)[0];\n                let blankLine = !line.trim();\n                let indent = 0;\n                if (this.options.pedantic) {\n                    indent = 2;\n                    itemContents = line.trimStart();\n                }\n                else if (blankLine) {\n                    indent = cap[1].length + 1;\n                }\n                else {\n                    indent = cap[2].search(/[^ ]/); // Find first non-space char\n                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                    itemContents = line.slice(indent);\n                    indent += cap[1].length;\n                }\n                if (blankLine && /^[ \\t]*$/.test(nextLine)) { // Items begin with at most one blank line\n                    raw += nextLine + '\\n';\n                    src = src.substring(nextLine.length + 1);\n                    endEarly = true;\n                }\n                if (!endEarly) {\n                    const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n                    const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n                    const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n                    const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n                    const htmlBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}<[a-z].*>`, 'i');\n                    // Check if following lines should be included in List Item\n                    while (src) {\n                        const rawLine = src.split('\\n', 1)[0];\n                        let nextLineWithoutTabs;\n                        nextLine = rawLine;\n                        // Re-align to follow commonmark nesting rules\n                        if (this.options.pedantic) {\n                            nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n                            nextLineWithoutTabs = nextLine;\n                        }\n                        else {\n                            nextLineWithoutTabs = nextLine.replace(/\\t/g, '    ');\n                        }\n                        // End list item if found code fences\n                        if (fencesBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new heading\n                        if (headingBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of html block\n                        if (htmlBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new bullet\n                        if (nextBulletRegex.test(nextLine)) {\n                            break;\n                        }\n                        // Horizontal rule found\n                        if (hrRegex.test(nextLine)) {\n                            break;\n                        }\n                        if (nextLineWithoutTabs.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n                            itemContents += '\\n' + nextLineWithoutTabs.slice(indent);\n                        }\n                        else {\n                            // not enough indentation\n                            if (blankLine) {\n                                break;\n                            }\n                            // paragraph continuation unless last line was a different block level element\n                            if (line.replace(/\\t/g, '    ').search(/[^ ]/) >= 4) { // indented code block\n                                break;\n                            }\n                            if (fencesBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (headingBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (hrRegex.test(line)) {\n                                break;\n                            }\n                            itemContents += '\\n' + nextLine;\n                        }\n                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                            blankLine = true;\n                        }\n                        raw += rawLine + '\\n';\n                        src = src.substring(rawLine.length + 1);\n                        line = nextLineWithoutTabs.slice(indent);\n                    }\n                }\n                if (!list.loose) {\n                    // If the previous item ended with a blank line, the list is loose\n                    if (endsWithBlankLine) {\n                        list.loose = true;\n                    }\n                    else if (/\\n[ \\t]*\\n[ \\t]*$/.test(raw)) {\n                        endsWithBlankLine = true;\n                    }\n                }\n                let istask = null;\n                let ischecked;\n                // Check for task list items\n                if (this.options.gfm) {\n                    istask = /^\\[[ xX]\\] /.exec(itemContents);\n                    if (istask) {\n                        ischecked = istask[0] !== '[ ] ';\n                        itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n                    }\n                }\n                list.items.push({\n                    type: 'list_item',\n                    raw,\n                    task: !!istask,\n                    checked: ischecked,\n                    loose: false,\n                    text: itemContents,\n                    tokens: [],\n                });\n                list.raw += raw;\n            }\n            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n            list.items[list.items.length - 1].raw = list.items[list.items.length - 1].raw.trimEnd();\n            list.items[list.items.length - 1].text = list.items[list.items.length - 1].text.trimEnd();\n            list.raw = list.raw.trimEnd();\n            // Item child tokens handled here at end because we needed to have the final item to trim it first\n            for (let i = 0; i < list.items.length; i++) {\n                this.lexer.state.top = false;\n                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                if (!list.loose) {\n                    // Check if list should be loose\n                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n                    list.loose = hasMultipleLineBreaks;\n                }\n            }\n            // Set all items to loose if list is loose\n            if (list.loose) {\n                for (let i = 0; i < list.items.length; i++) {\n                    list.items[i].loose = true;\n                }\n            }\n            return list;\n        }\n    }\n    html(src) {\n        const cap = this.rules.block.html.exec(src);\n        if (cap) {\n            const token = {\n                type: 'html',\n                block: true,\n                raw: cap[0],\n                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                text: cap[0],\n            };\n            return token;\n        }\n    }\n    def(src) {\n        const cap = this.rules.block.def.exec(src);\n        if (cap) {\n            const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n            const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n            return {\n                type: 'def',\n                tag,\n                raw: cap[0],\n                href,\n                title,\n            };\n        }\n    }\n    table(src) {\n        const cap = this.rules.block.table.exec(src);\n        if (!cap) {\n            return;\n        }\n        if (!/[:|]/.test(cap[2])) {\n            // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n            return;\n        }\n        const headers = splitCells(cap[1]);\n        const aligns = cap[2].replace(/^\\||\\| *$/g, '').split('|');\n        const rows = cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : [];\n        const item = {\n            type: 'table',\n            raw: cap[0],\n            header: [],\n            align: [],\n            rows: [],\n        };\n        if (headers.length !== aligns.length) {\n            // header and align columns must be equal, rows can be different.\n            return;\n        }\n        for (const align of aligns) {\n            if (/^ *-+: *$/.test(align)) {\n                item.align.push('right');\n            }\n            else if (/^ *:-+: *$/.test(align)) {\n                item.align.push('center');\n            }\n            else if (/^ *:-+ *$/.test(align)) {\n                item.align.push('left');\n            }\n            else {\n                item.align.push(null);\n            }\n        }\n        for (let i = 0; i < headers.length; i++) {\n            item.header.push({\n                text: headers[i],\n                tokens: this.lexer.inline(headers[i]),\n                header: true,\n                align: item.align[i],\n            });\n        }\n        for (const row of rows) {\n            item.rows.push(splitCells(row, item.header.length).map((cell, i) => {\n                return {\n                    text: cell,\n                    tokens: this.lexer.inline(cell),\n                    header: false,\n                    align: item.align[i],\n                };\n            }));\n        }\n        return item;\n    }\n    lheading(src) {\n        const cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1]),\n            };\n        }\n    }\n    paragraph(src) {\n        const cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n            const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1];\n            return {\n                type: 'paragraph',\n                raw: cap[0],\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    text(src) {\n        const cap = this.rules.block.text.exec(src);\n        if (cap) {\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0]),\n            };\n        }\n    }\n    escape(src) {\n        const cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n            return {\n                type: 'escape',\n                raw: cap[0],\n                text: escape$1(cap[1]),\n            };\n        }\n    }\n    tag(src) {\n        const cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n            if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n                this.lexer.state.inLink = true;\n            }\n            else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n                this.lexer.state.inLink = false;\n            }\n            if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = true;\n            }\n            else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = false;\n            }\n            return {\n                type: 'html',\n                raw: cap[0],\n                inLink: this.lexer.state.inLink,\n                inRawBlock: this.lexer.state.inRawBlock,\n                block: false,\n                text: cap[0],\n            };\n        }\n    }\n    link(src) {\n        const cap = this.rules.inline.link.exec(src);\n        if (cap) {\n            const trimmedUrl = cap[2].trim();\n            if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n                // commonmark requires matching angle brackets\n                if (!(/>$/.test(trimmedUrl))) {\n                    return;\n                }\n                // ending angle bracket cannot be escaped\n                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                    return;\n                }\n            }\n            else {\n                // find closing parenthesis\n                const lastParenIndex = findClosingBracket(cap[2], '()');\n                if (lastParenIndex > -1) {\n                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                    const linkLen = start + cap[1].length + lastParenIndex;\n                    cap[2] = cap[2].substring(0, lastParenIndex);\n                    cap[0] = cap[0].substring(0, linkLen).trim();\n                    cap[3] = '';\n                }\n            }\n            let href = cap[2];\n            let title = '';\n            if (this.options.pedantic) {\n                // split pedantic href and title\n                const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n                if (link) {\n                    href = link[1];\n                    title = link[3];\n                }\n            }\n            else {\n                title = cap[3] ? cap[3].slice(1, -1) : '';\n            }\n            href = href.trim();\n            if (/^</.test(href)) {\n                if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n                    // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                }\n                else {\n                    href = href.slice(1, -1);\n                }\n            }\n            return outputLink(cap, {\n                href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n                title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title,\n            }, cap[0], this.lexer);\n        }\n    }\n    reflink(src, links) {\n        let cap;\n        if ((cap = this.rules.inline.reflink.exec(src))\n            || (cap = this.rules.inline.nolink.exec(src))) {\n            const linkString = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n            const link = links[linkString.toLowerCase()];\n            if (!link) {\n                const text = cap[0].charAt(0);\n                return {\n                    type: 'text',\n                    raw: text,\n                    text,\n                };\n            }\n            return outputLink(cap, link, cap[0], this.lexer);\n        }\n    }\n    emStrong(src, maskedSrc, prevChar = '') {\n        let match = this.rules.inline.emStrongLDelim.exec(src);\n        if (!match)\n            return;\n        // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n        if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u))\n            return;\n        const nextChar = match[1] || match[2] || '';\n        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n            const lLength = [...match[0]].length - 1;\n            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n            const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n            endReg.lastIndex = 0;\n            // Clip maskedSrc to same section of string as src (move to lexer?)\n            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n            while ((match = endReg.exec(maskedSrc)) != null) {\n                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                if (!rDelim)\n                    continue; // skip single * in __abc*abc__\n                rLength = [...rDelim].length;\n                if (match[3] || match[4]) { // found another Left Delim\n                    delimTotal += rLength;\n                    continue;\n                }\n                else if (match[5] || match[6]) { // either Left or Right Delim\n                    if (lLength % 3 && !((lLength + rLength) % 3)) {\n                        midDelimTotal += rLength;\n                        continue; // CommonMark Emphasis Rules 9-10\n                    }\n                }\n                delimTotal -= rLength;\n                if (delimTotal > 0)\n                    continue; // Haven't found enough closing delimiters\n                // Remove extra characters. *a*** -> *a*\n                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                // char length can be >1 for unicode characters;\n                const lastCharLength = [...match[0]][0].length;\n                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                // Create `em` if smallest delimiter has odd char count. *a***\n                if (Math.min(lLength, rLength) % 2) {\n                    const text = raw.slice(1, -1);\n                    return {\n                        type: 'em',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text),\n                    };\n                }\n                // Create 'strong' if smallest delimiter has even char count. **a***\n                const text = raw.slice(2, -2);\n                return {\n                    type: 'strong',\n                    raw,\n                    text,\n                    tokens: this.lexer.inlineTokens(text),\n                };\n            }\n        }\n    }\n    codespan(src) {\n        const cap = this.rules.inline.code.exec(src);\n        if (cap) {\n            let text = cap[2].replace(/\\n/g, ' ');\n            const hasNonSpaceChars = /[^ ]/.test(text);\n            const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                text = text.substring(1, text.length - 1);\n            }\n            text = escape$1(text, true);\n            return {\n                type: 'codespan',\n                raw: cap[0],\n                text,\n            };\n        }\n    }\n    br(src) {\n        const cap = this.rules.inline.br.exec(src);\n        if (cap) {\n            return {\n                type: 'br',\n                raw: cap[0],\n            };\n        }\n    }\n    del(src) {\n        const cap = this.rules.inline.del.exec(src);\n        if (cap) {\n            return {\n                type: 'del',\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2]),\n            };\n        }\n    }\n    autolink(src) {\n        const cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape$1(cap[1]);\n                href = 'mailto:' + text;\n            }\n            else {\n                text = escape$1(cap[1]);\n                href = text;\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    url(src) {\n        let cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape$1(cap[0]);\n                href = 'mailto:' + text;\n            }\n            else {\n                // do extended autolink path validation\n                let prevCapZero;\n                do {\n                    prevCapZero = cap[0];\n                    cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n                } while (prevCapZero !== cap[0]);\n                text = escape$1(cap[0]);\n                if (cap[1] === 'www.') {\n                    href = 'http://' + cap[0];\n                }\n                else {\n                    href = cap[0];\n                }\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    inlineText(src) {\n        const cap = this.rules.inline.text.exec(src);\n        if (cap) {\n            let text;\n            if (this.lexer.state.inRawBlock) {\n                text = cap[0];\n            }\n            else {\n                text = escape$1(cap[0]);\n            }\n            return {\n                type: 'text',\n                raw: cap[0],\n                text,\n            };\n        }\n    }\n}\n\n/**\n * Block-Level Grammar\n */\nconst newline = /^(?:[ \\t]*(?:\\n|$))+/;\nconst blockCode = /^((?: {4}| {0,3}\\t)[^\\n]+(?:\\n(?:[ \\t]*(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheading = edit(/^(?!bull |blockCode|fences|blockquote|heading|html)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n    .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n    .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n    .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n    .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n    .getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n[ \\t]*)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n[ \\t]*)?| *\\n[ \\t]*)(title))? *(?:\\n+|$)/)\n    .replace('label', _blockLabel)\n    .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n    .getRegex();\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n    .replace(/bull/g, bullet)\n    .getRegex();\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n    + '|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title'\n    + '|tr|track|ul';\nconst _comment = /<!--(?:-?>|[\\s\\S]*?(?:-->|$))/;\nconst html = edit('^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) closing tag\n    + ')', 'i')\n    .replace('comment', _comment)\n    .replace('tag', _tag)\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst paragraph = edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n    .replace('paragraph', paragraph)\n    .getRegex();\n/**\n * Normal Block Grammar\n */\nconst blockNormal = {\n    blockquote,\n    code: blockCode,\n    def,\n    fences,\n    heading,\n    hr,\n    html,\n    lheading,\n    list,\n    newline,\n    paragraph,\n    table: noopTest,\n    text: blockText,\n};\n/**\n * GFM Block Grammar\n */\nconst gfmTable = edit('^ *([^\\\\n ].*)\\\\n' // Header\n    + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('blockquote', ' {0,3}>')\n    .replace('code', '(?: {4}| {0,3}\\t)[^\\\\n]')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockGfm = {\n    ...blockNormal,\n    table: gfmTable,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n        .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n        .replace('table', gfmTable) // interrupt paragraphs with table\n        .replace('blockquote', ' {0,3}>')\n        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n        .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n        .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n        .getRegex(),\n};\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nconst blockPedantic = {\n    ...blockNormal,\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n        .replace('comment', _comment)\n        .replace(/tag/g, '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n        + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n        .getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest, // fences not supported\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' *#{1,6} *[^\\n]')\n        .replace('lheading', lheading)\n        .replace('|table', '')\n        .replace('blockquote', ' {0,3}>')\n        .replace('|fences', '')\n        .replace('|list', '')\n        .replace('|html', '')\n        .replace('|tag', '')\n        .getRegex(),\n};\n/**\n * Inline-Level Grammar\n */\nconst escape = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = '\\\\p{P}\\\\p{S}';\nconst punctuation = edit(/^((?![*_])[\\spunctuation])/, 'u')\n    .replace(/punctuation/g, _punctuation).getRegex();\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\((?:\\\\.|[^\\\\\\(\\)]|\\((?:\\\\.|[^\\\\\\(\\)])*\\))*\\)|`[^`]*?`|<[^<>]*?>/g;\nconst emStrongLDelim = edit(/^(?:\\*+(?:((?!\\*)[punct])|[^\\s*]))|^_+(?:((?!_)[punct])|([^\\s_]))/, 'u')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongRDelimAst = edit('^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n    + '|[^*]+(?=[^*])' // Consume to delim\n    + '|(?!\\\\*)[punct](\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n    + '|[^punct\\\\s](\\\\*+)(?!\\\\*)(?=[punct\\\\s]|$)' // (2) a***#, a*** can only be a Right Delimiter\n    + '|(?!\\\\*)[punct\\\\s](\\\\*+)(?=[^punct\\\\s])' // (3) #***a, ***a can only be Left Delimiter\n    + '|[\\\\s](\\\\*+)(?!\\\\*)(?=[punct])' // (4) ***# can only be Left Delimiter\n    + '|(?!\\\\*)[punct](\\\\*+)(?!\\\\*)(?=[punct])' // (5) #***# can be either Left or Right Delimiter\n    + '|[^punct\\\\s](\\\\*+)(?=[^punct\\\\s])', 'gu') // (6) a***a can be either Left or Right Delimiter\n    .replace(/punct/g, _punctuation)\n    .getRegex();\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit('^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n    + '|[^_]+(?=[^_])' // Consume to delim\n    + '|(?!_)[punct](_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n    + '|[^punct\\\\s](_+)(?!_)(?=[punct\\\\s]|$)' // (2) a___#, a___ can only be a Right Delimiter\n    + '|(?!_)[punct\\\\s](_+)(?=[^punct\\\\s])' // (3) #___a, ___a can only be Left Delimiter\n    + '|[\\\\s](_+)(?!_)(?=[punct])' // (4) ___# can only be Left Delimiter\n    + '|(?!_)[punct](_+)(?!_)(?=[punct])', 'gu') // (5) #___# can be either Left or Right Delimiter\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst anyPunctuation = edit(/\\\\([punct])/, 'gu')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n    .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n    .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n    .getRegex();\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit('^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n    .replace('comment', _inlineComment)\n    .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/)\n    .replace('label', _inlineLabel)\n    .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/)\n    .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n    .getRegex();\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n    .replace('label', _inlineLabel)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n    .replace('reflink', reflink)\n    .replace('nolink', nolink)\n    .getRegex();\n/**\n * Normal Inline Grammar\n */\nconst inlineNormal = {\n    _backpedal: noopTest, // only used for GFM url\n    anyPunctuation,\n    autolink,\n    blockSkip,\n    br,\n    code: inlineCode,\n    del: noopTest,\n    emStrongLDelim,\n    emStrongRDelimAst,\n    emStrongRDelimUnd,\n    escape,\n    link,\n    nolink,\n    punctuation,\n    reflink,\n    reflinkSearch,\n    tag,\n    text: inlineText,\n    url: noopTest,\n};\n/**\n * Pedantic Inline Grammar\n */\nconst inlinePedantic = {\n    ...inlineNormal,\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n};\n/**\n * GFM Inline Grammar\n */\nconst inlineGfm = {\n    ...inlineNormal,\n    escape: edit(escape).replace('])', '~|])').getRegex(),\n    url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n        .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n        .getRegex(),\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/,\n};\n/**\n * GFM + Line Breaks Inline Grammar\n */\nconst inlineBreaks = {\n    ...inlineGfm,\n    br: edit(br).replace('{2,}', '*').getRegex(),\n    text: edit(inlineGfm.text)\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n        .replace(/\\{2,\\}/g, '*')\n        .getRegex(),\n};\n/**\n * exports\n */\nconst block = {\n    normal: blockNormal,\n    gfm: blockGfm,\n    pedantic: blockPedantic,\n};\nconst inline = {\n    normal: inlineNormal,\n    gfm: inlineGfm,\n    breaks: inlineBreaks,\n    pedantic: inlinePedantic,\n};\n\n/**\n * Block Lexer\n */\nclass _Lexer {\n    tokens;\n    options;\n    state;\n    tokenizer;\n    inlineQueue;\n    constructor(options) {\n        // TokenList cannot be created in one go\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || _defaults;\n        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n            inLink: false,\n            inRawBlock: false,\n            top: true,\n        };\n        const rules = {\n            block: block.normal,\n            inline: inline.normal,\n        };\n        if (this.options.pedantic) {\n            rules.block = block.pedantic;\n            rules.inline = inline.pedantic;\n        }\n        else if (this.options.gfm) {\n            rules.block = block.gfm;\n            if (this.options.breaks) {\n                rules.inline = inline.breaks;\n            }\n            else {\n                rules.inline = inline.gfm;\n            }\n        }\n        this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n    static get rules() {\n        return {\n            block,\n            inline,\n        };\n    }\n    /**\n     * Static Lex Method\n     */\n    static lex(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    static lexInline(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    lex(src) {\n        src = src\n            .replace(/\\r\\n|\\r/g, '\\n');\n        this.blockTokens(src, this.tokens);\n        for (let i = 0; i < this.inlineQueue.length; i++) {\n            const next = this.inlineQueue[i];\n            this.inlineTokens(next.src, next.tokens);\n        }\n        this.inlineQueue = [];\n        return this.tokens;\n    }\n    blockTokens(src, tokens = [], lastParagraphClipped = false) {\n        if (this.options.pedantic) {\n            src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n        }\n        let token;\n        let lastToken;\n        let cutSrc;\n        while (src) {\n            if (this.options.extensions\n                && this.options.extensions.block\n                && this.options.extensions.block.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // newline\n            if (token = this.tokenizer.space(src)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.length === 1 && tokens.length > 0) {\n                    // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unnecessary paragraph tags\n                    tokens[tokens.length - 1].raw += '\\n';\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.code(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                // An indented code block cannot interrupt a paragraph.\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // fences\n            if (token = this.tokenizer.fences(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // heading\n            if (token = this.tokenizer.heading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // hr\n            if (token = this.tokenizer.hr(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // blockquote\n            if (token = this.tokenizer.blockquote(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // list\n            if (token = this.tokenizer.list(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // html\n            if (token = this.tokenizer.html(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // def\n            if (token = this.tokenizer.def(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.raw;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else if (!this.tokens.links[token.tag]) {\n                    this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title,\n                    };\n                }\n                continue;\n            }\n            // table (gfm)\n            if (token = this.tokenizer.table(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // lheading\n            if (token = this.tokenizer.lheading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // top-level paragraph\n            // prevent paragraph consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startBlock) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startBlock.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                lastToken = tokens[tokens.length - 1];\n                if (lastParagraphClipped && lastToken?.type === 'paragraph') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                lastParagraphClipped = (cutSrc.length !== src.length);\n                src = src.substring(token.raw.length);\n                continue;\n            }\n            // text\n            if (token = this.tokenizer.text(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        this.state.top = true;\n        return tokens;\n    }\n    inline(src, tokens = []) {\n        this.inlineQueue.push({ src, tokens });\n        return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    inlineTokens(src, tokens = []) {\n        let token, lastToken, cutSrc;\n        // String with links masked to avoid interference with em and strong\n        let maskedSrc = src;\n        let match;\n        let keepPrevChar, prevChar;\n        // Mask out reflinks\n        if (this.tokens.links) {\n            const links = Object.keys(this.tokens.links);\n            if (links.length > 0) {\n                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                        maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                    }\n                }\n            }\n        }\n        // Mask out other blocks\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        }\n        // Mask out escaped characters\n        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n        }\n        while (src) {\n            if (!keepPrevChar) {\n                prevChar = '';\n            }\n            keepPrevChar = false;\n            // extensions\n            if (this.options.extensions\n                && this.options.extensions.inline\n                && this.options.extensions.inline.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // escape\n            if (token = this.tokenizer.escape(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // tag\n            if (token = this.tokenizer.tag(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // link\n            if (token = this.tokenizer.link(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // reflink, nolink\n            if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // em & strong\n            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.codespan(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // br\n            if (token = this.tokenizer.br(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // del (gfm)\n            if (token = this.tokenizer.del(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // autolink\n            if (token = this.tokenizer.autolink(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // url (gfm)\n            if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // text\n            // prevent inlineText consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startInline) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startInline.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (token = this.tokenizer.inlineText(cutSrc)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                }\n                keepPrevChar = true;\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        return tokens;\n    }\n}\n\n/**\n * Renderer\n */\nclass _Renderer {\n    options;\n    parser; // set by the parser\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(token) {\n        return '';\n    }\n    code({ text, lang, escaped }) {\n        const langString = (lang || '').match(/^\\S*/)?.[0];\n        const code = text.replace(/\\n$/, '') + '\\n';\n        if (!langString) {\n            return '<pre><code>'\n                + (escaped ? code : escape$1(code, true))\n                + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"language-'\n            + escape$1(langString)\n            + '\">'\n            + (escaped ? code : escape$1(code, true))\n            + '</code></pre>\\n';\n    }\n    blockquote({ tokens }) {\n        const body = this.parser.parse(tokens);\n        return `<blockquote>\\n${body}</blockquote>\\n`;\n    }\n    html({ text }) {\n        return text;\n    }\n    heading({ tokens, depth }) {\n        return `<h${depth}>${this.parser.parseInline(tokens)}</h${depth}>\\n`;\n    }\n    hr(token) {\n        return '<hr>\\n';\n    }\n    list(token) {\n        const ordered = token.ordered;\n        const start = token.start;\n        let body = '';\n        for (let j = 0; j < token.items.length; j++) {\n            const item = token.items[j];\n            body += this.listitem(item);\n        }\n        const type = ordered ? 'ol' : 'ul';\n        const startAttr = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n        return '<' + type + startAttr + '>\\n' + body + '</' + type + '>\\n';\n    }\n    listitem(item) {\n        let itemBody = '';\n        if (item.task) {\n            const checkbox = this.checkbox({ checked: !!item.checked });\n            if (item.loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                    }\n                }\n                else {\n                    item.tokens.unshift({\n                        type: 'text',\n                        raw: checkbox + ' ',\n                        text: checkbox + ' ',\n                    });\n                }\n            }\n            else {\n                itemBody += checkbox + ' ';\n            }\n        }\n        itemBody += this.parser.parse(item.tokens, !!item.loose);\n        return `<li>${itemBody}</li>\\n`;\n    }\n    checkbox({ checked }) {\n        return '<input '\n            + (checked ? 'checked=\"\" ' : '')\n            + 'disabled=\"\" type=\"checkbox\">';\n    }\n    paragraph({ tokens }) {\n        return `<p>${this.parser.parseInline(tokens)}</p>\\n`;\n    }\n    table(token) {\n        let header = '';\n        // header\n        let cell = '';\n        for (let j = 0; j < token.header.length; j++) {\n            cell += this.tablecell(token.header[j]);\n        }\n        header += this.tablerow({ text: cell });\n        let body = '';\n        for (let j = 0; j < token.rows.length; j++) {\n            const row = token.rows[j];\n            cell = '';\n            for (let k = 0; k < row.length; k++) {\n                cell += this.tablecell(row[k]);\n            }\n            body += this.tablerow({ text: cell });\n        }\n        if (body)\n            body = `<tbody>${body}</tbody>`;\n        return '<table>\\n'\n            + '<thead>\\n'\n            + header\n            + '</thead>\\n'\n            + body\n            + '</table>\\n';\n    }\n    tablerow({ text }) {\n        return `<tr>\\n${text}</tr>\\n`;\n    }\n    tablecell(token) {\n        const content = this.parser.parseInline(token.tokens);\n        const type = token.header ? 'th' : 'td';\n        const tag = token.align\n            ? `<${type} align=\"${token.align}\">`\n            : `<${type}>`;\n        return tag + content + `</${type}>\\n`;\n    }\n    /**\n     * span level renderer\n     */\n    strong({ tokens }) {\n        return `<strong>${this.parser.parseInline(tokens)}</strong>`;\n    }\n    em({ tokens }) {\n        return `<em>${this.parser.parseInline(tokens)}</em>`;\n    }\n    codespan({ text }) {\n        return `<code>${text}</code>`;\n    }\n    br(token) {\n        return '<br>';\n    }\n    del({ tokens }) {\n        return `<del>${this.parser.parseInline(tokens)}</del>`;\n    }\n    link({ href, title, tokens }) {\n        const text = this.parser.parseInline(tokens);\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + title + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    }\n    image({ href, title, text }) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = `<img src=\"${href}\" alt=\"${text}\"`;\n        if (title) {\n            out += ` title=\"${title}\"`;\n        }\n        out += '>';\n        return out;\n    }\n    text(token) {\n        return 'tokens' in token && token.tokens ? this.parser.parseInline(token.tokens) : token.text;\n    }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass _TextRenderer {\n    // no need for block level renderers\n    strong({ text }) {\n        return text;\n    }\n    em({ text }) {\n        return text;\n    }\n    codespan({ text }) {\n        return text;\n    }\n    del({ text }) {\n        return text;\n    }\n    html({ text }) {\n        return text;\n    }\n    text({ text }) {\n        return text;\n    }\n    link({ text }) {\n        return '' + text;\n    }\n    image({ text }) {\n        return '' + text;\n    }\n    br() {\n        return '';\n    }\n}\n\n/**\n * Parsing & Compiling\n */\nclass _Parser {\n    options;\n    renderer;\n    textRenderer;\n    constructor(options) {\n        this.options = options || _defaults;\n        this.options.renderer = this.options.renderer || new _Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.renderer.parser = this;\n        this.textRenderer = new _TextRenderer();\n    }\n    /**\n     * Static Parse Method\n     */\n    static parse(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    static parseInline(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    parse(tokens, top = true) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[anyToken.type]) {\n                const genericToken = anyToken;\n                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'space': {\n                    out += this.renderer.space(token);\n                    continue;\n                }\n                case 'hr': {\n                    out += this.renderer.hr(token);\n                    continue;\n                }\n                case 'heading': {\n                    out += this.renderer.heading(token);\n                    continue;\n                }\n                case 'code': {\n                    out += this.renderer.code(token);\n                    continue;\n                }\n                case 'table': {\n                    out += this.renderer.table(token);\n                    continue;\n                }\n                case 'blockquote': {\n                    out += this.renderer.blockquote(token);\n                    continue;\n                }\n                case 'list': {\n                    out += this.renderer.list(token);\n                    continue;\n                }\n                case 'html': {\n                    out += this.renderer.html(token);\n                    continue;\n                }\n                case 'paragraph': {\n                    out += this.renderer.paragraph(token);\n                    continue;\n                }\n                case 'text': {\n                    let textToken = token;\n                    let body = this.renderer.text(textToken);\n                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                        textToken = tokens[++i];\n                        body += '\\n' + this.renderer.text(textToken);\n                    }\n                    if (top) {\n                        out += this.renderer.paragraph({\n                            type: 'paragraph',\n                            raw: body,\n                            text: body,\n                            tokens: [{ type: 'text', raw: body, text: body }],\n                        });\n                    }\n                    else {\n                        out += body;\n                    }\n                    continue;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    parseInline(tokens, renderer) {\n        renderer = renderer || this.renderer;\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[anyToken.type]) {\n                const ret = this.options.extensions.renderers[anyToken.type].call({ parser: this }, anyToken);\n                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(anyToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'escape': {\n                    out += renderer.text(token);\n                    break;\n                }\n                case 'html': {\n                    out += renderer.html(token);\n                    break;\n                }\n                case 'link': {\n                    out += renderer.link(token);\n                    break;\n                }\n                case 'image': {\n                    out += renderer.image(token);\n                    break;\n                }\n                case 'strong': {\n                    out += renderer.strong(token);\n                    break;\n                }\n                case 'em': {\n                    out += renderer.em(token);\n                    break;\n                }\n                case 'codespan': {\n                    out += renderer.codespan(token);\n                    break;\n                }\n                case 'br': {\n                    out += renderer.br(token);\n                    break;\n                }\n                case 'del': {\n                    out += renderer.del(token);\n                    break;\n                }\n                case 'text': {\n                    out += renderer.text(token);\n                    break;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n}\n\nclass _Hooks {\n    options;\n    block;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    static passThroughHooks = new Set([\n        'preprocess',\n        'postprocess',\n        'processAllTokens',\n    ]);\n    /**\n     * Process markdown before marked\n     */\n    preprocess(markdown) {\n        return markdown;\n    }\n    /**\n     * Process HTML after marked is finished\n     */\n    postprocess(html) {\n        return html;\n    }\n    /**\n     * Process all tokens before walk tokens\n     */\n    processAllTokens(tokens) {\n        return tokens;\n    }\n    /**\n     * Provide function to tokenize markdown\n     */\n    provideLexer() {\n        return this.block ? _Lexer.lex : _Lexer.lexInline;\n    }\n    /**\n     * Provide function to parse tokens\n     */\n    provideParser() {\n        return this.block ? _Parser.parse : _Parser.parseInline;\n    }\n}\n\nclass Marked {\n    defaults = _getDefaults();\n    options = this.setOptions;\n    parse = this.parseMarkdown(true);\n    parseInline = this.parseMarkdown(false);\n    Parser = _Parser;\n    Renderer = _Renderer;\n    TextRenderer = _TextRenderer;\n    Lexer = _Lexer;\n    Tokenizer = _Tokenizer;\n    Hooks = _Hooks;\n    constructor(...args) {\n        this.use(...args);\n    }\n    /**\n     * Run callback for every token\n     */\n    walkTokens(tokens, callback) {\n        let values = [];\n        for (const token of tokens) {\n            values = values.concat(callback.call(this, token));\n            switch (token.type) {\n                case 'table': {\n                    const tableToken = token;\n                    for (const cell of tableToken.header) {\n                        values = values.concat(this.walkTokens(cell.tokens, callback));\n                    }\n                    for (const row of tableToken.rows) {\n                        for (const cell of row) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                    }\n                    break;\n                }\n                case 'list': {\n                    const listToken = token;\n                    values = values.concat(this.walkTokens(listToken.items, callback));\n                    break;\n                }\n                default: {\n                    const genericToken = token;\n                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                            const tokens = genericToken[childTokens].flat(Infinity);\n                            values = values.concat(this.walkTokens(tokens, callback));\n                        });\n                    }\n                    else if (genericToken.tokens) {\n                        values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                    }\n                }\n            }\n        }\n        return values;\n    }\n    use(...args) {\n        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n        args.forEach((pack) => {\n            // copy options to new object\n            const opts = { ...pack };\n            // set async to true if it was set to true before\n            opts.async = this.defaults.async || opts.async || false;\n            // ==-- Parse \"addon\" extensions --== //\n            if (pack.extensions) {\n                pack.extensions.forEach((ext) => {\n                    if (!ext.name) {\n                        throw new Error('extension name required');\n                    }\n                    if ('renderer' in ext) { // Renderer extensions\n                        const prevRenderer = extensions.renderers[ext.name];\n                        if (prevRenderer) {\n                            // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function (...args) {\n                                let ret = ext.renderer.apply(this, args);\n                                if (ret === false) {\n                                    ret = prevRenderer.apply(this, args);\n                                }\n                                return ret;\n                            };\n                        }\n                        else {\n                            extensions.renderers[ext.name] = ext.renderer;\n                        }\n                    }\n                    if ('tokenizer' in ext) { // Tokenizer Extensions\n                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                            throw new Error(\"extension level must be 'block' or 'inline'\");\n                        }\n                        const extLevel = extensions[ext.level];\n                        if (extLevel) {\n                            extLevel.unshift(ext.tokenizer);\n                        }\n                        else {\n                            extensions[ext.level] = [ext.tokenizer];\n                        }\n                        if (ext.start) { // Function to check for start of token\n                            if (ext.level === 'block') {\n                                if (extensions.startBlock) {\n                                    extensions.startBlock.push(ext.start);\n                                }\n                                else {\n                                    extensions.startBlock = [ext.start];\n                                }\n                            }\n                            else if (ext.level === 'inline') {\n                                if (extensions.startInline) {\n                                    extensions.startInline.push(ext.start);\n                                }\n                                else {\n                                    extensions.startInline = [ext.start];\n                                }\n                            }\n                        }\n                    }\n                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    }\n                });\n                opts.extensions = extensions;\n            }\n            // ==-- Parse \"overwrite\" extensions --== //\n            if (pack.renderer) {\n                const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                for (const prop in pack.renderer) {\n                    if (!(prop in renderer)) {\n                        throw new Error(`renderer '${prop}' does not exist`);\n                    }\n                    if (['options', 'parser'].includes(prop)) {\n                        // ignore options property\n                        continue;\n                    }\n                    const rendererProp = prop;\n                    const rendererFunc = pack.renderer[rendererProp];\n                    const prevRenderer = renderer[rendererProp];\n                    // Replace renderer with func to run extension, but fall back if false\n                    renderer[rendererProp] = (...args) => {\n                        let ret = rendererFunc.apply(renderer, args);\n                        if (ret === false) {\n                            ret = prevRenderer.apply(renderer, args);\n                        }\n                        return ret || '';\n                    };\n                }\n                opts.renderer = renderer;\n            }\n            if (pack.tokenizer) {\n                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                for (const prop in pack.tokenizer) {\n                    if (!(prop in tokenizer)) {\n                        throw new Error(`tokenizer '${prop}' does not exist`);\n                    }\n                    if (['options', 'rules', 'lexer'].includes(prop)) {\n                        // ignore options, rules, and lexer properties\n                        continue;\n                    }\n                    const tokenizerProp = prop;\n                    const tokenizerFunc = pack.tokenizer[tokenizerProp];\n                    const prevTokenizer = tokenizer[tokenizerProp];\n                    // Replace tokenizer with func to run extension, but fall back if false\n                    // @ts-expect-error cannot type tokenizer function dynamically\n                    tokenizer[tokenizerProp] = (...args) => {\n                        let ret = tokenizerFunc.apply(tokenizer, args);\n                        if (ret === false) {\n                            ret = prevTokenizer.apply(tokenizer, args);\n                        }\n                        return ret;\n                    };\n                }\n                opts.tokenizer = tokenizer;\n            }\n            // ==-- Parse Hooks extensions --== //\n            if (pack.hooks) {\n                const hooks = this.defaults.hooks || new _Hooks();\n                for (const prop in pack.hooks) {\n                    if (!(prop in hooks)) {\n                        throw new Error(`hook '${prop}' does not exist`);\n                    }\n                    if (['options', 'block'].includes(prop)) {\n                        // ignore options and block properties\n                        continue;\n                    }\n                    const hooksProp = prop;\n                    const hooksFunc = pack.hooks[hooksProp];\n                    const prevHook = hooks[hooksProp];\n                    if (_Hooks.passThroughHooks.has(prop)) {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (arg) => {\n                            if (this.defaults.async) {\n                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                    return prevHook.call(hooks, ret);\n                                });\n                            }\n                            const ret = hooksFunc.call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                    }\n                    else {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (...args) => {\n                            let ret = hooksFunc.apply(hooks, args);\n                            if (ret === false) {\n                                ret = prevHook.apply(hooks, args);\n                            }\n                            return ret;\n                        };\n                    }\n                }\n                opts.hooks = hooks;\n            }\n            // ==-- Parse WalkTokens extensions --== //\n            if (pack.walkTokens) {\n                const walkTokens = this.defaults.walkTokens;\n                const packWalktokens = pack.walkTokens;\n                opts.walkTokens = function (token) {\n                    let values = [];\n                    values.push(packWalktokens.call(this, token));\n                    if (walkTokens) {\n                        values = values.concat(walkTokens.call(this, token));\n                    }\n                    return values;\n                };\n            }\n            this.defaults = { ...this.defaults, ...opts };\n        });\n        return this;\n    }\n    setOptions(opt) {\n        this.defaults = { ...this.defaults, ...opt };\n        return this;\n    }\n    lexer(src, options) {\n        return _Lexer.lex(src, options ?? this.defaults);\n    }\n    parser(tokens, options) {\n        return _Parser.parse(tokens, options ?? this.defaults);\n    }\n    parseMarkdown(blockType) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const parse = (src, options) => {\n            const origOpt = { ...options };\n            const opt = { ...this.defaults, ...origOpt };\n            const throwError = this.onError(!!opt.silent, !!opt.async);\n            // throw error if an extension set async to true but parse was called with async: false\n            if (this.defaults.async === true && origOpt.async === false) {\n                return throwError(new Error('marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise.'));\n            }\n            // throw error in case of non string input\n            if (typeof src === 'undefined' || src === null) {\n                return throwError(new Error('marked(): input parameter is undefined or null'));\n            }\n            if (typeof src !== 'string') {\n                return throwError(new Error('marked(): input parameter is of type '\n                    + Object.prototype.toString.call(src) + ', string expected'));\n            }\n            if (opt.hooks) {\n                opt.hooks.options = opt;\n                opt.hooks.block = blockType;\n            }\n            const lexer = opt.hooks ? opt.hooks.provideLexer() : (blockType ? _Lexer.lex : _Lexer.lexInline);\n            const parser = opt.hooks ? opt.hooks.provideParser() : (blockType ? _Parser.parse : _Parser.parseInline);\n            if (opt.async) {\n                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                    .then(src => lexer(src, opt))\n                    .then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens)\n                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                    .then(tokens => parser(tokens, opt))\n                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                    .catch(throwError);\n            }\n            try {\n                if (opt.hooks) {\n                    src = opt.hooks.preprocess(src);\n                }\n                let tokens = lexer(src, opt);\n                if (opt.hooks) {\n                    tokens = opt.hooks.processAllTokens(tokens);\n                }\n                if (opt.walkTokens) {\n                    this.walkTokens(tokens, opt.walkTokens);\n                }\n                let html = parser(tokens, opt);\n                if (opt.hooks) {\n                    html = opt.hooks.postprocess(html);\n                }\n                return html;\n            }\n            catch (e) {\n                return throwError(e);\n            }\n        };\n        return parse;\n    }\n    onError(silent, async) {\n        return (e) => {\n            e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n            if (silent) {\n                const msg = '<p>An error occurred:</p><pre>'\n                    + escape$1(e.message + '', true)\n                    + '</pre>';\n                if (async) {\n                    return Promise.resolve(msg);\n                }\n                return msg;\n            }\n            if (async) {\n                return Promise.reject(e);\n            }\n            throw e;\n        };\n    }\n}\n\nconst markedInstance = new Marked();\nfunction marked(src, opt) {\n    return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\n    marked.setOptions = function (options) {\n        markedInstance.setOptions(options);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n    markedInstance.use(...args);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = _Parser.parse;\nconst lexer = _Lexer.lex;\n\nexport { _Hooks as Hooks, _Lexer as Lexer, Marked, _Parser as Parser, _Renderer as Renderer, _TextRenderer as TextRenderer, _Tokenizer as Tokenizer, _defaults as defaults, _getDefaults as getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n//# sourceMappingURL=marked.esm.js.map\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.19';\nexport const PUBLIC_VERSION = '4';\n","/*! @license DOMPurify 3.1.7 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.1.7/LICENSE */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.DOMPurify = factory());\n})(this, (function () { 'use strict';\n\n  const {\n    entries,\n    setPrototypeOf,\n    isFrozen,\n    getPrototypeOf,\n    getOwnPropertyDescriptor\n  } = Object;\n  let {\n    freeze,\n    seal,\n    create\n  } = Object; // eslint-disable-line import/no-mutable-exports\n  let {\n    apply,\n    construct\n  } = typeof Reflect !== 'undefined' && Reflect;\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return new Func(...args);\n    };\n  }\n  const arrayForEach = unapply(Array.prototype.forEach);\n  const arrayPop = unapply(Array.prototype.pop);\n  const arrayPush = unapply(Array.prototype.push);\n  const stringToLowerCase = unapply(String.prototype.toLowerCase);\n  const stringToString = unapply(String.prototype.toString);\n  const stringMatch = unapply(String.prototype.match);\n  const stringReplace = unapply(String.prototype.replace);\n  const stringIndexOf = unapply(String.prototype.indexOf);\n  const stringTrim = unapply(String.prototype.trim);\n  const objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\n  const regExpTest = unapply(RegExp.prototype.test);\n  const typeErrorCreate = unconstruct(TypeError);\n\n  /**\n   * Creates a new function that calls the given function with a specified thisArg and arguments.\n   *\n   * @param {Function} func - The function to be wrapped and called.\n   * @returns {Function} A new function that calls the given function with a specified thisArg and arguments.\n   */\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      return apply(func, thisArg, args);\n    };\n  }\n\n  /**\n   * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n   *\n   * @param {Function} func - The constructor function to be wrapped and called.\n   * @returns {Function} A new function that constructs an instance of the given constructor function with the provided arguments.\n   */\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return construct(func, args);\n    };\n  }\n\n  /**\n   * Add properties to a lookup table\n   *\n   * @param {Object} set - The set to which elements will be added.\n   * @param {Array} array - The array containing elements to be added to the set.\n   * @param {Function} transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n   * @returns {Object} The modified set with added elements.\n   */\n  function addToSet(set, array) {\n    let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n    let l = array.length;\n    while (l--) {\n      let element = array[l];\n      if (typeof element === 'string') {\n        const lcElement = transformCaseFunc(element);\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n          element = lcElement;\n        }\n      }\n      set[element] = true;\n    }\n    return set;\n  }\n\n  /**\n   * Clean up an array to harden against CSPP\n   *\n   * @param {Array} array - The array to be cleaned.\n   * @returns {Array} The cleaned version of the array\n   */\n  function cleanArray(array) {\n    for (let index = 0; index < array.length; index++) {\n      const isPropertyExist = objectHasOwnProperty(array, index);\n      if (!isPropertyExist) {\n        array[index] = null;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * Shallow clone an object\n   *\n   * @param {Object} object - The object to be cloned.\n   * @returns {Object} A new object that copies the original.\n   */\n  function clone(object) {\n    const newObject = create(null);\n    for (const [property, value] of entries(object)) {\n      const isPropertyExist = objectHasOwnProperty(object, property);\n      if (isPropertyExist) {\n        if (Array.isArray(value)) {\n          newObject[property] = cleanArray(value);\n        } else if (value && typeof value === 'object' && value.constructor === Object) {\n          newObject[property] = clone(value);\n        } else {\n          newObject[property] = value;\n        }\n      }\n    }\n    return newObject;\n  }\n\n  /**\n   * This method automatically checks if the prop is function or getter and behaves accordingly.\n   *\n   * @param {Object} object - The object to look up the getter function in its prototype chain.\n   * @param {String} prop - The property name for which to find the getter function.\n   * @returns {Function} The getter function found in the prototype chain or a fallback function.\n   */\n  function lookupGetter(object, prop) {\n    while (object !== null) {\n      const desc = getOwnPropertyDescriptor(object, prop);\n      if (desc) {\n        if (desc.get) {\n          return unapply(desc.get);\n        }\n        if (typeof desc.value === 'function') {\n          return unapply(desc.value);\n        }\n      }\n      object = getPrototypeOf(object);\n    }\n    function fallbackValue() {\n      return null;\n    }\n    return fallbackValue;\n  }\n\n  const html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n  // SVG\n  const svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n  const svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\n  // List of SVG elements that are disallowed by default.\n  // We still need to know them so that we can do namespace\n  // checks properly in case one wants to add them to\n  // allow-list.\n  const svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n  const mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n\n  // Similarly to SVG, we want to know all MathML elements,\n  // even those that we disallow by default.\n  const mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n  const text = freeze(['#text']);\n\n  const html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\n  const svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n  const mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n  const xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n  // eslint-disable-next-line unicorn/better-regex\n  const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n  const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\n  const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\n  const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n  const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n  const IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n  const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  const ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n  );\n  const DOCTYPE_NAME = seal(/^html$/i);\n  const CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\n  var EXPRESSIONS = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    MUSTACHE_EXPR: MUSTACHE_EXPR,\n    ERB_EXPR: ERB_EXPR,\n    TMPLIT_EXPR: TMPLIT_EXPR,\n    DATA_ATTR: DATA_ATTR,\n    ARIA_ATTR: ARIA_ATTR,\n    IS_ALLOWED_URI: IS_ALLOWED_URI,\n    IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE: ATTR_WHITESPACE,\n    DOCTYPE_NAME: DOCTYPE_NAME,\n    CUSTOM_ELEMENT: CUSTOM_ELEMENT\n  });\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n  const NODE_TYPE = {\n    element: 1,\n    attribute: 2,\n    text: 3,\n    cdataSection: 4,\n    entityReference: 5,\n    // Deprecated\n    entityNode: 6,\n    // Deprecated\n    progressingInstruction: 7,\n    comment: 8,\n    document: 9,\n    documentType: 10,\n    documentFragment: 11,\n    notation: 12 // Deprecated\n  };\n  const getGlobal = function getGlobal() {\n    return typeof window === 'undefined' ? null : window;\n  };\n\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param {TrustedTypePolicyFactory} trustedTypes The policy factory.\n   * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n   * @return {TrustedTypePolicy} The policy created (or null, if Trusted Types\n   * are not supported or creating the policy failed).\n   */\n  const _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n    if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    }\n\n    // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n    let suffix = null;\n    const ATTR_NAME = 'data-tt-policy-suffix';\n    if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n      suffix = purifyHostElement.getAttribute(ATTR_NAME);\n    }\n    const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML(html) {\n          return html;\n        },\n        createScriptURL(scriptUrl) {\n          return scriptUrl;\n        }\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n  function createDOMPurify() {\n    let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n    const DOMPurify = root => createDOMPurify(root);\n\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n    DOMPurify.version = '3.1.7';\n\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n    DOMPurify.removed = [];\n    if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n      return DOMPurify;\n    }\n    let {\n      document\n    } = window;\n    const originalDocument = document;\n    const currentScript = originalDocument.currentScript;\n    const {\n      DocumentFragment,\n      HTMLTemplateElement,\n      Node,\n      Element,\n      NodeFilter,\n      NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n      HTMLFormElement,\n      DOMParser,\n      trustedTypes\n    } = window;\n    const ElementPrototype = Element.prototype;\n    const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n    const remove = lookupGetter(ElementPrototype, 'remove');\n    const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n    const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n    const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n    // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n    if (typeof HTMLTemplateElement === 'function') {\n      const template = document.createElement('template');\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n    let trustedTypesPolicy;\n    let emptyHTML = '';\n    const {\n      implementation,\n      createNodeIterator,\n      createDocumentFragment,\n      getElementsByTagName\n    } = document;\n    const {\n      importNode\n    } = originalDocument;\n    let hooks = {};\n\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n    DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n    const {\n      MUSTACHE_EXPR,\n      ERB_EXPR,\n      TMPLIT_EXPR,\n      DATA_ATTR,\n      ARIA_ATTR,\n      IS_SCRIPT_OR_DATA,\n      ATTR_WHITESPACE,\n      CUSTOM_ELEMENT\n    } = EXPRESSIONS;\n    let {\n      IS_ALLOWED_URI: IS_ALLOWED_URI$1\n    } = EXPRESSIONS;\n\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n    let ALLOWED_TAGS = null;\n    const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n\n    /* Allowed attribute names */\n    let ALLOWED_ATTR = null;\n    const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n\n    /*\n     * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n     * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n     * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n     * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n     */\n    let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false\n      }\n    }));\n\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n    let FORBID_TAGS = null;\n\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n    let FORBID_ATTR = null;\n\n    /* Decide if ARIA attributes are okay */\n    let ALLOW_ARIA_ATTR = true;\n\n    /* Decide if custom data attributes are okay */\n    let ALLOW_DATA_ATTR = true;\n\n    /* Decide if unknown protocols are okay */\n    let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n    /* Decide if self-closing tags in attributes are allowed.\n     * Usually removed due to a mXSS issue in jQuery 3.0 */\n    let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n    let SAFE_FOR_TEMPLATES = false;\n\n    /* Output should be safe even for XML used within HTML and alike.\n     * This means, DOMPurify removes comments when containing risky content.\n     */\n    let SAFE_FOR_XML = true;\n\n    /* Decide if document with <html>... should be returned */\n    let WHOLE_DOCUMENT = false;\n\n    /* Track whether config is already set on this instance of DOMPurify. */\n    let SET_CONFIG = false;\n\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n    let FORCE_BODY = false;\n\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n    let RETURN_DOM = false;\n\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n    let RETURN_DOM_FRAGMENT = false;\n\n    /* Try to return a Trusted Type object instead of a string, return a string in\n     * case Trusted Types are not supported  */\n    let RETURN_TRUSTED_TYPE = false;\n\n    /* Output should be free from DOM clobbering attacks?\n     * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n     */\n    let SANITIZE_DOM = true;\n\n    /* Achieve full DOM Clobbering protection by isolating the namespace of named\n     * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n     *\n     * HTML/DOM spec rules that enable DOM Clobbering:\n     *   - Named Access on Window (§7.3.3)\n     *   - DOM Tree Accessors (§3.1.5)\n     *   - Form Element Parent-Child Relations (§4.10.3)\n     *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n     *   - HTMLCollection (§4.2.10.2)\n     *\n     * Namespace isolation is implemented by prefixing `id` and `name` attributes\n     * with a constant string, i.e., `user-content-`\n     */\n    let SANITIZE_NAMED_PROPS = false;\n    const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n    /* Keep element content when removing element? */\n    let KEEP_CONTENT = true;\n\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n    let IN_PLACE = false;\n\n    /* Allow usage of profiles like html, svg and mathMl */\n    let USE_PROFILES = {};\n\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n    let FORBID_CONTENTS = null;\n    const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n    /* Tags that are safe for data: URIs */\n    let DATA_URI_TAGS = null;\n    const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n    /* Attributes safe for values like \"javascript:\" */\n    let URI_SAFE_ATTRIBUTES = null;\n    const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n    const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n    const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n    /* Document namespace */\n    let NAMESPACE = HTML_NAMESPACE;\n    let IS_EMPTY_INPUT = false;\n\n    /* Allowed XHTML+XML namespaces */\n    let ALLOWED_NAMESPACES = null;\n    const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n\n    /* Parsing of strict XHTML documents */\n    let PARSER_MEDIA_TYPE = null;\n    const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n    const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n    let transformCaseFunc = null;\n\n    /* Keep a reference to config to pass to hooks */\n    let CONFIG = null;\n\n    /* Ideally, do not touch anything below this line */\n    /* ______________________________________________ */\n\n    const formElement = document.createElement('form');\n    const isRegexOrFunction = function isRegexOrFunction(testValue) {\n      return testValue instanceof RegExp || testValue instanceof Function;\n    };\n\n    /**\n     * _parseConfig\n     *\n     * @param  {Object} cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n    const _parseConfig = function _parseConfig() {\n      let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n\n      /* Shield configuration object from tampering */\n      if (!cfg || typeof cfg !== 'object') {\n        cfg = {};\n      }\n\n      /* Shield configuration object from prototype pollution */\n      cfg = clone(cfg);\n      PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n\n      // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n      transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n\n      /* Set configuration parameters */\n      ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n      ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n      URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES),\n      // eslint-disable-line indent\n      cfg.ADD_URI_SAFE_ATTR,\n      // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS),\n      // eslint-disable-line indent\n      cfg.ADD_DATA_URI_TAGS,\n      // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_DATA_URI_TAGS;\n      FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n      FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n      FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n      USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n      ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n      SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n      SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n      IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n      CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n      }\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n      }\n      if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n        CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n      }\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n\n      /* Parse profile info */\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, text);\n        ALLOWED_ATTR = [];\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html$1);\n          addToSet(ALLOWED_ATTR, html);\n        }\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg$1);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl$1);\n          addToSet(ALLOWED_ATTR, mathMl);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n\n      /* Merge configuration parameters */\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n      }\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n      }\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n      }\n      if (cfg.FORBID_CONTENTS) {\n        if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n          FORBID_CONTENTS = clone(FORBID_CONTENTS);\n        }\n        addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n      }\n\n      /* Add #text in case KEEP_CONTENT is set to true */\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      }\n      if (cfg.TRUSTED_TYPES_POLICY) {\n        if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n        }\n        if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n        }\n\n        // Overwrite existing TrustedTypes policy.\n        trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n\n        // Sign local variables required by `sanitize`.\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      } else {\n        // Uninitialized policy, attempt to initialize the internal dompurify policy.\n        if (trustedTypesPolicy === undefined) {\n          trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n        }\n\n        // If creating the internal policy succeeded sign internal variables.\n        if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n          emptyHTML = trustedTypesPolicy.createHTML('');\n        }\n      }\n\n      // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n      if (freeze) {\n        freeze(cfg);\n      }\n      CONFIG = cfg;\n    };\n    const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n    const HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n\n    // Certain elements are allowed in both SVG and HTML\n    // namespace. We need to specify them explicitly\n    // so that they don't get erroneously deleted from\n    // HTML namespace.\n    const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n\n    /* Keep track of all possible SVG and MathML tags\n     * so that we can perform the namespace checks\n     * correctly. */\n    const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n    const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n\n    /**\n     * @param  {Element} element a DOM element whose namespace is being checked\n     * @returns {boolean} Return false if the element has a\n     *  namespace that a spec-compliant parser would never\n     *  return. Return true otherwise.\n     */\n    const _checkValidNamespace = function _checkValidNamespace(element) {\n      let parent = getParentNode(element);\n\n      // In JSDOM, if we're inside shadow DOM, then parentNode\n      // can be null. We just simulate parent in this case.\n      if (!parent || !parent.tagName) {\n        parent = {\n          namespaceURI: NAMESPACE,\n          tagName: 'template'\n        };\n      }\n      const tagName = stringToLowerCase(element.tagName);\n      const parentTagName = stringToLowerCase(parent.tagName);\n      if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return false;\n      }\n      if (element.namespaceURI === SVG_NAMESPACE) {\n        // The only way to switch from HTML namespace to SVG\n        // is via <svg>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'svg';\n        }\n\n        // The only way to switch from MathML to SVG is via`\n        // svg if parent is either <annotation-xml> or MathML\n        // text integration points.\n        if (parent.namespaceURI === MATHML_NAMESPACE) {\n          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n        }\n\n        // We only allow elements that are defined in SVG\n        // spec. All others are disallowed in SVG namespace.\n        return Boolean(ALL_SVG_TAGS[tagName]);\n      }\n      if (element.namespaceURI === MATHML_NAMESPACE) {\n        // The only way to switch from HTML namespace to MathML\n        // is via <math>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'math';\n        }\n\n        // The only way to switch from SVG to MathML is via\n        // <math> and HTML integration points\n        if (parent.namespaceURI === SVG_NAMESPACE) {\n          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n        }\n\n        // We only allow elements that are defined in MathML\n        // spec. All others are disallowed in MathML namespace.\n        return Boolean(ALL_MATHML_TAGS[tagName]);\n      }\n      if (element.namespaceURI === HTML_NAMESPACE) {\n        // The only way to switch from SVG to HTML is via\n        // HTML integration points, and from MathML to HTML\n        // is via MathML text integration points\n        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n\n        // We disallow tags that are specific for MathML\n        // or SVG and should never appear in HTML namespace\n        return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n      }\n\n      // For XHTML and XML documents that support custom namespaces\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return true;\n      }\n\n      // The code should never reach this place (this means\n      // that the element somehow got namespace that is not\n      // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n      // Return false just in case.\n      return false;\n    };\n\n    /**\n     * _forceRemove\n     *\n     * @param  {Node} node a DOM node\n     */\n    const _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, {\n        element: node\n      });\n      try {\n        // eslint-disable-next-line unicorn/prefer-dom-node-remove\n        getParentNode(node).removeChild(node);\n      } catch (_) {\n        remove(node);\n      }\n    };\n\n    /**\n     * _removeAttribute\n     *\n     * @param  {String} name an Attribute name\n     * @param  {Node} node a DOM node\n     */\n    const _removeAttribute = function _removeAttribute(name, node) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: node.getAttributeNode(name),\n          from: node\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: node\n        });\n      }\n      node.removeAttribute(name);\n\n      // We void attribute values for unremovable \"is\"\" attributes\n      if (name === 'is' && !ALLOWED_ATTR[name]) {\n        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n          try {\n            _forceRemove(node);\n          } catch (_) {}\n        } else {\n          try {\n            node.setAttribute(name, '');\n          } catch (_) {}\n        }\n      }\n    };\n\n    /**\n     * _initDocument\n     *\n     * @param  {String} dirty a string of dirty markup\n     * @return {Document} a DOM, filled with the dirty markup\n     */\n    const _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      let doc = null;\n      let leadingWhitespace = null;\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n        // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n        dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n      }\n      const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /*\n       * Use the DOMParser API by default, fallback later if needs be\n       * DOMParser not work for svg when has multiple root element.\n       */\n      if (NAMESPACE === HTML_NAMESPACE) {\n        try {\n          doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n        } catch (_) {}\n      }\n\n      /* Use createHTMLDocument in case DOMParser is not available */\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createDocument(NAMESPACE, 'template', null);\n        try {\n          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n        } catch (_) {\n          // Syntax error if dirtyPayload is invalid xml\n        }\n      }\n      const body = doc.body || doc.documentElement;\n      if (dirty && leadingWhitespace) {\n        body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n      }\n\n      /* Work on whole document or just its body */\n      if (NAMESPACE === HTML_NAMESPACE) {\n        return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n      }\n      return WHOLE_DOCUMENT ? doc.documentElement : body;\n    };\n\n    /**\n     * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n     *\n     * @param  {Node} root The root element or node to start traversing on.\n     * @return {NodeIterator} The created NodeIterator\n     */\n    const _createNodeIterator = function _createNodeIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n    };\n\n    /**\n     * _isClobbered\n     *\n     * @param  {Node} elm element to check for clobbering attacks\n     * @return {Boolean} true if clobbered, false if safe\n     */\n    const _isClobbered = function _isClobbered(elm) {\n      return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\n    };\n\n    /**\n     * Checks whether the given object is a DOM node.\n     *\n     * @param  {Node} object object to check whether it's a DOM node\n     * @return {Boolean} true is object is a DOM node\n     */\n    const _isNode = function _isNode(object) {\n      return typeof Node === 'function' && object instanceof Node;\n    };\n\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode node to work on with the hook\n     * @param  {Object} data additional hook parameters\n     */\n    const _executeHook = function _executeHook(entryPoint, currentNode, data) {\n      if (!hooks[entryPoint]) {\n        return;\n      }\n      arrayForEach(hooks[entryPoint], hook => {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    };\n\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   {Node} currentNode to check for permission to exist\n     * @return  {Boolean} true if node was killed, false if left alive\n     */\n    const _sanitizeElements = function _sanitizeElements(currentNode) {\n      let content = null;\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeElements', currentNode, null);\n\n      /* Check if element is clobbered or can clobber */\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Now let's check the element's type and name */\n      const tagName = transformCaseFunc(currentNode.nodeName);\n\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeElement', currentNode, {\n        tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n\n      /* Detect mXSS attempts abusing namespace confusion */\n      if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove any occurrence of processing instructions */\n      if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove any kind of possibly harmful comments */\n      if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove element if anything forbids its presence */\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Check if we have a custom element to handle */\n        if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n            return false;\n          }\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n            return false;\n          }\n        }\n\n        /* Keep content except for bad-listed elements */\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n          const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n          const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n          if (childNodes && parentNode) {\n            const childCount = childNodes.length;\n            for (let i = childCount - 1; i >= 0; --i) {\n              const childClone = cloneNode(childNodes[i], true);\n              childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n              parentNode.insertBefore(childClone, getNextSibling(currentNode));\n            }\n          }\n        }\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Check whether element has a valid namespace */\n      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Make sure that older browsers don't get fallback-tag mXSS */\n      if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Sanitize element content to be template-safe */\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          content = stringReplace(content, expr, ' ');\n        });\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, {\n            element: currentNode.cloneNode()\n          });\n          currentNode.textContent = content;\n        }\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeElements', currentNode, null);\n      return false;\n    };\n\n    /**\n     * _isValidAttribute\n     *\n     * @param  {string} lcTag Lowercase tag name of containing element.\n     * @param  {string} lcName Lowercase attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n    const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n      if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n          return false;\n        }\n        /* Check value is safe. First, is attr inert? If so, is safe */\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n        return false;\n      } else ;\n      return true;\n    };\n\n    /**\n     * _isBasicCustomElement\n     * checks if at least one dash is included in tagName, and it's not the first char\n     * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n     *\n     * @param {string} tagName name of the tag of the node to sanitize\n     * @returns {boolean} Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n     */\n    const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n      return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n    };\n\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param  {Node} currentNode to sanitize\n     */\n    const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\n      const {\n        attributes\n      } = currentNode;\n\n      /* Check if we have attributes; if not we might have a text node */\n      if (!attributes) {\n        return;\n      }\n      const hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR\n      };\n      let l = attributes.length;\n\n      /* Go backwards over all attributes; safely remove bad ones */\n      while (l--) {\n        const attr = attributes[l];\n        const {\n          name,\n          namespaceURI,\n          value: attrValue\n        } = attr;\n        const lcName = transformCaseFunc(name);\n        let value = name === 'value' ? attrValue : stringTrim(attrValue);\n\n        /* Execute a hook if present */\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n        value = hookEvent.attrValue;\n\n        /* Did the hooks approve of the attribute? */\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n\n        /* Remove attribute */\n        _removeAttribute(name, currentNode);\n\n        /* Did the hooks approve of the attribute? */\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n\n        /* Work around a security issue in jQuery 3.0 */\n        if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n\n        /* Sanitize attribute content to be template-safe */\n        if (SAFE_FOR_TEMPLATES) {\n          arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n            value = stringReplace(value, expr, ' ');\n          });\n        }\n\n        /* Is `value` valid for this attribute? */\n        const lcTag = transformCaseFunc(currentNode.nodeName);\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n\n        /* Full DOM Clobbering protection via namespace isolation,\n         * Prefix id and name attributes with `user-content-`\n         */\n        if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n          // Remove the attribute with this value\n          _removeAttribute(name, currentNode);\n\n          // Prefix the value and later re-create the attribute with the sanitized value\n          value = SANITIZE_NAMED_PROPS_PREFIX + value;\n        }\n\n        /* Work around a security issue with comments inside attributes */\n        if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n\n        /* Handle attributes that require Trusted Types */\n        if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n          if (namespaceURI) ; else {\n            switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n              case 'TrustedHTML':\n                {\n                  value = trustedTypesPolicy.createHTML(value);\n                  break;\n                }\n              case 'TrustedScriptURL':\n                {\n                  value = trustedTypesPolicy.createScriptURL(value);\n                  break;\n                }\n            }\n          }\n        }\n\n        /* Handle invalid data-* attribute set by try-catching it */\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n          if (_isClobbered(currentNode)) {\n            _forceRemove(currentNode);\n          } else {\n            arrayPop(DOMPurify.removed);\n          }\n        } catch (_) {}\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  {DocumentFragment} fragment to iterate over recursively\n     */\n    const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      let shadowNode = null;\n      const shadowIterator = _createNodeIterator(fragment);\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(shadowNode)) {\n          continue;\n        }\n\n        /* Deep shadow DOM detected */\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(shadowNode);\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n\n    /**\n     * Sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} cfg object\n     */\n    // eslint-disable-next-line complexity\n    DOMPurify.sanitize = function (dirty) {\n      let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let body = null;\n      let importedNode = null;\n      let currentNode = null;\n      let returnNode = null;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n      IS_EMPTY_INPUT = !dirty;\n      if (IS_EMPTY_INPUT) {\n        dirty = '<!-->';\n      }\n\n      /* Stringify, in case dirty is an object */\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        if (typeof dirty.toString === 'function') {\n          dirty = dirty.toString();\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        } else {\n          throw typeErrorCreate('toString is not a function');\n        }\n      }\n\n      /* Return dirty HTML if DOMPurify cannot run */\n      if (!DOMPurify.isSupported) {\n        return dirty;\n      }\n\n      /* Assign config vars */\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n\n      /* Clean up removed elements */\n      DOMPurify.removed = [];\n\n      /* Check if dirty is correctly typed for IN_PLACE */\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n      if (IN_PLACE) {\n        /* Do some early pre-sanitization to avoid unsafe root nodes */\n        if (dirty.nodeName) {\n          const tagName = transformCaseFunc(dirty.nodeName);\n          if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n            throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n          }\n        }\n      } else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!---->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n        if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n\n        /* Initialize the document to work on */\n        body = _initDocument(dirty);\n\n        /* Check we have a DOM node from the data */\n        if (!body) {\n          return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n        }\n      }\n\n      /* Remove first element node (ours) if FORCE_BODY is set */\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n\n      /* Get node iterator */\n      const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n\n      /* Now start iterating over the created document */\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(currentNode)) {\n          continue;\n        }\n\n        /* Shadow DOM detected, sanitize it */\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(currentNode);\n      }\n\n      /* If we sanitized `dirty` in-place, return it. */\n      if (IN_PLACE) {\n        return dirty;\n      }\n\n      /* Return sanitized string or DOM */\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-dom-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n        if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n        return returnNode;\n      }\n      let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n      /* Serialize doctype if allowed */\n      if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n        serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n      }\n\n      /* Sanitize final string template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          serializedHTML = stringReplace(serializedHTML, expr, ' ');\n        });\n      }\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n\n    /**\n     * Public method to set the configuration once\n     * setConfig\n     *\n     * @param {Object} cfg configuration object\n     */\n    DOMPurify.setConfig = function () {\n      let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _parseConfig(cfg);\n      SET_CONFIG = true;\n    };\n\n    /**\n     * Public method to remove the configuration\n     * clearConfig\n     *\n     */\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n\n    /**\n     * Public method to check if an attribute value is valid.\n     * Uses last set config, if any. Otherwise, uses config defaults.\n     * isValidAttribute\n     *\n     * @param  {String} tag Tag name of containing element.\n     * @param  {String} attr Attribute name.\n     * @param  {String} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n     */\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n      const lcTag = transformCaseFunc(tag);\n      const lcName = transformCaseFunc(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n\n    /**\n     * AddHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint entry point for the hook to add\n     * @param {Function} hookFunction function to execute\n     */\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n      hooks[entryPoint] = hooks[entryPoint] || [];\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n\n    /**\n     * RemoveHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint entry point for the hook to remove\n     * @return {Function} removed(popped) hook\n     */\n    DOMPurify.removeHook = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        return arrayPop(hooks[entryPoint]);\n      }\n    };\n\n    /**\n     * RemoveHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint entry point for the hooks to remove\n     */\n    DOMPurify.removeHooks = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        hooks[entryPoint] = [];\n      }\n    };\n\n    /**\n     * RemoveAllHooks\n     * Public method to remove all DOMPurify hooks\n     */\n    DOMPurify.removeAllHooks = function () {\n      hooks = {};\n    };\n    return DOMPurify;\n  }\n  var purify = createDOMPurify();\n\n  return purify;\n\n}));\n//# sourceMappingURL=purify.js.map\n","module.exports = function(md, options) {\n  options = options || {};\n  options.listUnicodeChar = options.hasOwnProperty('listUnicodeChar') ? options.listUnicodeChar : false;\n  options.stripListLeaders = options.hasOwnProperty('stripListLeaders') ? options.stripListLeaders : true;\n  options.gfm = options.hasOwnProperty('gfm') ? options.gfm : true;\n  options.useImgAltText = options.hasOwnProperty('useImgAltText') ? options.useImgAltText : true;\n  options.abbr = options.hasOwnProperty('abbr') ? options.abbr : false;\n  options.replaceLinksWithURL = options.hasOwnProperty('replaceLinksWithURL') ? options.replaceLinksWithURL : false;\n  options.htmlTagsToSkip = options.hasOwnProperty('htmlTagsToSkip') ? options.htmlTagsToSkip : [];\n  options.throwError = options.hasOwnProperty('throwError') ? options.throwError : false;\n\n  var output = md || '';\n\n  // Remove horizontal rules (stripListHeaders conflict with this rule, which is why it has been moved to the top)\n  output = output.replace(/^(-\\s*?|\\*\\s*?|_\\s*?){3,}\\s*/gm, '');\n\n  try {\n    if (options.stripListLeaders) {\n      if (options.listUnicodeChar)\n        output = output.replace(/^([\\s\\t]*)([\\*\\-\\+]|\\d+\\.)\\s+/gm, options.listUnicodeChar + ' $1');\n      else\n        output = output.replace(/^([\\s\\t]*)([\\*\\-\\+]|\\d+\\.)\\s+/gm, '$1');\n    }\n    if (options.gfm) {\n      output = output\n      // Header\n        .replace(/\\n={2,}/g, '\\n')\n        // Fenced codeblocks\n        .replace(/~{3}.*\\n/g, '')\n        // Strikethrough\n        .replace(/~~/g, '')\n        // Fenced codeblocks\n        .replace(/`{3}.*\\n/g, '');\n    }\n    if (options.abbr) {\n      // Remove abbreviations\n      output = output.replace(/\\*\\[.*\\]:.*\\n/, '');\n    }\n    output = output\n    // Remove HTML tags\n      .replace(/<[^>]*>/g, '')\n\n    var htmlReplaceRegex = new RegExp('<[^>]*>', 'g');\n    if (options.htmlTagsToSkip.length > 0) {\n      // Using negative lookahead. Eg. (?!sup|sub) will not match 'sup' and 'sub' tags.\n      var joinedHtmlTagsToSkip = '(?!' + options.htmlTagsToSkip.join(\"|\") + ')';\n\n      // Adding the lookahead literal with the default regex for html. Eg./<(?!sup|sub)[^>]*>/ig\n      htmlReplaceRegex = new RegExp(\n          '<' +\n          joinedHtmlTagsToSkip +\n          '[^>]*>', \n          'ig'\n      );\n    }\n\n    output = output\n      // Remove HTML tags\n      .replace(htmlReplaceRegex, '')\n      // Remove setext-style headers\n      .replace(/^[=\\-]{2,}\\s*$/g, '')\n      // Remove footnotes?\n      .replace(/\\[\\^.+?\\](\\: .*?$)?/g, '')\n      .replace(/\\s{0,2}\\[.*?\\]: .*?$/g, '')\n      // Remove images\n      .replace(/\\!\\[(.*?)\\][\\[\\(].*?[\\]\\)]/g, options.useImgAltText ? '$1' : '')\n      // Remove inline links\n      .replace(/\\[([^\\]]*?)\\][\\[\\(].*?[\\]\\)]/g, options.replaceLinksWithURL ? '$2' : '$1')\n      // Remove blockquotes\n      .replace(/^(\\n)?\\s{0,3}>\\s?/gm, '$1')\n      // .replace(/(^|\\n)\\s{0,3}>\\s?/g, '\\n\\n')\n      // Remove reference-style links?\n      .replace(/^\\s{1,2}\\[(.*?)\\]: (\\S+)( \".*?\")?\\s*$/g, '')\n      // Remove atx-style headers\n      .replace(/^(\\n)?\\s{0,}#{1,6}\\s*( (.+))? +#+$|^(\\n)?\\s{0,}#{1,6}\\s*( (.+))?$/gm, '$1$3$4$6')\n      // Remove * emphasis\n      .replace(/([\\*]+)(\\S)(.*?\\S)??\\1/g, '$2$3')\n      // Remove _ emphasis. Unlike *, _ emphasis gets rendered only if \n      //   1. Either there is a whitespace character before opening _ and after closing _.\n      //   2. Or _ is at the start/end of the string.\n      .replace(/(^|\\W)([_]+)(\\S)(.*?\\S)??\\2($|\\W)/g, '$1$3$4$5')\n      // Remove code blocks\n      .replace(/(`{3,})(.*?)\\1/gm, '$2')\n      // Remove inline code\n      .replace(/`(.+?)`/g, '$1')\n      // // Replace two or more newlines with exactly two? Not entirely sure this belongs here...\n      // .replace(/\\n{2,}/g, '\\n\\n')\n      // // Remove newlines in a paragraph\n      // .replace(/(\\S+)\\n\\s*(\\S+)/g, '$1 $2')\n      // Replace strike through\n      .replace(/~(.*?)~/g, '$1');\n  } catch(e) {\n    if (options.throwError) throw e;\n\n    console.error(\"remove-markdown encountered error: %s\", e);\n    return md;\n  }\n  return output;\n};\n","// src/utils/assetHelper.js\r\nexport function getAssetPath(assetType, filename, assetPaths) {\r\n  if (!filename) return '';\r\n  \r\n  const typeMap = {\r\n    'character': 'characters',\r\n    'background': 'backgrounds',\r\n    'sound': 'sounds',\r\n    'music': 'music',\r\n    'style': 'styles'\r\n    // Remove 'full' and 'close' if they're no longer used\r\n  };\r\n\r\n  const pathType = typeMap[assetType];\r\n\r\n  if (pathType && assetPaths[pathType]) {\r\n    // Remove any leading and trailing slashes to ensure relative paths\r\n    const sanitizedPath = assetPaths[pathType].replace(/^\\/+|\\/+$/g, '');\r\n    console.log(`${sanitizedPath}/${filename}`)\r\n    return `${sanitizedPath}/${filename}`;\r\n  }\r\n\r\n  console.warn(`Asset type \"${assetType}\" is not defined in assetPaths.`);\r\n  return filename; // Fallback to filename if pathType not found\r\n}\r\n","// src/utils/transitions.js\r\nimport { cubicOut } from 'svelte/easing';\r\nimport { fade } from 'svelte/transition'; // Import Svelte's built-in fade\r\nimport { scale } from 'svelte/transition'; // Import Svelte's built-in scale\r\n\r\n// Define the different transition effects\r\nexport const transitions = {\r\n  no_effect: {\r\n    name: null,\r\n    duration: 0\r\n  },\r\n  fade_short: {\r\n    name: fade, // Directly use Svelte's fade transition\r\n    duration: 500 // 0.5 seconds\r\n  },\r\n  fade_long: {\r\n    name: fade, // Directly use Svelte's fade transition\r\n    duration: 2000 // 2 seconds\r\n  },\r\n  fade_scale: {\r\n    name: 'fadeScale', // Custom transition name\r\n    duration: 700 // 0.7 seconds\r\n  }\r\n};\r\n\r\n// Function to get transition based on the slide\r\nexport function getTransition(slide) {\r\n  return transitions[slide.transition] || transitions.no_effect;\r\n}\r\n\r\n/**\r\n * Custom fade transition with customizable duration.\r\n * @param {Object} params - Transition parameters.\r\n * @param {number} params.duration - Duration of the transition in milliseconds.\r\n */\r\nexport function customFade(node, { duration = 500 }) {\r\n  return {\r\n    duration,\r\n    css: t => `\r\n      opacity: ${t}\r\n    `\r\n  };\r\n}\r\n\r\n/**\r\n * Custom fly transition with direction and duration.\r\n * @param {Object} params - Transition parameters.\r\n * @param {string} params.direction - Direction from which the element flies in ('left', 'right', 'up', 'down').\r\n * @param {number} params.duration - Duration of the transition in milliseconds.\r\n */\r\nexport function customFly(node, { direction = 'left', duration = 500 }) {\r\n  let x = 0;\r\n  let y = 0;\r\n\r\n  switch(direction) {\r\n    case 'left':\r\n      x = -200;\r\n      break;\r\n    case 'right':\r\n      x = 200;\r\n      break;\r\n    case 'up':\r\n      y = -200;\r\n      break;\r\n    case 'down':\r\n      y = 200;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return {\r\n    duration,\r\n    easing: cubicOut,\r\n    css: t => `\r\n      transform: translate(${x * (1 - t)}px, ${y * (1 - t)}px);\r\n      opacity: ${t}\r\n    `\r\n  };\r\n}\r\n\r\n/**\r\n * Combined Fade and Scale Transition\r\n * @param {Object} params - Transition parameters.\r\n * @param {number} params.duration - Duration of the transition in milliseconds.\r\n */\r\nexport function fadeScale(node, { duration = 700 }) {\r\n  return {\r\n    duration,\r\n    easing: cubicOut,\r\n    css: t => `\r\n      opacity: ${t};\r\n      transform: scale(${t});\r\n    `\r\n  };\r\n}\r\n","<!-- src/components/TransitionWrapper.svelte -->\r\n<script>\r\n  import { fade, fly } from 'svelte/transition';\r\n  import { customFade, customFly } from '../utils/transitions.js';\r\n  import { getAssetPath } from '../utils/assetHelper.js';\r\n  \r\n  export let transition = {};\r\n  export let character = {};\r\n  export let assetPaths = {}; // Plain object\r\n  export let imgborder = false; // New prop for border control\r\n  \r\n  /**\r\n   * Determines the appropriate transition function and options based on the transition object.\r\n   * @param {Object} transition - The transition configuration.\r\n   * @returns {Object|null} - Contains the transition type and its options or null if no transition.\r\n   */\r\n  function determineTransition(transition) {\r\n    if (!transition || !transition.type) {\r\n      return null; // No transition specified\r\n    }\r\n    switch (transition.type) {\r\n      case 'fade':\r\n        return { type: 'fade', options: { duration: transition.duration || 500 } };\r\n      case 'dream':\r\n        return { type: 'fade', options: { duration: transition.duration || 1500 } };\r\n      case 'fly':\r\n        return {\r\n          type: 'fly',\r\n          options: {\r\n            x:\r\n              transition.direction === 'left'\r\n                ? -200\r\n                : transition.direction === 'right'\r\n                ? 200\r\n                : 0,\r\n            y:\r\n              transition.direction === 'up'\r\n                ? -200\r\n                : transition.direction === 'down'\r\n                ? 200\r\n                : 0,\r\n            duration: transition.duration || 500,\r\n          },\r\n        };\r\n      case 'customFade':\r\n        return { type: 'customFade', options: { duration: transition.duration || 500 } };\r\n      case 'customFly':\r\n        return {\r\n          type: 'customFly',\r\n          options: {\r\n            direction: transition.direction || 'left',\r\n            duration: transition.duration || 500,\r\n          },\r\n        };\r\n      default:\r\n        return null; // Unrecognized transition type; no transition applied\r\n    }\r\n  }\r\n\r\n  const transitionConfig = determineTransition(transition);\r\n</script>\r\n\r\n<!-- Conditional Blocks to Apply Transitions -->\r\n{#if transitionConfig}\r\n  {#if transitionConfig.type === 'fade'}\r\n    <img\r\n      class:enhanced={imgborder}\r\n      src=\"{getAssetPath('character', character.imageSrc, assetPaths)}\"\r\n      alt=\"{character.speaker || 'Character'}\"\r\n      in:fade={transitionConfig.options}\r\n      out:fade={{ duration: transitionConfig.options.duration || 500 }}\r\n      loading=\"lazy\"\r\n    />\r\n  {:else if transitionConfig.type === 'fly'}\r\n    <img\r\n      class:enhanced={imgborder}\r\n      src=\"{getAssetPath('character', character.imageSrc, assetPaths)}\"\r\n      alt=\"{character.speaker || 'Character'}\"\r\n      in:fly={transitionConfig.options}\r\n      out:fade={{ duration: transitionConfig.options.duration || 500 }}\r\n      loading=\"lazy\"\r\n    />\r\n  {:else if transitionConfig.type === 'customFade'}\r\n    <img\r\n      class:enhanced={imgborder}\r\n      src=\"{getAssetPath('character', character.imageSrc, assetPaths)}\"\r\n      alt=\"{character.speaker || 'Character'}\"\r\n      in:customFade={transitionConfig.options}\r\n      out:fade={{ duration: transitionConfig.options.duration || 500 }}\r\n      loading=\"lazy\"\r\n    />\r\n  {:else if transitionConfig.type === 'customFly'}\r\n    <img\r\n      class:enhanced={imgborder}\r\n      src=\"{getAssetPath('character', character.imageSrc, assetPaths)}\"\r\n      alt=\"{character.speaker || 'Character'}\"\r\n      in:customFly={transitionConfig.options}\r\n      out:fade={{ duration: transitionConfig.options.duration || 500 }}\r\n      loading=\"lazy\"\r\n    />\r\n  {/if}\r\n{:else}\r\n  <!-- No Transition Applied -->\r\n  <img\r\n    class:enhanced={imgborder}\r\n    src=\"{getAssetPath('character', character.imageSrc, assetPaths)}\"\r\n    alt=\"{character.speaker || 'Character'}\"\r\n    loading=\"lazy\"\r\n  />\r\n{/if}\r\n\r\n<style>\r\n  /* Character Image Styling */\r\n  img {\r\n    display: block;\r\n    max-width: 100%;\r\n    height: auto;\r\n  }\r\n\r\n  /* Enhanced styles applied when 'enhanced' class is present */\r\n  img.enhanced {\r\n    border-radius: 20px; /* Rounded corners */\r\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); /* Shadow for depth */\r\n    transition: transform 0.3s ease, box-shadow 0.3s ease; /* Smooth transitions */\r\n  }\r\n\r\n  /* Hover Effects for Enhanced Images */\r\n  img.enhanced:hover {\r\n    transform: scale(1.05); /* Slight zoom on hover */\r\n    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.3); /* Darker shadow on hover */\r\n  }\r\n</style>\r\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","// src/stores.js\r\nimport { writable } from 'svelte/store';\r\n\r\n// Default asset directories\r\nexport const assetPaths = writable({\r\n  characters: '/images/characters/',\r\n  backgrounds: '/images/backgrounds/',\r\n  music: '/music/',\r\n  sounds: '/sounds/',\r\n  styles: '/styles/' // If you have stylesheets or related assets\r\n});\r\n\r\nexport const currentStage = writable(0);\r\nexport const slides = writable([]);\r\nexport const history = writable([]);\r\nexport const backgroundImage = writable('');\r\nexport const currentChapter = writable(0);\r\nexport const backgroundMusic = writable(''); // Initialize as empty\r\nexport const backgroundVolume = writable(0.5); // Default volume set to 50%\r\n\r\n// Add the showBackButton store to control the visibility of the back button\r\nexport const showBackButton = writable(true);\r\n\r\n// Current score\r\nexport const currentScore = writable(0);\r\n\r\n// Total number of questions\r\nexport const totalQuestions = writable(0);\r\n\r\n// Store for quiz scores by quizId\r\nexport const quizScores = writable({});\r\n\r\n// Record player choices\r\nexport const playerChoices = writable([]);\r\n\r\n// Export the current choice (for the current question)\r\nexport const currentChoice = writable(null);\r\n\r\n// **Audio Management Stores and Functions**\r\n\r\n// Track the currently playing audio instance\r\nexport const currentAudio = writable(null);\r\n\r\n// Default volume for sound effects (50%)\r\nexport const soundEffectVolume = writable(0.4);\r\n\r\n// Add the hideReference store - for quizzes and stuff\r\nexport const hideReference = writable(false);\r\n\r\n\r\n/**\r\n * Play a sound with specified volume.\r\n * @param {string} soundPath - The path to the sound file.\r\n * @param {boolean} isMuted - Whether the sound is muted.\r\n * @param {number} [volume=0.5] - Volume level (0.0 to 1.0). Defaults to 50%.\r\n */\r\nexport function playSound(soundPath, isMuted, volume = 0.5) {\r\n  if (soundPath && !isMuted) {\r\n    // Pause and reset any currently playing audio\r\n    currentAudio.subscribe(audio => {\r\n      if (audio) {\r\n        audio.pause();\r\n        audio.currentTime = 0;\r\n      }\r\n    })();\r\n    \r\n    const audio = new Audio(soundPath);\r\n    audio.volume = volume;\r\n    audio.play().catch(error => {\r\n      console.error('Sound effect playback failed:', error);\r\n    });\r\n    \r\n    currentAudio.set(audio);\r\n  }\r\n}\r\n\r\n/**\r\n * Stop the currently playing sound.\r\n */\r\nexport function stopSound() {\r\n  currentAudio.subscribe(audio => {\r\n    if (audio) {\r\n      audio.pause();\r\n      audio.currentTime = 0;\r\n    }\r\n  })();\r\n  currentAudio.set(null);\r\n}\r\n","<!-- src/components/ClickToAdvanceOverlay.svelte -->\r\n<script>\r\n  export let onAdvance = () => {};\r\n\r\n  function handleKeydown(event) {\r\n    if (event.key === 'Enter' || event.key === ' ') {\r\n      event.preventDefault();\r\n      onAdvance();\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .overlay {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* Invisible overlay */\r\n    background: transparent;\r\n    cursor: pointer;\r\n    z-index: 998; /* Ensure it's below elements with higher z-index like buttons */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n</style>\r\n\r\n<div \r\n  class=\"overlay\" \r\n  on:click={onAdvance} \r\n  on:keydown={handleKeydown} \r\n  tabindex=\"0\" \r\n  role=\"button\" \r\n  aria-label=\"Click to advance to the next chapter\"\r\n>\r\n</div>\r\n","<!-- src/slides/DialogueSlide.svelte -->\r\n<script>\r\n  import { onMount } from 'svelte';\r\n  import DOMPurify from 'dompurify';\r\n  import { marked } from 'marked';\r\n  import { getAssetPath } from '../utils/assetHelper.js';\r\n  import TransitionWrapper from '../components/TransitionWrapper.svelte';\r\n  import { playSound } from '../stores.js'; // Import from stores.js\r\n  import ClickToAdvanceOverlay from '../components/ClickToAdvanceOverlay.svelte';\r\n  import { fade } from 'svelte/transition';\r\n\r\n  // Component Props\r\n  export let characters = []; // Array of character objects\r\n  export let dialogueText = '';\r\n  export let background = '';\r\n  export let soundEffect = '';\r\n  export let isMuted = false;\r\n  export let updateSlide = () => {};\r\n  export let assetPaths = {}; // Passed as a plain object\r\n\r\n  // Compute full paths using the utility function\r\n  $: backgroundPath = getAssetPath('background', background, assetPaths);\r\n  $: soundEffectPath = getAssetPath('sound', soundEffect, assetPaths);\r\n\r\n  let sanitizedBlocks = []; // Array to hold sanitized HTML blocks\r\n\r\n  /**\r\n   * Parses the dialogueText into individual blocks,\r\n   * sanitizes each block, and stores them in sanitizedBlocks.\r\n   */\r\n  function parseDialogueBlocks(markdownText) {\r\n    if (!markdownText) {\r\n      sanitizedBlocks = [];\r\n      return;\r\n    }\r\n\r\n    // Split the markdown by double newlines to separate blocks (paragraphs)\r\n    const rawBlocks = markdownText.split('\\n\\n');\r\n    sanitizedBlocks = rawBlocks.map(block => {\r\n      // Convert markdown to HTML\r\n      const html = marked.parse(block);\r\n      // Sanitize the HTML\r\n      return DOMPurify.sanitize(html, {\r\n        ALLOWED_TAGS: [\r\n          'b', 'i', 'em', 'strong', 'a', 'p', 'br', 'ul', 'ol', 'li', 'span',\r\n          'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'img', 'table', 'thead', 'tbody', 'tr', 'th', 'td', 'blockquote', 'code', 'pre'\r\n        ],\r\n        ALLOWED_ATTR: ['href', 'target', 'rel', 'style', 'class', 'src', 'alt']\r\n      });\r\n    });\r\n  }\r\n\r\n  // Function to handle dialogue advance\r\n  function handleDialogueAdvance(event) {\r\n    console.log('DialogueSlide handleDialogueAdvance triggered');\r\n    updateSlide();\r\n    // Removed playSound() from here to prevent double playback\r\n  }\r\n\r\n  // Play sound effect on mount at full volume\r\n  onMount(() => {\r\n    playSound(soundEffectPath, isMuted); // Full volume on mount\r\n  });\r\n\r\n  // Parse and sanitize dialogue blocks whenever 'dialogueText' changes\r\n  $: parseDialogueBlocks(dialogueText);\r\n</script>\r\n\r\n<style>\r\n  /* Container for the dialogue slide */\r\n  .dialogue-slide {\r\n    position: relative; /* Establishes a positioning context */\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    background-size: cover;\r\n    background-position: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end; /* Aligns children to the bottom */\r\n    align-items: center; /* Centers children horizontally */\r\n  }\r\n\r\n  /* Portraits Container with Absolute Positioning */\r\n  .portraits-container {\r\n    position: absolute; /* Allows child elements to be positioned absolutely within this container */\r\n    top: 0%; /* Adjust as needed to position portraits near the top */\r\n    left: 50%;\r\n    transform: translateX(-50%); /* Centers the container horizontally */\r\n    width: 100%; /* Full width of the parent */\r\n    height: 80%; /* Occupies 80% of the parent's height */\r\n    pointer-events: none; /* Allows clicks to pass through to underlying elements if needed */\r\n  }\r\n\r\n  /* Character Image Wrapper */\r\n  .character-image {\r\n    position: absolute; /* Positions images absolutely within portraits-container */\r\n    transition: transform 0.3s ease, box-shadow 0.3s ease; /* Smooth transitions for hover effects */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer; /* Indicates interactivity */\r\n  }\r\n\r\n  /* Image Sizes with Relative Dimensions */\r\n  .large {\r\n    width: 40%; /* 40% of the parent's width */\r\n    height: auto; /* Maintains aspect ratio */\r\n  }\r\n\r\n  .medium {\r\n    width: 25%; /* 25% of the parent's width */\r\n    height: auto;\r\n  }\r\n\r\n  .small {\r\n    width: 10%; /* 10% of the parent's width */\r\n    height: auto;\r\n  }\r\n\r\n  /* Ensure images scale proportionally without distortion */\r\n  .large img,\r\n  .medium img,\r\n  .small img {\r\n    width: 100%; /* Fills the container's width */\r\n    height: 100%; /* Fills the container's height */\r\n    object-fit: contain; /* Maintains aspect ratio */\r\n  }\r\n\r\n  /* Positioning Classes */\r\n\r\n  /* Upper Positions */\r\n  .upper-left {\r\n    top: 5%;\r\n    left: 5%;\r\n  }\r\n\r\n  .upper-middle {\r\n    top: 5%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n  }\r\n\r\n  .upper-right {\r\n    top: 5%;\r\n    right: 5%;\r\n  }\r\n\r\n  /* Middle Positions */\r\n  .middle-left {\r\n    top: 25%;\r\n    left: 5%;\r\n  }\r\n\r\n  .middle-middle {\r\n    top: 25%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n  }\r\n\r\n  .middle-right {\r\n    top: 25%;\r\n    right: 5%;\r\n  }\r\n\r\n  /* Lower Positions */\r\n  .lower-left {\r\n    top: 50%;\r\n    left: 10%;\r\n  }\r\n\r\n  .lower-middle {\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n  }\r\n\r\n  .lower-right {\r\n    top: 50%;\r\n    right: 90%;\r\n  }\r\n\r\n  /* Responsive Design */\r\n  @media (max-width: 1024px) {\r\n    .large {\r\n      width: 18%; /* Adjusted percentage for smaller screens */\r\n    }\r\n\r\n    .medium {\r\n      width: 13%;\r\n    }\r\n\r\n    .small {\r\n      width: 9%;\r\n    }\r\n\r\n    /* Adjust positions if necessary */\r\n    .upper-left,\r\n    .upper-right,\r\n    .lower-left,\r\n    .lower-right {\r\n      top: 5%;\r\n      bottom: 5%;\r\n    }\r\n\r\n    .upper-middle,\r\n    .middle-middle,\r\n    .lower-middle {\r\n      transform: translateX(-50%);\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .large {\r\n      width: 16%;\r\n    }\r\n\r\n    .medium {\r\n      width: 11%;\r\n    }\r\n\r\n    .small {\r\n      width: 8%;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    .large {\r\n      width: 20%;\r\n    }\r\n\r\n    .medium {\r\n      width: 12%;\r\n    }\r\n\r\n    .small {\r\n      width: 7%;\r\n    }\r\n\r\n    /* Stack images vertically if necessary */\r\n    .portraits-container {\r\n      top: 5%;\r\n      height: 90%;\r\n    }\r\n\r\n    .upper-left,\r\n    .upper-middle,\r\n    .upper-right,\r\n    .middle-left,\r\n    .middle-middle,\r\n    .middle-right,\r\n    .lower-left,\r\n    .lower-middle,\r\n    .lower-right {\r\n      position: relative;\r\n      transform: none;\r\n      top: auto;\r\n      bottom: auto;\r\n      left: auto;\r\n      right: auto;\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n\r\n  /* Dialogue Box Styling */\r\n  .dialogue-box {\r\n    position: relative; /* Relative to dialogue-slide */\r\n    width: 100%; /* Span the entire width */\r\n    height: 25vh; /* Occupies one-third of the viewport height */\r\n    background: rgba(0, 0, 0, 0.7); /* Semi-transparent dark background */\r\n    color: #fff;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    border-top-left-radius: 15px;\r\n    border-top-right-radius: 15px;\r\n    animation: fadeInUp 0.5s ease-in-out;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 2; /* Ensure it's above characters */\r\n  }\r\n\r\n  .dialogue-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start; /* Align text to the left */\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 10px; /* Optional padding */\r\n    box-sizing: border-box;\r\n    overflow: hidden;\r\n  }\r\n\r\n  /* Dialogue Block Styling */\r\n  .dialogue-block {\r\n    opacity: 0; /* Initial state */\r\n    transform: translateY(20px); /* Initial position */\r\n    animation: fadeInUp 0.5s forwards ease-out; /* Animation properties */\r\n    margin-bottom: 10px; /* Space between blocks */\r\n    width: 100%;\r\n  }\r\n\r\n  /* Fade-In Up Animation */\r\n  @keyframes fadeInUp {\r\n    to {\r\n      opacity: 1;\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n\r\n  /* Reference Styling */\r\n  .reference {\r\n    margin-top: 20px;\r\n    font-size: 0.9em;\r\n    color: #666;\r\n    font-style: italic;\r\n  }\r\n\r\n  .source-label {\r\n    font-weight: bold;\r\n  }\r\n\r\n  /* Responsive Design */\r\n  @media (max-width: 1024px) {\r\n    .dialogue-box {\r\n      padding: 20px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .dialogue-box {\r\n      padding: 15px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    .dialogue-box {\r\n      padding: 10px;\r\n    }\r\n  }\r\n\r\n  /* Additional Styling for Content */\r\n  .dialogue-content a {\r\n    color: #007bff;\r\n    text-decoration: none;\r\n  }\r\n\r\n  .dialogue-content a:hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  .dialogue-content img {\r\n    max-width: 100%;\r\n    height: auto;\r\n    border-radius: 5px;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .dialogue-content table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .dialogue-content th,\r\n  .dialogue-content td {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n  }\r\n\r\n  .dialogue-content th {\r\n    background-color: #f2f2f2;\r\n    text-align: left;\r\n  }\r\n\r\n  .dialogue-content blockquote {\r\n    border-left: 4px solid #ccc;\r\n    padding-left: 16px;\r\n    color: #666;\r\n    margin: 20px 0;\r\n    font-style: italic;\r\n  }\r\n\r\n  .dialogue-content pre {\r\n    background-color: #f5f5f5;\r\n    padding: 10px;\r\n    border-radius: 4px;\r\n    overflow-x: auto;\r\n  }\r\n\r\n  .dialogue-content code {\r\n    background-color: #f5f5f5;\r\n    padding: 2px 4px;\r\n    border-radius: 4px;\r\n  }\r\n</style>\r\n\r\n<!-- DialogueSlide Markup with Block-by-Block Fade-In -->\r\n<div class=\"dialogue-slide\" style=\"background-image: url('{backgroundPath}');\">\r\n  \r\n  <!-- Portraits Container -->\r\n  <div class=\"portraits-container\">\r\n    {#each characters as character, index}\r\n      {#if character}\r\n        <div \r\n          class=\"character-image {character.position} {character.imageType}\"\r\n        >\r\n          <TransitionWrapper\r\n            character={character}\r\n            transition={character.transition}\r\n            assetPaths={assetPaths}\r\n            imgborder={character.imgborder} \r\n          />\r\n        </div>\r\n      {/if}\r\n    {/each}\r\n  </div>\r\n  \r\n  <!-- Dialogue Box -->\r\n  <div\r\n    class=\"dialogue-box\"\r\n    in:fade={{ duration: 500 }}\r\n    out:fade={{ duration: 500 }}\r\n  >\r\n    <div class=\"dialogue-content\">\r\n      {#each sanitizedBlocks as block, index (index)}\r\n        <div\r\n          class=\"dialogue-block\"\r\n          style=\"animation-delay: {index * 300}ms;\"\r\n        >\r\n          {@html block}\r\n        </div>\r\n      {/each}\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- Click-to-Advance Overlay -->\r\n  <ClickToAdvanceOverlay onAdvance={handleDialogueAdvance} />\r\n</div>\r\n","<!-- src/slides/ChoicesSlide.svelte -->\r\n<script>\r\n  import { onMount, onDestroy } from 'svelte';\r\n  import DOMPurify from 'dompurify';\r\n  import { playerChoices, playSound, soundEffectVolume } from '../stores.js'; // Import from stores.js\r\n  import { getAssetPath } from \"../utils/assetHelper.js\"; // Import getAssetPath from the correct file\r\n  import TransitionWrapper from '../components/TransitionWrapper.svelte';\r\n  import { fade } from 'svelte/transition';\r\n  \r\n  // Component Props\r\n  export let choices = []; // Array containing two choice objects\r\n  export let background = ''; // Background image filename\r\n  export let soundEffect = ''; // Sound effect filename\r\n  export let isMuted = false; // Mute state\r\n  export let updateSlide = () => {}; // Function to move to the next slide\r\n  export let assetPaths = {}; // Asset paths object\r\n  \r\n  let showPopup = false; // Controls popup visibility\r\n  let selectedChoice = null; // Stores the player's selected choice\r\n  \r\n  // Compute full paths using the utility function\r\n  $: backgroundPath = getAssetPath('background', background, assetPaths);\r\n  $: soundEffectPath = getAssetPath('sound', soundEffect, assetPaths);\r\n  \r\n  let sanitizedPopupMessage = '';\r\n  \r\n  // Parse and sanitize popup message based on selected choice\r\n  $: if (selectedChoice) {\r\n    sanitizedPopupMessage = selectedChoice.popupMessage \r\n      ? DOMPurify.sanitize(selectedChoice.popupMessage, {\r\n          ALLOWED_TAGS: ['b', 'i', 'em', 'strong', 'a', 'p', 'br', 'span'],\r\n          ALLOWED_ATTR: ['href', 'target', 'rel', 'style', 'class']\r\n        })\r\n      : 'You made a choice. Click anywhere to continue.';\r\n  }\r\n  \r\n  // Handle choice selection\r\n  function selectChoice(choice) {\r\n    console.log(`selectChoice called for: ${choice.choiceText}`); // Logging for debugging\r\n    selectedChoice = choice;\r\n    // Record the decision\r\n    playerChoices.update(existingChoices => [...existingChoices, choice.choiceText]);\r\n    // Play sound effect at 50% volume\r\n    playSound(soundEffectPath, isMuted);\r\n    // Show popup message\r\n    showPopup = true;\r\n  }\r\n  \r\n  // Handle click on popup to proceed\r\n  function handlePopupClick() {\r\n    showPopup = false;\r\n    // Navigate to the next slide based on the selected choice\r\n    updateSlide(selectedChoice.nextId);\r\n  }\r\n  \r\n  // Handle keyboard navigation\r\n  function handleKeydown(event) {\r\n    if (showPopup) return; // Ignore if popup is active\r\n    if (event.key === 'ArrowLeft' && choices[0]) {\r\n      selectChoice(choices[0]);\r\n    } else if (event.key === 'ArrowRight' && choices[1]) {\r\n      selectChoice(choices[1]);\r\n    }\r\n  }\r\n  \r\n  // Play sound effect on mount at full volume\r\n  onMount(() => {\r\n    console.log('ChoicesSlide mounted'); // Logging for debugging\r\n    if (soundEffectPath && !isMuted) {\r\n      playSound(soundEffectPath, isMuted); // Full volume on mount\r\n    }\r\n    window.addEventListener('keydown', handleKeydown);\r\n  });\r\n  \r\n  // Remove keyboard listener on destroy\r\n  onDestroy(() => {\r\n    window.removeEventListener('keydown', handleKeydown);\r\n  });\r\n</script>\r\n\r\n<style>\r\n  .choices-slide {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-size: cover;\r\n    background-position: center;\r\n    display: flex;\r\n    flex-direction: column; /* Stack portraits and choices vertically */\r\n    justify-content: space-between;\r\n    padding: 20px 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  /* Portraits Container */\r\n  .portraits-container {\r\n    flex: 1; /* Approximately one-third of the container's height */\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n    gap: 250px; /* Space between portraits */\r\n    padding: 10px 0;\r\n    box-sizing: border-box;\r\n    position: relative; /* To position child elements */\r\n  }\r\n\r\n  /* Portrait Image Containers */\r\n  .portrait-large {\r\n    width: 40%;\r\n  }\r\n\r\n  .portrait-medium {\r\n    width: 30%;\r\n  }\r\n\r\n  .portrait-small {\r\n    width: 20%;\r\n  }\r\n\r\n  /* Choice Boxes Section */\r\n  .choices-container {\r\n    flex: 2; /* Approximately two-thirds of the container's height */\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: stretch; /* Stretch to fill vertical space */\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  .choice-container {\r\n    width: 45%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  .choice-box {\r\n    width: 100%;\r\n    height: 100%; /* Make choice-box fill the entire height of choice-container */\r\n    background: rgba(255, 255, 255, 0.95);\r\n    border-radius: 15px;\r\n    padding: 25px;\r\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.2);\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  }\r\n\r\n  .choice-box:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 8px 12px rgba(0, 0, 0, 0.3);\r\n  }\r\n\r\n  .choice-text {\r\n    font-size: 1.2em;\r\n    color: #333;\r\n    margin-bottom: 20px;\r\n    flex-grow: 1;\r\n    overflow-y: auto;\r\n    padding-right: 10px; /* To prevent text from hiding behind scrollbar */\r\n  }\r\n\r\n  .choose-button {\r\n    align-self: center; /* Center the button horizontally */\r\n    padding: 20px 40px; /* Increase size: twice the current size */\r\n    font-size: 1.2em; /* Increase font size */\r\n    background-color: #4caf50;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease, transform 0.2s ease;\r\n  }\r\n\r\n  .choose-button:hover {\r\n    background-color: #45a049;\r\n    transform: scale(1.05);\r\n  }\r\n\r\n  /* Popup Styles */\r\n  .popup-overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: transparent; /* Make overlay transparent */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 1000;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .popup-message {\r\n    background: rgba(128, 128, 128, 0.85); /* Grey stripe */\r\n    padding: 15px 30px;\r\n    border-radius: 10px;\r\n    max-width: 80%;\r\n    width: 60%;\r\n    font-size: 1.5em;\r\n    color: #fff;\r\n    text-align: center;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\r\n    transition: opacity 0.3s ease, transform 0.3s ease;\r\n  }\r\n\r\n  /* Responsive Design */\r\n  @media (max-width: 1024px) {\r\n    .portraits-container {\r\n      gap: 30px;\r\n    }\r\n\r\n    .choices-container {\r\n      flex-direction: column;\r\n      align-items: center;\r\n      gap: 20px;\r\n    }\r\n\r\n    .choice-container {\r\n      width: 80%;\r\n    }\r\n\r\n    .choice-text {\r\n      font-size: 1em;\r\n    }\r\n\r\n    .choose-button {\r\n      padding: 16px 32px;\r\n      font-size: 1em;\r\n    }\r\n\r\n    .popup-message {\r\n      font-size: 1.3em;\r\n      padding: 12px 24px;\r\n      width: 70%;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .portraits-container {\r\n      flex-direction: column;\r\n      gap: 20px;\r\n    }\r\n\r\n    .choices-container {\r\n      flex-direction: column;\r\n      align-items: center;\r\n      gap: 20px;\r\n    }\r\n\r\n    .choice-container {\r\n      width: 90%;\r\n    }\r\n\r\n    .choice-text {\r\n      font-size: 0.95em;\r\n    }\r\n\r\n    .choose-button {\r\n      padding: 14px 28px;\r\n      font-size: 0.95em;\r\n    }\r\n\r\n    .popup-message {\r\n      font-size: 1.1em;\r\n      padding: 10px 20px;\r\n      width: 80%;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    .portraits-container {\r\n      gap: 15px;\r\n    }\r\n\r\n    .choice-box {\r\n      padding: 20px;\r\n    }\r\n\r\n    .choice-text {\r\n      font-size: 0.9em;\r\n      margin-bottom: 15px;\r\n    }\r\n\r\n    .choose-button {\r\n      padding: 12px 24px;\r\n      font-size: 0.9em;\r\n    }\r\n\r\n    .popup-message {\r\n      font-size: 1em;\r\n      padding: 8px 16px;\r\n      width: 90%;\r\n    }\r\n  }\r\n</style>\r\n\r\n<!-- Background Image -->\r\n<div class=\"choices-slide\" style=\"background-image: url('{backgroundPath}');\">\r\n  \r\n  <!-- Portraits Container -->\r\n  <div class=\"portraits-container\">\r\n    {#each choices as choice, index}\r\n      {#if choice.character}\r\n        <div class={`portrait-${choice.character.imageType}`}>\r\n          <TransitionWrapper\r\n            character={choice.character}\r\n            transition={choice.character.transition}\r\n            assetPaths={assetPaths}\r\n            imgborder={choice.character.imgborder !== undefined ? choice.character.imgborder : false} \r\n            \r\n          />\r\n        </div>\r\n      {/if}\r\n    {/each}\r\n  </div>\r\n  \r\n  <!-- Choices Container -->\r\n  <div class=\"choices-container\">\r\n    {#each choices as choice, index}\r\n      <div class=\"choice-container\">\r\n        <div class=\"choice-box\">\r\n          <p class=\"choice-text\">{choice.choiceText}</p>\r\n          <button \r\n            class=\"choose-button\" \r\n            on:click|stopPropagation={() => selectChoice(choice)}\r\n            aria-label={`Choose option: ${choice.choiceText}`}\r\n          >\r\n            Choose\r\n          </button>\r\n        </div>\r\n      </div>\r\n    {/each}\r\n  </div>\r\n\r\n  <!-- Popup Message -->\r\n  {#if showPopup}\r\n    <div class=\"popup-overlay\" on:click={handlePopupClick}>\r\n      <div class=\"popup-message\">\r\n        <p>{@html sanitizedPopupMessage}</p>\r\n      </div>\r\n    </div>\r\n  {/if}\r\n</div>\r\n","<!-- src/slides/InfoSlide.svelte -->\r\n<script>\r\n  import { assetPaths, playSound } from '../stores.js';\r\n  import { onMount } from 'svelte';\r\n  import DOMPurify from 'dompurify';\r\n  import { marked } from 'marked';\r\n  import { getAssetPath } from '../utils/assetHelper.js';\r\n  import ClickToAdvanceOverlay from '../components/ClickToAdvanceOverlay.svelte';\r\n  import { fade } from 'svelte/transition';\r\n\r\n  // Component Props\r\n  export let text = ''; // Markdown content from JSON\r\n  export let reference = ''; // Source reference\r\n  export let updateSlide; // Function to advance the slide\r\n  export let soundEffect = ''; // Filename only\r\n  export let background = ''; // Filename only\r\n  export let isMuted = false; // Mute state\r\n\r\n  // Compute full paths using the utility function\r\n  $: backgroundPath = getAssetPath('background', background, $assetPaths);\r\n  $: soundEffectPath = getAssetPath('sound', soundEffect, $assetPaths);\r\n\r\n  let sanitizedBlocks = []; // Array to hold sanitized HTML blocks\r\n\r\n  /**\r\n   * Parses the markdown text into individual blocks,\r\n   * sanitizes each block, and stores them in sanitizedBlocks.\r\n   */\r\n  function parseMarkdownBlocks(markdownText) {\r\n      if (!markdownText) {\r\n          sanitizedBlocks = [];\r\n          return;\r\n      }\r\n\r\n      // Split the markdown by double newlines to separate blocks\r\n      const rawBlocks = markdownText.split('\\n\\n');\r\n      sanitizedBlocks = rawBlocks.map(block => {\r\n          // Convert markdown to HTML\r\n          const html = marked.parse(block);\r\n          // Sanitize the HTML\r\n          return DOMPurify.sanitize(html, {\r\n              ALLOWED_TAGS: [\r\n                  'b', 'i', 'em', 'strong', 'a', 'p', 'br', 'ul', 'ol', 'li', 'span',\r\n                  'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'img', 'table', 'thead', 'tbody', 'tr', 'th', 'td', 'blockquote', 'code', 'pre'\r\n              ],\r\n              ALLOWED_ATTR: ['href', 'target', 'rel', 'style', 'class', 'src', 'alt']\r\n          });\r\n      });\r\n  }\r\n\r\n  // Function to handle click events\r\n  function handleClick(event) {\r\n      console.log('InfoSlide handleClick triggered');\r\n      updateSlide();\r\n  }\r\n\r\n  // Play sound effect on mount at full volume\r\n  onMount(() => {\r\n      playSound(soundEffectPath, isMuted); // Full volume on mount\r\n  });\r\n\r\n  // Parse and sanitize markdown blocks whenever 'text' changes\r\n  $: parseMarkdownBlocks(text);\r\n</script>\r\n\r\n<style>\r\n  /* Container for the info slide */\r\n  .info-slide {\r\n      position: relative;\r\n      width: 100%;\r\n      height: 100%;\r\n      padding: 40px;\r\n      box-sizing: border-box;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      background-size: cover;\r\n      background-position: center;\r\n      overflow: hidden;\r\n  }\r\n\r\n  /* Optional: Dark overlay to enhance text readability */\r\n  .info-slide::before {\r\n      content: '';\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      background: rgba(0, 0, 0, 0.4);\r\n      z-index: 1;\r\n  }\r\n\r\n  /* Info Box Styling */\r\n  .info-box {\r\n      position: relative;\r\n      background: rgba(255, 255, 255, 0.85);\r\n      padding: 30px 40px;\r\n      border-radius: 15px;\r\n      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);\r\n      max-width: 800px;\r\n      width: 100%;\r\n      z-index: 2;\r\n      transform-origin: top center;\r\n  }\r\n\r\n  /* Info Content Styling */\r\n  .info-content {\r\n      font-size: 1.1em;\r\n      color: #333;\r\n      line-height: 1.6;\r\n      overflow-y: auto;\r\n  }\r\n\r\n  /* Reference Styling */\r\n  .reference {\r\n      margin-top: 20px;\r\n      font-size: 0.9em;\r\n      color: #666;\r\n      font-style: italic;\r\n  }\r\n\r\n  .source-label {\r\n      font-weight: bold;\r\n  }\r\n\r\n  /* Animate each block */\r\n  .info-block {\r\n      margin-bottom: 20px;\r\n      opacity: 0; /* Initial state */\r\n      transform: translateY(20px); /* Initial position */\r\n      animation: fadeIn 0.5s forwards ease-out; /* Animation properties */\r\n  }\r\n\r\n  /* Apply animation delay dynamically */\r\n  .info-block:nth-child(1) {\r\n      animation-delay: 0ms;\r\n  }\r\n\r\n  .info-block:nth-child(2) {\r\n      animation-delay: 300ms;\r\n  }\r\n\r\n  .info-block:nth-child(3) {\r\n      animation-delay: 600ms;\r\n  }\r\n\r\n  .info-block:nth-child(4) {\r\n      animation-delay: 900ms;\r\n  }\r\n\r\n  /* Add more nth-child selectors as needed for additional blocks */\r\n\r\n  /* Define the fade-in animation */\r\n  @keyframes fadeIn {\r\n      to {\r\n          opacity: 1;\r\n          transform: translateY(0);\r\n      }\r\n  }\r\n\r\n  /* Responsive Design */\r\n  @media (max-width: 1024px) {\r\n      .info-box {\r\n          padding: 25px 30px;\r\n      }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n      .info-box {\r\n          padding: 20px 25px;\r\n      }\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n      .info-box {\r\n          padding: 15px 20px;\r\n      }\r\n  }\r\n\r\n  /* Additional Styling for Content */\r\n  .info-content a {\r\n      color: #007bff;\r\n      text-decoration: none;\r\n  }\r\n\r\n  .info-content a:hover {\r\n      text-decoration: underline;\r\n  }\r\n\r\n  .info-content img {\r\n      max-width: 100%;\r\n      height: auto;\r\n      border-radius: 5px;\r\n      margin-bottom: 15px;\r\n  }\r\n\r\n  .info-content table {\r\n      width: 100%;\r\n      border-collapse: collapse;\r\n      margin-bottom: 15px;\r\n  }\r\n\r\n  .info-content th,\r\n  .info-content td {\r\n      border: 1px solid #ddd;\r\n      padding: 8px;\r\n  }\r\n\r\n  .info-content th {\r\n      background-color: #f2f2f2;\r\n      text-align: left;\r\n  }\r\n\r\n  .info-content blockquote {\r\n      border-left: 4px solid #ccc;\r\n      padding-left: 16px;\r\n      color: #666;\r\n      margin: 20px 0;\r\n      font-style: italic;\r\n  }\r\n\r\n  .info-content pre {\r\n      background-color: #f5f5f5;\r\n      padding: 10px;\r\n      border-radius: 4px;\r\n      overflow-x: auto;\r\n  }\r\n\r\n  .info-content code {\r\n      background-color: #f5f5f5;\r\n      padding: 2px 4px;\r\n      border-radius: 4px;\r\n  }\r\n</style>\r\n\r\n<!-- Updated Markup with CSS-Based Gradual Reveal -->\r\n<div class=\"info-slide\" style=\"background-image: url('{backgroundPath}');\">\r\n  <!-- Info Box with Combined Transition -->\r\n  <div class=\"info-box\">\r\n      <!-- Animate each block individually -->\r\n      <div class=\"info-content\">\r\n          {#each sanitizedBlocks as block, index (index)}\r\n              <div\r\n                  class=\"info-block\"\r\n                  style=\"animation-delay: {index * 300}ms;\"\r\n              >\r\n                  {@html block}\r\n              </div>\r\n          {/each}\r\n      </div>\r\n  </div>\r\n  \r\n  <!-- Click-to-Advance Overlay -->\r\n  <ClickToAdvanceOverlay onAdvance={handleClick} />\r\n</div>\r\n","<!-- src/slides/QuoteSlide.svelte -->\r\n<script>\r\n  import { fade } from 'svelte/transition';\r\n  import { onMount } from 'svelte';\r\n  import { getAssetPath } from '../utils/assetHelper.js';\r\n  import { assetPaths, playSound } from '../stores.js';\r\n  import { marked } from 'marked';\r\n  import DOMPurify from 'dompurify';\r\n  import ClickToAdvanceOverlay from '../components/ClickToAdvanceOverlay.svelte';\r\n\r\n  export let characterImage = ''; // Path to character image\r\n  export let text = '';           // The quote to display (Markdown supported)\r\n  export let reflectionText = ''; // Self-reflection text\r\n  export let quoteWho = '';       // The person who made the quote\r\n  export let background = '';     // Background image path\r\n  export let soundEffect = '';    // (Optional) Sound effect path\r\n  export let isMuted = false;     // Mute state\r\n  export let updateSlide;         // Function to advance the slide\r\n  export let guess = false;       // Prop to control the guess functionality\r\n\r\n  // Reactive variables to compute asset paths\r\n  $: characterImagePath = getAssetPath('character', characterImage, $assetPaths);\r\n  $: backgroundPath = getAssetPath('background', background, $assetPaths);\r\n  $: soundEffectPath = getAssetPath('sound', soundEffect, $assetPaths);\r\n\r\n  // Initialize `hasRevealed` based on `guess`\r\n  let hasRevealed = !guess;\r\n\r\n  // Compute the displayed character image path\r\n  $: displayedCharacterImagePath = (guess && !hasRevealed)\r\n    ? getAssetPath('character', 'unknown_character.png', $assetPaths)\r\n    : characterImagePath;\r\n\r\n  // Parsed and sanitized HTML from Markdown\r\n  $: sanitizedText = text\r\n    ? DOMPurify.sanitize(marked.parse(text))\r\n    : '';\r\n\r\n  // Parsed and sanitized HTML for reflectionText\r\n  $: sanitizedReflectionText = reflectionText\r\n    ? DOMPurify.sanitize(marked.parse(reflectionText))\r\n    : '';\r\n\r\n  let showReflection = false; // State to manage reflection box visibility\r\n\r\n  let overlayClass = ''; // Class to control overlay transitions\r\n\r\n  function handleClick(event) {\r\n    if (guess && !hasRevealed) {\r\n      // Start Phase 1: Fade-in the overlays\r\n      overlayClass = 'fade-in';\r\n\r\n      // After 0.5s (overlays are fully opaque), swap the image and show the name\r\n      setTimeout(() => {\r\n        hasRevealed = true; // Swap to the real character image and reveal the name\r\n        overlayClass = 'fade-out'; // Start Phase 3: Fade-out the overlays\r\n      }, 500); // 0.5s for fade-in\r\n\r\n      // Remove overlayClass after fade-out completes\r\n      setTimeout(() => {\r\n        overlayClass = ''; // Clean up classes if needed\r\n      }, 1500); // Total of 0.5s fade-in + 1s fade-out\r\n    } else if (!showReflection) {\r\n      if (reflectionText === \"\") {\r\n        updateSlide(); // Advance to next slide if reflection text is empty\r\n        return;\r\n      }\r\n      // Show the reflection text\r\n      showReflection = true;\r\n    } else {\r\n      // Advance to the next slide\r\n      updateSlide();\r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    playSound(soundEffectPath, isMuted);\r\n  });\r\n</script>\r\n\r\n<style>\r\n  .quote-slide {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center; \r\n    height: 100%;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    transition: background-image 0.5s ease-in-out;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .quote-slide.show-reflection {\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  .quote-content {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 20px;\r\n    transition: transform 0.5s ease;\r\n  }\r\n\r\n  /* Push quote-content up when reflection box is shown */\r\n  .quote-slide.show-reflection .quote-content {\r\n    transform: translateY(-10%);\r\n  }\r\n\r\n  .character-image {\r\n    position: relative; /* Position relative for overlay */\r\n    flex: 0 0 320px;\r\n    height: 480px;\r\n    padding-right: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .character-image img {\r\n    object-fit: contain;\r\n    border-radius: 10px;\r\n    border: 2px solid #000;\r\n    display: block;\r\n    margin: auto;\r\n  }\r\n\r\n  /* White overlay for character image */\r\n  .white-overlay {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: white;\r\n    opacity: 0; /* Start fully transparent */\r\n    pointer-events: none;\r\n  }\r\n\r\n  .white-overlay.fade-in {\r\n    transition: opacity 0.5s linear; /* Fade to opaque over 0.5s */\r\n    opacity: 1;\r\n  }\r\n\r\n  .white-overlay.fade-out {\r\n    transition: opacity 1s linear; /* Fade back to transparent over 1s */\r\n    opacity: 0;\r\n  }\r\n\r\n  .quote-container {\r\n    max-width: 500px;\r\n    background: rgba(0, 0, 0, 0.6);\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    line-height: 1.5;\r\n    transition: transform 0.5s ease;\r\n    position: relative; /* Position relative for overlay */\r\n  }\r\n\r\n  .quote-text {\r\n    font-size: 1.3em;\r\n    font-weight: 300;\r\n  }\r\n\r\n  .quote-who-container {\r\n    position: relative;\r\n  }\r\n\r\n  .quote-who {\r\n    margin-top: 15px;\r\n    text-align: right;\r\n    font-size: 1.2em;\r\n    font-weight: bold;\r\n    color: #fff;\r\n  }\r\n\r\n  /* White overlay for quote-who */\r\n  .quote-who-overlay {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 1.5em; /* Adjust to match the height of .quote-who */\r\n    background-color: white;\r\n    opacity: 0; /* Start fully transparent */\r\n    pointer-events: none;\r\n  }\r\n\r\n  .quote-who-overlay.fade-in {\r\n    transition: opacity 0.5s linear; /* Fade to opaque over 0.5s */\r\n    opacity: 1;\r\n  }\r\n\r\n  .quote-who-overlay.fade-out {\r\n    transition: opacity 1s linear; /* Fade back to transparent over 1s */\r\n    opacity: 0;\r\n  }\r\n\r\n  /* Reflection Box Styling */\r\n  .reflection-box {\r\n    width: 100%;\r\n    height: 25vh;\r\n    background: rgba(0, 0, 0, 0.8);\r\n    color: #fff;\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\r\n    z-index: 100;\r\n    animation: fadeInUp 0.5s ease-out;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n    font-size: 1.2em;\r\n    transition: opacity 0.5s ease, transform 0.5s ease;\r\n  }\r\n\r\n  @keyframes fadeInUp {\r\n    from {\r\n      opacity: 0;\r\n      transform: translateY(20px);\r\n    }\r\n    to {\r\n      opacity: 1;\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .quote-slide {\r\n      flex-direction: column;\r\n      padding: 10px;\r\n    }\r\n\r\n    .quote-content {\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n\r\n    .character-image {\r\n      flex: 0 0 auto;\r\n      padding-right: 0;\r\n      padding-bottom: 20px;\r\n      width: 338px;\r\n      height: 507px;\r\n    }\r\n\r\n    .quote-container {\r\n      max-width: 90%;\r\n    }\r\n\r\n    .quote-who {\r\n      text-align: center;\r\n      font-size: 1.2em;\r\n    }\r\n\r\n    .reflection-box {\r\n      height: 30vh;\r\n      font-size: 1em;\r\n      padding: 15px;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div \r\n  class=\"quote-slide {showReflection ? 'show-reflection' : ''}\" \r\n  in:fade={{ duration: 500 }} \r\n  out:fade={{ duration: 500 }}\r\n  style=\"background-image: url('{backgroundPath}'); background-size: cover; background-position: center;\"\r\n>\r\n  <div class=\"quote-content\">\r\n    <div class=\"character-image\">\r\n      <img src=\"{displayedCharacterImagePath}\" alt=\"Image of {quoteWho}\" />\r\n      {#if guess}\r\n        <div class=\"white-overlay {overlayClass}\"></div>\r\n      {/if}\r\n    </div>\r\n    <div class=\"quote-container\">\r\n      <div class=\"quote-text\">\r\n        {@html sanitizedText}\r\n      </div>\r\n      <div class=\"quote-who-container\">\r\n        {#if hasRevealed || !guess}\r\n          <div class=\"quote-who\">\r\n            - {quoteWho}\r\n          </div>\r\n        {/if}\r\n        {#if guess}\r\n          <div class=\"quote-who-overlay {overlayClass}\"></div>\r\n        {/if}\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  {#if showReflection}\r\n    <!-- Reflection Box -->\r\n    <div class=\"reflection-box\">\r\n      {@html sanitizedReflectionText}\r\n    </div>\r\n  {/if}\r\n\r\n  <!-- Click-to-Advance Overlay -->\r\n  <ClickToAdvanceOverlay onAdvance={handleClick} />\r\n</div>\r\n","<!-- src/slides/QuoteQuizSlide.svelte -->\r\n<script>\r\n  import { fade } from 'svelte/transition';\r\n  import { onMount, onDestroy } from 'svelte';\r\n  import { getAssetPath } from '../utils/assetHelper.js';\r\n  import {\r\n    assetPaths,\r\n    currentScore,\r\n    currentChoice,\r\n    playSound,\r\n    hideReference,\r\n    showBackButton, \r\n    totalQuestions\r\n  } from '../stores.js';\r\n  import { marked } from 'marked';\r\n  import DOMPurify from 'dompurify';\r\n  import ClickToAdvanceOverlay from '../components/ClickToAdvanceOverlay.svelte';\r\n\r\n  export let characterImage = 'unknown_character.png'; // Initially 'unknown_character.png'\r\n  export let text = '';           // The quote to display (Markdown supported)\r\n  export let quoteWho = '';       // Initially empty\r\n  export let background = '';     // Background image path\r\n  export let soundEffect = '';    // (Optional) Sound effect path\r\n  export let isMuted = false;     // Mute state\r\n  export let updateSlide;         // Function to advance the slide\r\n  export let choices = [];        // Array of choices\r\n  export let correctAnswer = '';  // Name of the correct answer\r\n  export let reflectionTextCorrect = '';    // Reflection text for correct answer\r\n  export let reflectionTextIncorrect = '';  // Reflection text for incorrect answer\r\n\r\n  // Reactive variables to compute asset paths\r\n  $: backgroundPath = getAssetPath('background', background, $assetPaths);\r\n  $: soundEffectPath = getAssetPath('sound', soundEffect, $assetPaths);\r\n\r\n  // Define reactive variables for correct and incorrect sound paths\r\n  $: correctSoundPath = getAssetPath('sound', 'correct.wav', $assetPaths);\r\n  $: incorrectSoundPath = getAssetPath('sound', 'incorrect.wav', $assetPaths);\r\n\r\n  // Compute displayedCharacterImage\r\n  $: displayedCharacterImage = (hasAnswered && characterImage) ? characterImage : 'unknown_character.png';\r\n\r\n  // Parsed and sanitized HTML from Markdown\r\n  $: sanitizedText = text\r\n    ? DOMPurify.sanitize(marked.parse(text))\r\n    : '';\r\n\r\n  let hasAnswered = false;\r\n  let selectedChoice = null;\r\n  let isCorrect = false; // Tracks if the selected answer is correct\r\n  let bannerTextDisplayed = \"\";\r\n\r\n  let overlayClass = ''; // Class to control overlay transitions\r\n\r\n  function handleClick(event) {\r\n    updateSlide();\r\n  }\r\n\r\n  // Function to handle user selection\r\n  function handleChoiceClick(choice) {\r\n    if (hasAnswered) return; // Prevent multiple selections\r\n    hasAnswered = true;\r\n    selectedChoice = choice;\r\n    currentChoice.set(choice.name);\r\n\r\n    // Reveal the reference after the player has made a choice\r\n    hideReference.set(false);\r\n\r\n    // Start the overlay animation\r\n    overlayClass = 'fade-in';\r\n\r\n    // After 0.5s (overlays are fully opaque), update the character image and name\r\n    setTimeout(() => {\r\n      // Determine if the selected choice is correct\r\n      isCorrect = choice.name === correctAnswer;\r\n\r\n      if (isCorrect) {\r\n        currentScore.update(n => n + 1);\r\n      }\r\n\r\n      // Update the character image and quoteWho\r\n      characterImage = getCharacterImage(correctAnswer);\r\n      quoteWho = correctAnswer;\r\n\r\n      overlayClass = 'fade-out'; // Start fade-out of overlays\r\n\r\n      // Play the appropriate sound\r\n      if (isCorrect) {\r\n        // Play correct sound\r\n        playSound(correctSoundPath, isMuted, 0.5); // Volume set to 50%\r\n        // Update banner text\r\n        bannerTextDisplayed = reflectionTextCorrect;\r\n      } else {\r\n        // Play incorrect sound\r\n        playSound(incorrectSoundPath, isMuted, 0.5); // Volume set to 50%\r\n        // Update banner text\r\n        bannerTextDisplayed = reflectionTextIncorrect || reflectionTextCorrect;\r\n      }\r\n    }, 500); // 0.5s for fade-in\r\n\r\n    // Remove overlayClass after fade-out completes\r\n    setTimeout(() => {\r\n      overlayClass = '';\r\n    }, 1500); // Total of 0.5s fade-in + 1s fade-out\r\n  }\r\n\r\n  // Function to get character image path by name\r\n  function getCharacterImage(name) {\r\n    const choice = choices.find(c => c.name === name);\r\n    return choice ? choice.characterImage : 'unknown_character.png';\r\n  }\r\n\r\n  onMount(() => {\r\n    hideReference.set(true);\r\n    playSound(soundEffectPath, isMuted);\r\n    showBackButton.set(false);\r\n    totalQuestions.update(n => n + 1); // Increment totalQuestions when the slide mounts\r\n  });\r\n\r\n  onDestroy(() => {\r\n    showBackButton.set(true); // Show the back button when this component is destroyed\r\n  });\r\n\r\n</script>\r\n\r\n<style>\r\n  .quote-slide {\r\n    position: relative; /* Ensure overlay is positioned correctly */\r\n    display: flex;\r\n    flex-direction: column; /* Stack content vertically */\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n    transition: background-image 0.5s ease-in-out;\r\n  }\r\n\r\n  .quote-content {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .character-image {\r\n    position: relative;\r\n    width: 320px;\r\n    height: 480px;\r\n    padding-right: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n\r\n  .character-image img {\r\n    object-fit: contain;/* Resize image without distortion */\r\n    border-radius: 10px;\r\n    border: 2px solid #000; /* Black border */\r\n    display: block;     /* Remove inline spacing */\r\n    margin: auto;       /* Center the image within the container */\r\n    }\r\n\r\n  /* White overlay for character image */\r\n  .white-overlay {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: white;\r\n    opacity: 0; /* Start fully transparent */\r\n    pointer-events: none;\r\n  }\r\n\r\n  .white-overlay.fade-in {\r\n    transition: opacity 0.5s linear;\r\n    opacity: 1;\r\n  }\r\n\r\n  .white-overlay.fade-out {\r\n    transition: opacity 1s linear;\r\n    opacity: 0;\r\n  }\r\n\r\n  .quote-container {\r\n    max-width: 500px;\r\n    background: rgba(0, 0, 0, 0.6);\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    line-height: 1.5;\r\n  }\r\n\r\n  .quote-text {\r\n    font-size: 1.3em;\r\n    font-weight: 300;\r\n  }\r\n\r\n  /* Position the quote-who-container relative for the overlay */\r\n  .quote-who-container {\r\n    position: relative;\r\n  }\r\n\r\n  .quote-who {\r\n    margin-top: 15px;\r\n    text-align: right;\r\n    font-size: 1em;\r\n    color: #fff;\r\n  }\r\n\r\n  /* White overlay for quote-who */\r\n  .quote-who-overlay {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 1.2em; /* Adjust to match the height of .quote-who */\r\n    background-color: white;\r\n    opacity: 0; /* Start fully transparent */\r\n    pointer-events: none;\r\n  }\r\n\r\n  .quote-who-overlay.fade-in {\r\n    transition: opacity 0.5s linear;\r\n    opacity: 1;\r\n  }\r\n\r\n  .quote-who-overlay.fade-out {\r\n    transition: opacity 1s linear;\r\n    opacity: 0;\r\n  }\r\n\r\n  /* Choices Container */\r\n  .choices-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    margin-top: 20px;\r\n  }\r\n\r\n  .choice {\r\n    width: 250px;\r\n    margin: 10px;\r\n    padding: 10px;\r\n    background: rgba(0, 0, 0, 0.7); /* Semi-transparent dark background */\r\n    border-radius: 10px;\r\n    text-align: center;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n    border: 2px solid transparent;\r\n    overflow: hidden; /* Hide overflow */\r\n  }\r\n\r\n  .choice.correct {\r\n    background-color: #28a745; /* Green for correct */\r\n    color: #000000;\r\n  }\r\n\r\n  .choice.incorrect {\r\n    background-color: #ff9800; /* Orange for incorrect */\r\n    color: #000000;\r\n  }\r\n\r\n  .choice img {\r\n    width: 200px;      /* Fixed width */\r\n    height: 200px;     /* Fixed height */\r\n    object-fit: contain; /* Resize image without distortion */\r\n    border-radius: 5px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .choice-name {\r\n    margin-top: 10px;\r\n    font-size: 1em;\r\n  }\r\n\r\n  /* Disable pointer events after selection */\r\n  .choices-container.disabled .choice {\r\n    pointer-events: none;\r\n    opacity: 0.6;\r\n  }\r\n  \r\n  /* Reflection Banner Styling */\r\n  .reflection-banner {\r\n      position: absolute; /* Position relative to the nearest positioned ancestor */\r\n      top: 50%;           /* Center vertically within the slide */\r\n      left: 50%;          /* Center horizontally within the slide */\r\n      transform: translate(-50%, -50%); /* Adjust to truly center */\r\n      width: 80%;         /* Adjust as needed to fit within the slide */\r\n      background: rgba(0, 0, 0, 0.85); /* Semi-transparent dark background */\r\n      color: #fff;\r\n      padding: 30px 20px;\r\n      border-radius: 10px;\r\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n      z-index: 300; /* Ensure it's above other elements within the slide */\r\n      text-align: center;\r\n      font-size: 1.2em;\r\n      animation: fadeIn 0.5s ease-out;\r\n    }\r\n\r\n    .reflection-banner.correct {\r\n    /* border: 2px solid #28a745;  Green border for correct */\r\n    }\r\n\r\n    .reflection-banner.incorrect {\r\n    /* border: 2px solid #ff9800;  Orange border for incorrect */\r\n    }\r\n\r\n    /* Optional: Add transition for banner appearance */\r\n    .reflection-banner {\r\n      animation: fadeIn 0.5s ease-out;\r\n  }\r\n\r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n      transform: translate(-50%, -55%);\r\n    }\r\n    to {\r\n      opacity: 1;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .quote-content {\r\n      flex-direction: column;\r\n    }\r\n\r\n    .character-image {\r\n      padding-right: 0;\r\n      padding-bottom: 20px;\r\n    }\r\n\r\n    .quote-container {\r\n      max-width: 90%;\r\n    }\r\n\r\n    .quote-who {\r\n      text-align: center;\r\n    }\r\n\r\n    .choice {\r\n      width: 120px;\r\n    }\r\n\r\n    .choice img {\r\n      width: 80px;\r\n      height: 80px;\r\n    }\r\n    .reflection-banner {\r\n      width: 90%;\r\n      padding: 20px 15px;\r\n      font-size: 1em;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"quote-slide\"\r\n  in:fade={{ duration: 500 }}\r\n  out:fade={{ duration: 500 }}\r\n  style=\"background-image: url('{backgroundPath}'); background-size: cover; background-position: center;\"\r\n>\r\n  <div class=\"quote-content\">\r\n    <div class=\"character-image\">\r\n      <img src=\"{getAssetPath('character', displayedCharacterImage, $assetPaths)}\" alt=\"Image of {quoteWho}\" />\r\n      {#if !hasAnswered || overlayClass}\r\n        <div class=\"white-overlay {overlayClass}\"></div>\r\n      {/if}\r\n    </div>\r\n    <div class=\"quote-container\">\r\n      <div class=\"quote-text\">\r\n        {@html sanitizedText}\r\n      </div>\r\n      <div class=\"quote-who-container\">\r\n        {#if hasAnswered}\r\n          {#if quoteWho}\r\n            <div class=\"quote-who\">\r\n              - {quoteWho}\r\n            </div>\r\n          {/if}\r\n        {/if}\r\n        {#if !hasAnswered || overlayClass}\r\n          <div class=\"quote-who-overlay {overlayClass}\"></div>\r\n        {/if}\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Choices -->\r\n  <div class=\"choices-container {hasAnswered ? 'disabled' : ''}\">\r\n    {#each choices as choice}\r\n      <div\r\n        class=\"choice {hasAnswered ? (choice.name === correctAnswer ? 'correct' : (choice === selectedChoice ? 'incorrect' : '')) : ''}\"\r\n        on:click={() => handleChoiceClick(choice)}\r\n      >\r\n        <img src=\"{getAssetPath('character', choice.characterImage, $assetPaths)}\" alt=\"{choice.name}\" />\r\n        <div class=\"choice-name\">{choice.name}</div>\r\n      </div>\r\n    {/each}\r\n  </div>\r\n\r\n  {#if hasAnswered}\r\n    {#if (reflectionTextCorrect == \"\") && (reflectionTextIncorrect == \"\")}\r\n      <!-- If no text is provided, proceed straight to Click-to-Advance Overlay -->\r\n      <ClickToAdvanceOverlay onAdvance={handleClick} />\r\n    {:else}\r\n      <!-- If some text is provided, proceed with a Reflection Banner first -->\r\n      <div class=\"reflection-banner {isCorrect ? 'correct' : 'incorrect'}\">\r\n        {@html bannerTextDisplayed}\r\n      </div>\r\n      <!-- Click-to-Advance Overlay -->\r\n      <ClickToAdvanceOverlay onAdvance={handleClick} />\r\n    {/if}\r\n  {/if}\r\n</div>\r\n","<!-- src/slides/DreamSlide.svelte -->\r\n<script>\r\n    import { fade } from 'svelte/transition';\r\n    import { onMount } from 'svelte';\r\n    import { getAssetPath } from '../utils/assetHelper.js';\r\n    import { assetPaths, playSound } from '../stores.js';\r\n    import DOMPurify from 'dompurify';\r\n    import { marked } from 'marked';\r\n    import ClickToAdvanceOverlay from '../components/ClickToAdvanceOverlay.svelte';\r\n  \r\n    // Component Props\r\n    export let text = '';          // Markdown content from JSON\r\n    export let soundEffect = '';   // Filename only\r\n    export let updateSlide;        // Function to advance the slide\r\n    export let isMuted = false;    // Mute state\r\n    export let fadeInTime = 0;   // Fade-in time in ms\r\n    export let fadeOutTime = 0; // Fade-out time in ms\r\n  \r\n    // Compute full paths using the utility function\r\n    $: soundEffectPath = getAssetPath('sound', soundEffect, $assetPaths);\r\n  \r\n    // Parsed and sanitized HTML from Markdown\r\n    $: sanitizedText = text\r\n      ? DOMPurify.sanitize(marked.parse(text))\r\n      : '';\r\n  \r\n    // Function to handle click events\r\n    function handleClick(event) {\r\n      updateSlide();\r\n    }\r\n  \r\n    // Play sound effect on mount if provided\r\n    onMount(() => {\r\n      if (soundEffectPath) {\r\n        playSound(soundEffectPath, isMuted, 0.5); // Volume set to 50%\r\n      }\r\n    });\r\n</script>\r\n\r\n<style>\r\n  /* Container for the dream slide */\r\n  .dream-slide {\r\n    position: relative; /* Ensure overlay is positioned correctly */\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #ffffff; /* Pure white background */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n    overflow: hidden;\r\n  }\r\n\r\n  /* Text Container Styling */\r\n  .dream-text {\r\n    max-width: 800px;\r\n    color: #000000; /* Black text */\r\n    font-size: 1.5em;\r\n    text-align: center;\r\n    line-height: 1.6;\r\n    font-family: 'Arial', sans-serif;\r\n  }\r\n\r\n  /* Optional: Add more styling as needed */\r\n</style>\r\n\r\n<div \r\n  class=\"dream-slide\" \r\n  in:fade={{ duration: fadeInTime }} \r\n  out:fade={{ duration: fadeOutTime }}\r\n>\r\n  <div class=\"dream-text\">\r\n    {@html sanitizedText}\r\n  </div>\r\n\r\n  <!-- Click-to-Advance Overlay -->\r\n  <ClickToAdvanceOverlay onAdvance={handleClick} />\r\n</div>\r\n","<script>\r\n    import { onMount, tick } from 'svelte';\r\n    import { fade } from 'svelte/transition';\r\n    import { createEventDispatcher } from 'svelte';\r\n  \r\n    export let screenType = 'start'; // 'start' or 'end'\r\n  \r\n    let isVisible = true;\r\n    let heading = '';\r\n    let subheading = '';\r\n    let quote = '';\r\n    let buttonLabel = '';\r\n    let buttonAction = ''; // Defines what action to perform on click\r\n  \r\n    const dispatch = createEventDispatcher();\r\n  \r\n    // Loading progress variables\r\n    let loadingProgress = 0; // Progress percentage (0-100)\r\n    let isLoading = false; // Indicates if loading is in progress\r\n    let totalAssets = 0; // Total number of assets to load\r\n    let loadedAssets = 0; // Number of assets loaded\r\n  \r\n    // Fetch the flashscreen content based on screenType\r\n    async function fetchContent() {\r\n      try {\r\n        const response = await fetch('flashscreens.json');\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        const screenData = data[screenType] || {};\r\n        heading = screenData.heading || '';\r\n        subheading = screenData.subheading || '';\r\n        quote = screenData.quote || '';\r\n        if (screenData.button) {\r\n          buttonLabel = screenData.button.label || '';\r\n          buttonAction = screenData.button.action || '';\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching flashscreens.json:', error);\r\n        // Set default content and button labels\r\n        heading = screenType === 'start' ? '<h1>Click to Start</h1>' : '<h1>Thank You for Playing</h1>';\r\n        subheading = '';\r\n        quote = screenType === 'start' \r\n          ? '<p><em>\"Default Start Quote\" - Unknown</em></p>' \r\n          : '<p><em>\"Default End Quote\" - Unknown</em></p>';\r\n        buttonLabel = screenType === 'start' ? '' : 'Restart Game';\r\n        buttonAction = screenType === 'start' ? '' : 'reload';\r\n      }\r\n    }\r\n  \r\n    onMount(() => {\r\n      fetchContent();\r\n      if (screenType === 'start') {\r\n        isLoading = true; // Start loading assets\r\n        preloadAssets();\r\n      }\r\n    });\r\n  \r\n    // Function to preload assets\r\n    async function preloadAssets() {\r\n      await tick(); // Wait for the parent to attach event listeners\r\n      dispatch('startLoading', { \r\n        onProgress: updateProgress, \r\n        onComplete: handleLoadingComplete, \r\n        setTotalAssets: setTotalAssets \r\n      });\r\n    }\r\n  \r\n    // Function to set total assets\r\n    function setTotalAssets(total) {\r\n      totalAssets = total;\r\n    }\r\n  \r\n    // Function to update progress\r\n    function updateProgress(loaded) {\r\n      loadedAssets = loaded;\r\n      loadingProgress = totalAssets ? Math.round((loadedAssets / totalAssets) * 100) : 0;\r\n    }\r\n  \r\n    // Function to handle loading completion\r\n    function handleLoadingComplete() {\r\n      isLoading = false;\r\n    }\r\n  \r\n    // Handle click to proceed\r\n    function handleClick() {\r\n      if (!isLoading) {\r\n        isVisible = false; // Start fade-out\r\n      }\r\n    }\r\n  \r\n    // Handle outro end to dispatch the proceed event\r\n    function handleOutroEnd() {\r\n      dispatch('proceed'); // Notify parent to proceed\r\n    }\r\n  </script>\r\n  \r\n  <style>\r\n    .flash-screen {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      height: 100vh;\r\n      width: 100vw;\r\n      background-color: #000; /* Black background */\r\n      color: #fff; /* White text */\r\n      cursor: pointer;\r\n      text-align: center;\r\n      font-family: 'Fira Sans', sans-serif;\r\n      position: relative;\r\n    }\r\n  \r\n    .flash-screen h1 {\r\n      font-size: 3em;\r\n      margin: 0;\r\n      font-weight: 300; /* Light weight */\r\n      animation: fadeIn 2s ease-in-out;\r\n    }\r\n  \r\n    .subheading {\r\n      font-size: 1.5em;\r\n      margin-top: 20px;\r\n      font-weight: 400; /* Regular weight */\r\n    }\r\n  \r\n    .loading-section {\r\n      margin-top: 30px;\r\n    }\r\n  \r\n    .progress-container {\r\n      width: 80%;\r\n      background-color: #ddd;\r\n      border-radius: 5px;\r\n      overflow: hidden;\r\n      margin-top: 10px;\r\n    }\r\n  \r\n    .progress-bar {\r\n      width: 100%;\r\n      background-color: #ddd;\r\n    }\r\n  \r\n    .progress {\r\n      height: 20px;\r\n      background-color: #28a745; /* Green */\r\n      transition: width 0.2s ease;\r\n    }\r\n  \r\n    .progress-container p {\r\n      margin-top: 10px;\r\n      font-size: 1em;\r\n      color: #fff;\r\n    }\r\n  \r\n    .flash-screen p {\r\n      font-size: 1.2em;\r\n      margin-top: 20px;\r\n      font-style: italic;\r\n      font-weight: 400; /* Regular weight */\r\n    }\r\n  \r\n    .click-to-start {\r\n      margin-top: 40px;\r\n      font-size: 1.2em;\r\n      color: #fff;\r\n    }\r\n  \r\n    /* Fade-in animation */\r\n    @keyframes fadeIn {\r\n      from { opacity: 0; }\r\n      to { opacity: 1; }\r\n    }\r\n  </style>\r\n  \r\n  <!-- FlashScreen Markup -->\r\n  {#if isVisible}\r\n    <div \r\n      class=\"flash-screen\" \r\n      on:click={handleClick} \r\n      transition:fade={{ duration: 1000 }} \r\n      on:outroend={handleOutroEnd}\r\n    >\r\n      <!-- Heading -->\r\n      {@html heading}\r\n      \r\n      <!-- Subheading -->\r\n      {#if subheading}\r\n        <div class=\"subheading\">\r\n          {subheading}\r\n        </div>\r\n      {/if}\r\n      \r\n      <!-- Loading Progress Bar between subheading and quote -->\r\n      <div class=\"loading-section\">\r\n        <!-- Loading Bar -->\r\n        <div class=\"progress-container\">\r\n          <div class=\"progress-bar\">\r\n            <div class=\"progress\" style=\"width: {loadingProgress}%\"></div>\r\n          </div>\r\n          <p>Loading... {loadedAssets} of {totalAssets} files ({loadingProgress}%)</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Quote -->\r\n      {@html quote}\r\n  \r\n      <!-- Message to click when loading is complete -->\r\n      {#if !isLoading}\r\n        <div class=\"click-to-start\">\r\n          Click anywhere to begin...\r\n        </div>\r\n      {/if}\r\n  \r\n      <!-- Button for end screen if applicable -->\r\n      {#if screenType === 'end' && buttonLabel}\r\n        <button \r\n          class=\"action-button\" \r\n          on:click|stopPropagation={handleButtonClick} \r\n          aria-label={screenType === 'start' ? 'Start Game' : 'Restart Game'}\r\n        >\r\n          {buttonLabel}\r\n        </button>\r\n      {/if}\r\n    </div>\r\n  {/if}\r\n  ","<!-- src/slides/ScoreSummary.svelte -->\r\n<script>\r\n  import { fade } from 'svelte/transition';\r\n  import { onMount, tick } from 'svelte';\r\n  import { get } from 'svelte/store';\r\n  import { currentScore, totalQuestions, quizScores, assetPaths, playSound } from '../stores.js';\r\n  import { getAssetPath } from '../utils/assetHelper.js';\r\n  import ClickToAdvanceOverlay from '../components/ClickToAdvanceOverlay.svelte';\r\n\r\n  export let updateSlide; // Function to advance the slide\r\n  export let quizId;      // The ID of the current quiz\r\n  export let background = ''; // Optional background image\r\n  export let reference = '';  // Optional reference text\r\n  export let soundEffect = '';    // (Optional) Sound effect path\r\n  export let isMuted = false;     // Mute state\r\n\r\n  // Reactive variables to compute asset paths\r\n  $: backgroundPath = getAssetPath('background', background, $assetPaths);\r\n  $: soundEffectPath = getAssetPath('sound', soundEffect, $assetPaths);\r\n\r\n  // Functions to calculate binomial probability\r\n  function factorial(n) {\r\n    if (n === 0 || n === 1) return 1;\r\n    let result = 1;\r\n    for (let i = 2; i <= n; i++) {\r\n      result *= i;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function combination(n, k) {\r\n    return factorial(n) / (factorial(k) * factorial(n - k));\r\n  }\r\n\r\n  function binomialProbability(n, k, p) {\r\n    return combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);\r\n  }\r\n\r\n  function cumulativeBinomialProbability(n, k, p) {\r\n    let cumulativeProbability = 0;\r\n    for (let i = k; i <= n; i++) {\r\n      cumulativeProbability += binomialProbability(n, i, p);\r\n    }\r\n    return cumulativeProbability;\r\n  }\r\n\r\n  let score = 0;\r\n  let total = 0;\r\n  let probability = 0;\r\n  let percentage = 0;\r\n  let message = '';\r\n\r\n  onMount(async () => {\r\n    await tick(); // Wait for any pending state updates to finish\r\n\r\n    // Get the current score and total questions\r\n    const currentScoreValue = get(currentScore);\r\n    const totalQuestionsValue = get(totalQuestions);\r\n\r\n    // Retrieve any stored scores for this quizId\r\n    const storedQuizData = get(quizScores)[quizId];\r\n\r\n    if (totalQuestionsValue > 0) {\r\n      // If there are answered questions, store them under the quizId in quizScores\r\n      quizScores.update(quizScoresValue => {\r\n        quizScoresValue[quizId] = {\r\n          score: currentScoreValue,\r\n          total: totalQuestionsValue\r\n        };\r\n        return quizScoresValue;\r\n      });\r\n\r\n      // Assign score and total directly\r\n      score = currentScoreValue;\r\n      total = totalQuestionsValue;\r\n\r\n      // Reset currentScore and totalQuestions for the next quiz\r\n      currentScore.set(0);\r\n      totalQuestions.set(0);\r\n    } else if (storedQuizData) {\r\n      // No current questions answered, but have stored data\r\n      score = storedQuizData.score;\r\n      total = storedQuizData.total;\r\n    } else {\r\n      // No data, both current and stored\r\n      score = 0;\r\n      total = 0;\r\n    }\r\n\r\n    // Perform calculations\r\n    const p = 0.25; // Probability of guessing correctly (1 out of 4 choices)\r\n    probability = cumulativeBinomialProbability(total, score, p);\r\n    percentage = total > 0 ? ((score / total) * 100).toFixed(2) : 0;\r\n\r\n    // Determine the message based on performance\r\n    if (percentage == 100) {\r\n      message = \"A perfect score! How many times did you hit the back button?\";\r\n    } else if (percentage >= 75) {\r\n      message = \"Great job! Such a nerd aren't you? (Don't worry I'm the same...)\";\r\n    } else if (percentage >= 50) {\r\n      message = 'Good job! You did really well.';\r\n    } else if (percentage >= 25) {\r\n      message = 'Not bad! There were some tough ones.';\r\n    } else if (percentage > 0) {\r\n      message = \"Don't worry, these questions were designed to be tricky...\";\r\n    } else {\r\n      message = \"We all gotta start from somewhere don't we...\";\r\n    }\r\n\r\n    playSound(soundEffectPath, isMuted); // Play sound on mount\r\n  });\r\n\r\n  function handleClick() {\r\n    // Proceed to the next slide or action\r\n    updateSlide();\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .score-summary {\r\n    position: relative; /* Ensure positioning context for overlays */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100%;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    transition: background-image 0.5s ease-in-out;\r\n    background-size: cover;\r\n    background-position: center;\r\n  }\r\n\r\n  .content {\r\n    background: rgba(0, 0, 0, 0.7); /* Semi-transparent dark background */\r\n    padding: 30px 20px;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    max-width: 800px;\r\n    margin: 0 20px;\r\n  }\r\n\r\n  .content h1 {\r\n    font-size: 2.5em;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .content p {\r\n    font-size: 1.2em;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .content .message {\r\n    font-size: 1.5em;\r\n    font-weight: bold;\r\n    margin-top: 20px;\r\n  }\r\n\r\n  /* Sequential Fade-in Animation */\r\n  .content p {\r\n    opacity: 0;\r\n    animation: fadeInUp 0.8s ease forwards;\r\n  }\r\n\r\n  .content p:nth-child(1) {\r\n    animation-delay: 0.5s;\r\n  }\r\n\r\n  .content p:nth-child(2) {\r\n    animation-delay: 1s;\r\n  }\r\n\r\n  .content p:nth-child(3) {\r\n    animation-delay: 1.5s;\r\n  }\r\n\r\n  .content p:nth-child(4) {\r\n    animation-delay: 2s;\r\n  }\r\n\r\n  @keyframes fadeInUp {\r\n    from {\r\n      opacity: 0;\r\n      transform: translateY(20px);\r\n    }\r\n    to {\r\n      opacity: 1;\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n\r\n  /* Adjust for mobile screens */\r\n  @media (max-width: 768px) {\r\n    .content {\r\n      padding: 20px 15px;\r\n    }\r\n\r\n    .content h1 {\r\n      font-size: 2em;\r\n    }\r\n\r\n    .content p {\r\n      font-size: 1em;\r\n    }\r\n\r\n    .content .message {\r\n      font-size: 1.3em;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div \r\n  class=\"score-summary\" \r\n  in:fade={{ duration: 500 }} \r\n  out:fade={{ duration: 500 }}\r\n  style=\"background-image: url('{backgroundPath}')\"\r\n>\r\n  <div class=\"content\">\r\n    <p>You answered <strong>{score}</strong> out of <strong>{total}</strong> questions correctly.</p>\r\n    <p>Your score: <strong>{Math.round(percentage)}</strong>/100</p>\r\n    <p>\r\n      Probability of achieving this score or better by random guessing*: <br />\r\n      <strong>{(probability * 100).toFixed(2)}%</strong>\r\n    </p>\r\n    \r\n    <p class=\"message\">{message}</p>\r\n  </div>\r\n\r\n  <!-- Click-to-Advance Overlay -->\r\n  <ClickToAdvanceOverlay onAdvance={handleClick} />\r\n</div>\r\n","// src/utils/appLogic.js\r\nimport { slides, currentStage, history, currentChapter, backgroundImage, backgroundMusic, backgroundVolume, assetPaths } from '../stores';\r\nimport { get } from 'svelte/store';\r\nimport { getAssetPath } from './assetHelper.js'; // Ensure this import exists\r\n\r\n// Function to pre-load images and sound effects\r\nexport function preloadImages(slideData) {\r\n  slideData.forEach((slide) => {\r\n    if (slide.background) {\r\n      const img = new Image();\r\n      img.src = getAssetPath('background', slide.background, get(assetPaths));\r\n    }\r\n    // Pre-load sound effects if any\r\n    if (slide.soundEffect) {\r\n      const audio = new Audio();\r\n      audio.src = getAssetPath('sound', slide.soundEffect, get(assetPaths));\r\n    }\r\n  });\r\n}\r\n\r\n// Fetch the slides from the current chapter's JSON file and preload images\r\n/**\r\n * Loads a chapter by fetching its JSON file and updating relevant stores.\r\n */\r\nexport async function loadChapter(chapterIndex) {\r\n  try {\r\n    console.log(`Loading Chapter ${chapterIndex}`);\r\n    const response = await fetch(`chapter${chapterIndex}.json`);\r\n    if (response.ok) {\r\n      const chapterData = await response.json();\r\n      \r\n      // Update slides\r\n      slides.set(chapterData.slides || []);\r\n      \r\n      // Preload images and sounds\r\n      preloadImages(chapterData.slides || []);\r\n      \r\n      // Update background music if specified\r\n      if (chapterData.music) {\r\n        backgroundMusic.set(chapterData.music); // Only the filename\r\n        backgroundVolume.set(chapterData.volume !== undefined ? chapterData.volume : 0.5);\r\n      } else {\r\n        backgroundMusic.set(''); // No music\r\n      }\r\n      \r\n      // Reset current stage and history\r\n      currentStage.set(0);\r\n      console.log(`currentStage reset to 0 for Chapter ${chapterIndex}`);\r\n      \r\n      history.set([]);\r\n      \r\n      // Optionally, update background image if needed\r\n      if (chapterData.backgroundImage) {\r\n        backgroundImage.set(getAssetPath('background', chapterData.backgroundImage, get(assetPaths)));\r\n      }\r\n      \r\n    } else {\r\n      console.error(`Failed to load chapter${chapterIndex}.json`);\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error loading chapter${chapterIndex}.json:`, error);\r\n  }\r\n}\r\n\r\n// Function to update the current slide and save history\r\nexport function updateSlide(nextId = null) {\r\n  const slidesArray = get(slides);\r\n  const currentSlideIndex = get(currentStage);\r\n  const currentSlide = slidesArray[currentSlideIndex];\r\n\r\n  // Determine if the current slide should not be saved to history\r\n  let shouldSaveToHistory = true;\r\n\r\n  // Check if the current slide is of type 'quotequiz' or has 'noHistory' set to true\r\n  if (currentSlide.type === 'quotequiz' || currentSlide.noHistory === true) {\r\n    shouldSaveToHistory = false;\r\n  }\r\n\r\n  // Save current stage to history if shouldSaveToHistory is true\r\n  if (shouldSaveToHistory) {\r\n    history.update(($history) => {\r\n      $history.push(currentSlideIndex);\r\n      return $history;\r\n    });\r\n  }\r\n\r\n  // Determine the new stage\r\n  let newStage = nextId !== null ? nextId : currentSlideIndex + 1;\r\n\r\n  if (newStage < slidesArray.length) {\r\n    // Update current stage\r\n    currentStage.set(newStage);\r\n\r\n    // Update background for the new slide\r\n    const newSlide = slidesArray[newStage];\r\n    if (newSlide && newSlide.background) {\r\n      backgroundImage.set(getAssetPath('background', newSlide.background, get(assetPaths)));\r\n    } else {\r\n      backgroundImage.set(''); // Or set to a default background\r\n    }\r\n  } else {\r\n    console.warn('Reached the end of slides.');\r\n    // Optional: Handle end of slides, e.g., show an end screen or loop back\r\n  }\r\n}\r\n\r\n\r\n// Function to go back to the previous slide\r\nexport function goBack() {\r\n  history.update(($history) => {\r\n    if ($history.length > 0) {\r\n      const previousStage = $history.pop();\r\n      currentStage.set(previousStage); // Go back to the previous slide in history\r\n\r\n      // Update background\r\n      const slidesArray = get(slides);\r\n      if (slidesArray[previousStage] && slidesArray[previousStage].background) {\r\n        backgroundImage.set(getAssetPath('background', slidesArray[previousStage].background, get(assetPaths)));\r\n      } else {\r\n        backgroundImage.set(''); // Or set to a default background\r\n      }\r\n    } else {\r\n      console.warn('No more history to go back to.');\r\n      // Optionally, handle if there's no history left\r\n    }\r\n    return $history;\r\n  });\r\n}\r\n","<script>\n  import './appStyles.css';\n  import { onMount } from 'svelte';\n  import { fade } from 'svelte/transition';\n  import { marked } from 'marked';\n  import DOMPurify from 'dompurify';\n  import removeMarkdown from 'remove-markdown';\n\n  import DialogueSlide from './slides/DialogueSlide.svelte';\n  import ChoicesSlide from './slides/ChoicesSlide.svelte';\n  import InfoSlide from './slides/InfoSlide.svelte';\n  import QuoteSlide from './slides/QuoteSlide.svelte';\n  import QuoteQuizSlide from './slides/QuoteQuizSlide.svelte';\n  import DreamSlide from './slides/DreamSlide.svelte';\n  import FlashScreen from './components/FlashScreen.svelte';\n  import ScoreSummary from './slides/ScoreSummary.svelte';\n  import ClickToAdvanceOverlay from './components/ClickToAdvanceOverlay.svelte';\n\n  // Import stores\n  import { \n    currentStage, \n    slides, \n    history, \n    backgroundImage, \n    currentChapter, \n    backgroundMusic, \n    backgroundVolume, \n    hideReference,\n    showBackButton,\n    assetPaths \n  \n  } from './stores.js';\n\n  // Import utility functions\n  import { getAssetPath } from './utils/assetHelper.js';\n  import { loadChapter, updateSlide, goBack } from './utils/appLogic.js';\n  import { playerChoices } from './stores.js'; // Ensure playerChoices is imported\n  import { collectAssetPaths } from './utils/collectAssetPaths.js';\n\n  let assetsToLoad = []; // List of assets to preload\n\n  // Existing variables\n  let gameStarted = false;\n  let isMuted = false;\n  let backgroundAudio;\n\n  // Progress-related variables\n  let slideCounts = [];\n  let cumulativeSlideCounts = [];\n  let totalSlides = 0;\n  let totalChapters = 3;\n  \n  // State variable to indicate the game has ended\n  let gameEnded = false;\n  \n  // State variables for the confirmation banner\n  let showBanner = false;\n  let copiedReference = '';\n  let sanitizedCopiedReference = '';\n\n  // Current Slide Index (1-based)\n  $: currentSlideIndex = slideCounts\n    .slice(0, $currentChapter)\n    .reduce((a, b) => a + b, 0) + ($currentStage || 0) + 1;\n  \n  // Progress Percentage\n  $: progress = totalSlides ? (currentSlideIndex / totalSlides) * 100 : 0;\n  \n  // Current Slide Number within the Current Chapter\n  $: currentSlideNumberInChapter = ($currentStage || 0) + 1;\n\n  // Updated Slide Counter Text\n  $: slideCounterText = `Slide ${currentSlideNumberInChapter}/${slideCounts[$currentChapter] || 1}`;\n\n  // Chapter Counter Text\n  $: chapterCounterText = `Chapter ${$currentChapter + 1}/${totalChapters}`;\n\n  // Compute Cumulative Slide Counts whenever slideCounts changes\n  $: cumulativeSlideCounts = slideCounts.reduce((acc, count, index) => {\n    acc.push((acc[index - 1] || 0) + count);\n    return acc;\n  }, []);\n\n  // Reset hideReference when currentStage changes\n  $: if ($currentStage !== undefined) {\n    hideReference.set(false);\n  }\n\n\n  // Function to fetch all chapters and count slides\n  async function fetchAllChapters() {\n    const counts = [];\n    let i = 0;\n    const maxChapters = 100; // Set a maximum limit\n\n    while (i < maxChapters) {\n      try {\n        const response = await fetch(`chapter${i}.json`);\n        if (response.ok) {\n          const chapterData = await response.json();\n          const slides = chapterData.slides || [];\n          counts.push(slides.length);\n          i++;\n        } else {\n          console.log(`chapter${i}.json not found.`);\n          break; // Exit the loop if the file is not found\n        }\n      } catch (error) {\n        console.error(`Error fetching chapter${i}.json:`, error);\n        break; // Exit the loop on error\n      }\n    }\n\n    slideCounts = counts;\n    totalSlides = slideCounts.reduce((a, b) => a + b, 0);\n    totalChapters = counts.length; // Update totalChapters dynamically\n  }\n  \n  onMount(() => {\n    fetchAllChapters();\n  });\n  \n    // Function to preload assets with progress tracking\n    async function preloadAssets(event) {\n    console.log('App: preloadAssets function called');\n    const { onProgress, onComplete, setTotalAssets } = event.detail;\n\n    // Ensure chapters are fetched to get totalChapters\n    await fetchAllChapters();\n\n    // Collect all asset paths\n    assetsToLoad = await collectAssetPaths(totalChapters);\n\n    // Set total assets\n    const totalAssets = assetsToLoad.length;\n    setTotalAssets(totalAssets);\n\n    let loadedAssets = 0;\n\n    // Function to update progress\n    function updateProgress() {\n      loadedAssets++;\n      onProgress(loadedAssets);\n    }\n\n    const loadPromises = assetsToLoad.map((assetPath) => {\n      return new Promise((resolve) => {\n        const fileExtension = assetPath.split('.').pop().toLowerCase();\n        let asset;\n\n        if (['png', 'jpg', 'jpeg', 'gif'].includes(fileExtension)) {\n          // Image asset\n          asset = new Image();\n          asset.src = assetPath;\n          asset.onload = () => {\n            updateProgress();\n            resolve();\n          };\n          asset.onerror = () => {\n            console.error(`Failed to load image: ${assetPath}`);\n            updateProgress();\n            resolve();\n          };\n        } else if (['mp3', 'wav', 'ogg'].includes(fileExtension)) {\n          // Audio asset\n          asset = new Audio();\n          asset.src = assetPath;\n          asset.onloadeddata = () => {\n            updateProgress();\n            resolve();\n          };\n          asset.onerror = () => {\n            console.error(`Failed to load audio: ${assetPath}`);\n            updateProgress();\n            resolve();\n          };\n        } else {\n          // Other asset types\n          updateProgress();\n          resolve();\n        }\n      });\n    });\n\n    await Promise.all(loadPromises);\n    console.log('App: All assets loaded');\n    onComplete();\n  }\n\n\n\n  // Function to start the game\n  async function startGame() {\n    await fetchAllChapters(); // Ensure chapters are fetched before starting\n    gameStarted = true;\n    currentChapter.set(0); // Start with Chapter 0\n    await loadChapter(0); // Load Chapter 0\n    currentStage.set(0); // Initialize currentStage\n  }\n  \n  // Function to toggle mute state\n  function toggleMute() {\n    isMuted = !isMuted;\n    if (backgroundAudio) {\n      backgroundAudio.muted = isMuted;\n      if (isMuted) {\n        backgroundAudio.pause();\n      } else {\n        if ($backgroundMusic) {\n          backgroundAudio.play().catch(error => {\n            console.error('Background music playback failed:', error);\n          });\n        }\n      }\n    }\n  }\n\n  // Reactive statement to update audio src and play music when backgroundMusic changes\n  $: if (backgroundAudio && $backgroundMusic) {\n    const fullMusicPath = getAssetPath('music', $backgroundMusic, $assetPaths);\n    if (backgroundAudio.src !== fullMusicPath) { // Prevent resetting src if already correct\n      backgroundAudio.src = fullMusicPath;\n      if (!isMuted) {\n        backgroundAudio.volume = $backgroundVolume; // Set the volume\n        backgroundAudio.play().catch(error => {\n          console.error('Background music playback failed:', error);\n        });\n      }\n    }\n  }\n\n  // Reactive statement to update audio volume when backgroundVolume changes\n  $: if (backgroundAudio) {\n    backgroundAudio.volume = $backgroundVolume;\n  }\n  \n  // Function to advance to the next slide\n  function handleDialogueEnd(nextId = null) {\n    if (nextId !== null) {\n      updateSlide(nextId); // Navigate to the specified nextId\n    } else {\n      updateSlide();\n    }\n  }\n\n  // Function to restart the game\n  function restartGame() {\n    // Reset game state\n    gameStarted = false;\n    gameEnded = false; // Reset gameEnded\n    isMuted = false;\n    currentChapter.set(0);\n    currentStage.set(0);\n    slides.set([]);\n    history.set([]);\n    backgroundImage.set('');\n    backgroundMusic.set('');\n    backgroundVolume.set(1);\n    playerChoices.set([]);\n    // Additional resets if necessary\n\n    // Pause and reset background audio\n    if (backgroundAudio) {\n      backgroundAudio.pause();\n      backgroundAudio.currentTime = 0;\n      backgroundAudio.src = '';\n    }\n  }\n\n  // Reactive variable to hold the sanitized reference HTML\n  $: sanitizedReference = $slides[$currentStage]?.reference\n    ? DOMPurify.sanitize(marked.parse($slides[$currentStage].reference), {\n        ALLOWED_TAGS: [\n          'b', 'i', 'em', 'strong', 'a', 'p', 'br', 'ul', 'ol', 'li', 'span',\n          'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'img', 'table', 'thead',\n          'tbody', 'tr', 'th', 'td', 'blockquote', 'code', 'pre'\n        ],\n        ALLOWED_ATTR: ['href', 'target', 'rel', 'style', 'class', 'src', 'alt']\n      })\n    : '';\n\n  // Reactive variable to hold the sanitized copied reference HTML\n  $: sanitizedCopiedReference = copiedReference\n    ? DOMPurify.sanitize(marked.parse(copiedReference), {\n        ALLOWED_TAGS: [\n          'b', 'i', 'em', 'strong', 'a', 'p', 'br', 'ul', 'ol', 'li', 'span',\n          'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'img', 'table', 'thead',\n          'tbody', 'tr', 'th', 'td', 'blockquote', 'code', 'pre'\n        ],\n        ALLOWED_ATTR: ['href', 'target', 'rel', 'style', 'class', 'src', 'alt']\n      })\n    : '';\n\n  /**\n   * Copies the provided reference text to the clipboard.\n   * @param {string} reference - The reference text to copy.\n   */\n  async function copyReferenceToClipboard(reference) {\n    try {\n      // Convert Markdown to plain text by removing Markdown syntax\n      const plainTextReference = removeMarkdown(reference);\n      \n      // Copy the plain text to the clipboard\n      await navigator.clipboard.writeText(plainTextReference);\n      \n      // Set the copied reference for the confirmation banner\n      copiedReference = plainTextReference;\n      showBanner = true;\n      \n      // Sanitize the copied reference for display in the banner\n      sanitizedCopiedReference = DOMPurify.sanitize(marked.parse(reference), {\n        ALLOWED_TAGS: [\n          'b', 'i', 'em', 'strong', 'a', 'p', 'br', 'ul', 'ol', 'li', 'span',\n          'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'img', 'table', 'thead',\n          'tbody', 'tr', 'th', 'td', 'blockquote', 'code', 'pre'\n        ],\n        ALLOWED_ATTR: ['href', 'target', 'rel', 'style', 'class', 'src', 'alt']\n      });\n      \n      // Hide the banner after 3 seconds\n      setTimeout(() => {\n        showBanner = false;\n        copiedReference = '';\n        sanitizedCopiedReference = '';\n      }, 3000);\n    } catch (err) {\n      console.error('Failed to copy:', err);\n      // Optionally, handle the error (e.g., show an error message)\n    }\n  }\n\n  /**\n   * Handles the click event on the reference section.\n   * Copies the reference to the clipboard if available.\n   */\n  function handleReferenceClick() {\n    const reference = $slides[$currentStage]?.reference;\n    if (reference) {\n      copyReferenceToClipboard(reference);\n    }\n  }\n\n  /**\n   * Handles keydown events on the reference section for accessibility.\n   * @param {KeyboardEvent} event - The keyboard event.\n   */\n  function handleReferenceKeydown(event) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      handleReferenceClick();\n    }\n  }\n</script>\n\n<style>\n  /* Import the global styles */\n  @import './appStyles.css';\n\n  /* Additional styles can be added here if necessary */\n</style>\n\n<!-- Application Markup -->\n{#if !gameStarted}\n  <!-- Starting screen using FlashScreen component -->\n  <FlashScreen \n    screenType=\"start\" \n    on:proceed={startGame} \n    on:startLoading={preloadAssets}\n  />\n{:else if currentSlideIndex > totalSlides}\n  <!-- Ending screen using FlashScreen component -->\n  <FlashScreen screenType=\"end\" on:proceed={restartGame} />\n{:else}\n  <!-- Existing game content -->\n  <div class=\"meeting-room\">\n    <!-- Background Audio Element -->\n    <audio\n      bind:this={backgroundAudio}\n      loop\n      preload=\"auto\" \n      on:loadeddata={() => {\n        if (!isMuted && $backgroundMusic) {\n          backgroundAudio.play().catch(error => {\n            console.error('Background music playback failed:', error);\n          });\n        }\n      }}\n    ></audio>\n    \n    <div class=\"screen\" style=\"background-image: url('{$backgroundImage}');\">\n      {#if $slides.length > 0}\n        <!-- Slide content transition -->\n        {#key $currentStage}\n          <div class=\"slide-content\" in:fade={{ duration: 500 }}>\n            {#if $slides[$currentStage]?.type === 'dialogue'}\n              <DialogueSlide\n                characters={$slides[$currentStage].characters}\n                dialogueText={$slides[$currentStage].dialogueText}\n                background={$slides[$currentStage].background}\n                soundEffect={$slides[$currentStage].soundEffect}\n                isMuted={isMuted}\n                updateSlide={handleDialogueEnd}\n                assetPaths={$assetPaths}\n              />\n            {:else if $slides[$currentStage]?.type === 'choices'}\n              <ChoicesSlide \n                choices={$slides[$currentStage].choices}\n                background={$slides[$currentStage].background}\n                soundEffect={$slides[$currentStage].soundEffect}\n                isMuted={isMuted}\n                updateSlide={handleDialogueEnd}\n                assetPaths={$assetPaths}\n              />\n            {:else if $slides[$currentStage]?.type === 'info'}\n              <InfoSlide\n                text={$slides[$currentStage]?.text}\n                reference={$slides[$currentStage]?.reference}\n                updateSlide={handleDialogueEnd}\n                soundEffect={$slides[$currentStage]?.soundEffect}\n                isMuted={isMuted}\n                background={$slides[$currentStage].background}\n              />\n            {:else if $slides[$currentStage]?.type === 'quote'}\n              <QuoteSlide\n                updateSlide={handleDialogueEnd}\n                characterImage={$slides[$currentStage].characterImage}\n                text={$slides[$currentStage].text}\n                quoteWho={$slides[$currentStage].quoteWho}\n                background={$slides[$currentStage].background}\n                soundEffect={$slides[$currentStage].soundEffect}\n                reflectionText={$slides[$currentStage].reflectionText}\n                isMuted={isMuted}\n                guess={$slides[$currentStage].guess}\n              />\n            {:else if $slides[$currentStage]?.type === 'quotequiz'}\n              <QuoteQuizSlide\n                updateSlide={handleDialogueEnd}\n                characterImage={$slides[$currentStage].characterImage}\n                text={$slides[$currentStage].text}\n                quoteWho={$slides[$currentStage].quoteWho}\n                background={$slides[$currentStage].background}\n                soundEffect={$slides[$currentStage].soundEffect}\n                isMuted={isMuted}\n                choices={$slides[$currentStage].choices}\n                correctAnswer={$slides[$currentStage].correctAnswer}\n                reflectionTextCorrect={$slides[$currentStage].reflectionTextCorrect}\n                reflectionTextIncorrect={$slides[$currentStage].reflectionTextIncorrect}\n              />\n            {:else if $slides[$currentStage]?.type === 'scoresummary'}\n                <ScoreSummary \n                updateSlide={handleDialogueEnd} \n                quizId={$slides[$currentStage].quizId}\n                background={$slides[$currentStage].background}\n                soundEffect={$slides[$currentStage].soundEffect}\n                reference={$slides[$currentStage].reference}\n              />\n            {:else if $slides[$currentStage]?.type === 'dream'}\n              <DreamSlide\n                text={$slides[$currentStage].text}\n                soundEffect={$slides[$currentStage].soundEffect}\n                isMuted={isMuted}\n                updateSlide={handleDialogueEnd}\n                fadeInTime={$slides[$currentStage].fadeInTime}\n                fadeOutTime={$slides[$currentStage].fadeOutTime}\n              />\n            {/if}\n          </div>\n        {/key}\n      {/if}\n\n      <!-- Back Button -->\n      {#if $history.length > 0 && $showBackButton}\n        <button on:click={goBack} class=\"back-button\" aria-label=\"Go Back\">\n          Back\n        </button>\n      {/if}\n\n      <!-- Progress Bar and Counters -->\n      <div class=\"progress-container\">\n        <!-- Slide Counter -->\n        <div class=\"slide-counter\">\n          {slideCounterText}\n        </div>\n        \n        <!-- Separator -->\n        <span class=\"separator\" aria-hidden=\"true\">-</span>\n        \n        <!-- Progress Bar -->\n        <div class=\"progress-bar\">\n          <div class=\"progress\" style=\"width: {progress}%\"></div>\n          <!-- Chapter Markers -->\n          {#each cumulativeSlideCounts as cumulativeCount, index}\n            {#if index < totalChapters - 1} <!-- Exclude the last chapter's end -->\n              <div\n                class=\"marker\"\n                style=\"left: { (cumulativeCount / totalSlides) * 100 }%;\"\n                title={`Chapter ${index + 1}`}\n              ></div>\n            {/if}\n          {/each}\n        </div>\n        \n        <!-- Separator -->\n        <span class=\"separator\" aria-hidden=\"true\">-</span>\n        \n        <!-- Chapter Counter -->\n        <div class=\"chapter-counter\">\n          {chapterCounterText}\n        </div>\n      </div>\n\n      <!-- Mute/Unmute Button -->\n      <button on:click={toggleMute} class=\"mute-button\" aria-label={isMuted ? 'Unmute Music' : 'Mute Music'}>\n        {#if isMuted}\n          Unmute 🔊\n        {:else}\n          Mute 🔇\n        {/if}\n      </button>\n\n      <!-- Reference Section -->\n      {#if $slides[$currentStage]?.reference && !$hideReference}\n        <div \n          class=\"reference\" \n          on:click={handleReferenceClick} \n          on:keydown={handleReferenceKeydown}\n          tabindex=\"0\" \n          role=\"button\" \n          aria-label=\"Copy reference to clipboard\"\n        >\n          <span class=\"source-label\">Source:</span>\n          {@html sanitizedReference}\n        </div>\n      {/if}\n\n      <!-- Reference Copy Confirmation Banner -->\n      {#if showBanner}\n        <div class=\"copy-banner\" transition:fade={{ duration: 500 }} role=\"alert\" aria-live=\"assertive\">\n          Reference successfully copied:<br/><br/>\n          {copiedReference}\n        </div>\n      {/if}\n\n      <!-- Click to Advance Overlay -->\n      {#if $currentStage === (slideCounts[$currentChapter] || 0) - 1}\n        <ClickToAdvanceOverlay onAdvance={loadNextChapter} />\n      {/if}\n    </div>\n  </div>\n{/if}\n","// src/utils/collectAssetPaths.js\r\nimport { assetPaths } from '../stores';\r\nimport { get } from 'svelte/store';\r\nimport { getAssetPath } from './assetHelper';\r\n\r\nexport async function collectAssetPaths(totalChapters) {\r\n  const assets = new Set();\r\n  \r\n  // Retrieve the current value of assetPaths from the store\r\n  const paths = get(assetPaths);\r\n\r\n  for (let i = 0; i < totalChapters; i++) {\r\n    try {\r\n      const response = await fetch(`chapter${i}.json`);\r\n      if (response.ok) {\r\n        const chapterData = await response.json();\r\n        const slides = chapterData.slides || [];\r\n\r\n        slides.forEach((slide) => {\r\n          // Collect background images\r\n          if (slide.background) {\r\n            assets.add(getAssetPath('background', slide.background, paths));\r\n          }\r\n\r\n          // Collect character images\r\n          if (slide.characters) {\r\n            slide.characters.forEach((character) => {\r\n              if (character.image) {\r\n                assets.add(getAssetPath('character', character.image, paths));\r\n              }\r\n            });\r\n          }\r\n\r\n          // Collect images in choices\r\n          if (slide.choices) {\r\n            slide.choices.forEach((choice) => {\r\n              if (choice.characterImage) {\r\n                assets.add(getAssetPath('character', choice.characterImage, paths));\r\n              }\r\n            });\r\n          }\r\n\r\n          // Collect sound effects\r\n          if (slide.soundEffect) {\r\n            assets.add(getAssetPath('sound', slide.soundEffect, paths));\r\n          }\r\n\r\n          // Collect other assets as needed\r\n          // For example, additional images, etc.\r\n        });\r\n\r\n        // Collect background music from chapter data\r\n        if (chapterData.music) {\r\n          assets.add(getAssetPath('music', chapterData.music, paths));\r\n        }\r\n      } else {\r\n        console.error(`chapter${i}.json not found.`);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error fetching chapter${i}.json:`, error);\r\n    }\r\n  }\r\n\r\n  return Array.from(assets);\r\n}\r\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","callback","undefined","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","$$","on_destroy","push","null_to_empty","split_css_unit","split","match","parseFloat","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","promise","Promise","fulfill","add","abort","append","target","node","appendChild","get_root_for_style","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","textContent","style","head","sheet","append_stylesheet","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","stop_propagation","stopPropagation","call","this","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","set_style","key","important","removeProperty","setProperty","toggle_class","toggle","classList","custom_event","type","detail","bubbles","cancelable","CustomEvent","HtmlTag","is_svg","e","n","t","constructor","html","h","m","createElementNS","nodeType","nodeName","tagName","content","innerHTML","Array","from","childNodes","p","managed_styles","Map","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","rule","str","hash","charCodeAt","doc","stylesheet","rules","get","info","set","create_style_information","insertRule","cssRules","animation","delete_rule","previous","next","filter","anim","indexOf","deleted","join","ownerNode","clear","set_current_component","get_current_component","Error","onMount","on_mount","onDestroy","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","seen_callbacks","flushidx","saved_component","update","pop","has","fragment","before_update","dirty","ctx","after_update","wait","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_in_transition","params","animation_name","config","running","cleanup","go","easing","linear","css","start_time","end_time","started","start","invalidate","end","create_out_transition","group","original_inert_value","inert","reset","create_bidirectional_transition","intro","running_program","pending_program","clear_animation","init","program","Math","abs","ensure_array_like","array_like_or_iterator","destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","updates","child_ctx","will_move","did_move","first","new_block","old_block","new_key","old_key","create_component","mount_component","new_on_destroy","map","destroy_component","filtered","targets","flush_render_callbacks","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","skip_bound","ready","ret","rest","fill","make_dirty","hydrate","nodes","children","l","SvelteComponent","$$set","$destroy","$on","index","splice","$set","obj","keys","cubicOut","fade","getComputedStyle","opacity","fly","y","target_opacity","transform","od","xValue","xUnit","yValue","yUnit","u","_getDefaults","async","breaks","extensions","gfm","hooks","pedantic","renderer","silent","tokenizer","walkTokens","__svelte","v","_defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","RegExp","source","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape$1","encode","test","replace","caret","edit","regex","opt","val","valSource","getRegex","cleanUrl","encodeURI","noopTest","exec","splitCells","tableRow","count","cells","offset","escaped","curr","trim","shift","rtrim","invert","suffLen","currChar","charAt","slice","outputLink","cap","link","raw","lexer","title","state","inLink","token","tokens","inlineTokens","_Tokenizer","src","newline","code","codeBlockStyle","fences","matchIndentToCode","indentToCode","matchIndentInNode","indentInNode","indentCodeCompensation","lang","inline","anyPunctuation","heading","trimmed","depth","hr","blockquote","lines","inBlockquote","currentLines","currentRaw","currentText","top","blockTokens","lastToken","oldToken","newText","newToken","substring","bull","isordered","ordered","loose","items","itemRegex","endsWithBlankLine","endEarly","itemContents","line","repeat","nextLine","blankLine","indent","trimStart","search","nextBulletRegex","min","hrRegex","fencesBeginRegex","headingBeginRegex","htmlBeginRegex","rawLine","nextLineWithoutTabs","ischecked","istask","checked","trimEnd","spacers","hasMultipleLineBreaks","some","pre","def","tag","toLowerCase","table","headers","aligns","rows","item","header","align","row","cell","lheading","paragraph","escape","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","level","findClosingBracket","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","emStrongLDelim","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","emStrongRDelimAst","emStrongRDelimUnd","lastIndex","lastCharLength","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","prevCapZero","_backpedal","inlineText","bullet","_paragraph","_blockLabel","_tag","_comment","blockNormal","gfmTable","blockGfm","blockPedantic","_punctuation","_inlineComment","_inlineLabel","inlineNormal","blockSkip","reflinkSearch","inlinePedantic","inlineGfm","inlineBreaks","normal","_Lexer","inlineQueue","lex","lexInline","lastParagraphClipped","cutSrc","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","console","error","keepPrevChar","includes","lastIndexOf","startInline","_Renderer","parser","langString","parse","parseInline","body","j","listitem","itemBody","checkbox","unshift","tablecell","tablerow","k","strong","em","cleanHref","out","image","_TextRenderer","_Parser","textRenderer","anyToken","renderers","genericToken","textToken","_Hooks","static","preprocess","markdown","postprocess","processAllTokens","provideLexer","provideParser","markedInstance","defaults","setOptions","parseMarkdown","Parser","Renderer","TextRenderer","Lexer","Tokenizer","Hooks","args","use","values","concat","tableToken","listToken","childTokens","flat","pack","opts","ext","prevRenderer","apply","extLevel","prop","rendererProp","rendererFunc","tokenizerProp","tokenizerFunc","prevTokenizer","hooksProp","hooksFunc","prevHook","passThroughHooks","arg","packWalktokens","blockType","origOpt","throwError","onError","prototype","toString","all","catch","message","msg","reject","marked","getDefaults","exports","entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","construct","Reflect","fun","thisValue","Func","arrayForEach","unapply","arrayPop","arrayPush","stringToLowerCase","String","stringToString","stringMatch","stringReplace","stringIndexOf","stringTrim","objectHasOwnProperty","hasOwnProperty","regExpTest","typeErrorCreate","unconstruct","TypeError","func","thisArg","_len","arguments","_key","_len2","_key2","addToSet","array","transformCaseFunc","lcElement","cleanArray","clone","object","newObject","property","isArray","lookupGetter","desc","fallbackValue","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","EXPRESSIONS","__proto__","NODE_TYPE","cdataSection","entityReference","entityNode","progressingInstruction","comment","documentType","documentFragment","notation","getGlobal","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","createPolicy","suffix","ATTR_NAME","hasAttribute","policyName","createHTML","createScriptURL","scriptUrl","warn","createDOMPurify","DOMPurify","version","removed","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","remove","getNextSibling","getChildNodes","getParentNode","template","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","createHTMLDocument","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","tbody","TRUSTED_TYPES_POLICY","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","namespaceURI","parentTagName","Boolean","_forceRemove","_removeAttribute","getAttributeNode","_initDocument","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","_createNodeIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","SHOW_PROCESSING_INSTRUCTION","SHOW_CDATA_SECTION","_isClobbered","elm","attributes","hasChildNodes","_isNode","_executeHook","entryPoint","currentNode","hook","_sanitizeElements","allowedTags","firstElementChild","_isBasicCustomElement","childClone","__removalCount","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","firstChild","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","purify","factory","md","listUnicodeChar","stripListLeaders","useImgAltText","abbr","replaceLinksWithURL","htmlTagsToSkip","output","htmlReplaceRegex","joinedHtmlTagsToSkip","getAssetPath","assetType","filename","assetPaths","pathType","character","background","sound","music","sanitizedPath","log","customFade","customFly","img","img_src_value","imageSrc","speaker","current","img_intro","create_if_block","transition","$$props","imgborder","transitionConfig","determineTransition","subscriber_queue","stop","subscribers","new_value","run_queue","subscriber","characters","backgrounds","sounds","styles","currentStage","slides","history","backgroundImage","currentChapter","backgroundMusic","backgroundVolume","showBackButton","currentScore","totalQuestions","quizScores","playerChoices","currentChoice","currentAudio","hideReference","playSound","soundPath","isMuted","volume","audio","pause","currentTime","Audio","play","div","onAdvance","preventDefault","div_class_value","position","imageType","transitionwrapper_changes","html_tag","raw_value","div3","div0","div2","div1","each_blocks_1","div2_intro","div2_outro","dialogueText","soundEffect","updateSlide","sanitizedBlocks","soundEffectPath","$$invalidate","backgroundPath","markdownText","rawBlocks","parseDialogueBlocks","if_block","create_if_block_1","t0_value","choiceText","button","button_aria_label_value","t0","choices","showPopup","selectedChoice","sanitizedPopupMessage","selectChoice","choice","existingChoices","handleKeydown","popupMessage","nextId","reference","$assetPaths","parseMarkdownBlocks","create_if_block_3","if_block1","create_if_block_2","div5","div4","div5_intro","div5_outro","characterImage","reflectionText","quoteWho","guess","hasRevealed","showReflection","overlayClass","characterImagePath","displayedCharacterImagePath","sanitizedText","sanitizedReflectionText","setTimeout","create_if_block_4","t1_value","img_alt_value","t1","if_block0","create_if_block_5","if_block2","div6","div6_intro","div6_outro","correctAnswer","reflectionTextCorrect","reflectionTextIncorrect","hasAnswered","isCorrect","bannerTextDisplayed","handleChoiceClick","find","getCharacterImage","correctSoundPath","incorrectSoundPath","displayedCharacterImage","div1_intro","div1_outro","fadeInTime","fadeOutTime","div4_transition","handleButtonClick","screenType","isVisible","subheading","quote","buttonLabel","buttonAction","defaultPrevented","createEventDispatcher","loadingProgress","isLoading","totalAssets","loadedAssets","setTotalAssets","total","updateProgress","loaded","round","handleLoadingComplete","response","fetch","ok","status","screenData","json","label","action","fetchContent","onProgress","onComplete","preloadAssets","t12_value","toFixed","p0","strong0","strong1","p1","strong2","p2","strong3","p3","t7","t7_value","t12","factorial","result","binomialProbability","combination","pow","quizId","score","probability","percentage","currentScoreValue","totalQuestionsValue","storedQuizData","quizScoresValue","cumulativeProbability","cumulativeBinomialProbability","loadChapter","chapterIndex","chapterData","slide","Image","slidesArray","currentSlideIndex","currentSlide","shouldSaveToHistory","noHistory","$history","newStage","newSlide","goBack","previousStage","create_if_block_8","create_if_block_7","if_block3","if_block5","span0","span1","div_intro","create_if_block_6","span","br0","br1","div_transition","loadNextChapter","backgroundAudio","assetsToLoad","gameStarted","slideCounts","cumulativeSlideCounts","totalSlides","totalChapters","showBanner","copiedReference","sanitizedCopiedReference","fetchAllChapters","counts","reduce","handleReferenceClick","$slides","$currentStage","plainTextReference","removeMarkdown","navigator","clipboard","writeText","err","copyReferenceToClipboard","$currentChapter","progress","currentSlideNumberInChapter","slideCounterText","chapterCounterText","acc","$backgroundMusic","fullMusicPath","$backgroundVolume","sanitizedReference","assets","paths","collectAssetPaths","loadPromises","assetPath","fileExtension","asset","onload","onerror","onloadeddata","muted","$$value"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20]}