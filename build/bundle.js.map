{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/src/runtime/internal/utils.js","../../node_modules/svelte/src/runtime/internal/environment.js","../../node_modules/svelte/src/runtime/internal/loop.js","../../node_modules/svelte/src/runtime/internal/dom.js","../../node_modules/svelte/src/runtime/internal/style_manager.js","../../node_modules/svelte/src/runtime/internal/lifecycle.js","../../node_modules/svelte/src/runtime/internal/scheduler.js","../../node_modules/svelte/src/runtime/internal/transitions.js","../../node_modules/svelte/src/runtime/internal/each.js","../../node_modules/svelte/src/runtime/internal/Component.js","../../node_modules/svelte/src/runtime/easing/index.js","../../node_modules/svelte/src/runtime/transition/index.js","../../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../../node_modules/svelte/src/shared/version.js","../../node_modules/dompurify/dist/purify.js","../../node_modules/marked/lib/marked.esm.js","../../src/utils/assetHelper.js","../../src/utils/transitions.js","../../src/components/TransitionWrapper.svelte","../../node_modules/svelte/src/runtime/store/index.js","../../src/stores.js","../../src/components/ClickToAdvanceOverlay.svelte","../../src/slides/DialogueSlide.svelte","../../src/slides/ChoicesSlide.svelte","../../src/slides/InfoSlide.svelte","../../src/components/FlashScreen.svelte","../../node_modules/remove-markdown/index.js","../../src/utils/appLogic.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { noop } from './utils.js';\n\nexport const is_client = typeof window !== 'undefined';\n\n/** @type {() => number} */\nexport let now = is_client ? () => window.performance.now() : () => Date.now();\n\nexport let raf = is_client ? (cb) => requestAnimationFrame(cb) : noop;\n\n// used internally for testing\n/** @returns {void} */\nexport function set_now(fn) {\n\tnow = fn;\n}\n\n/** @returns {void} */\nexport function set_raf(fn) {\n\traf = fn;\n}\n","import { raf } from './environment.js';\n\nconst tasks = new Set();\n\n/**\n * @param {number} now\n * @returns {void}\n */\nfunction run_tasks(now) {\n\ttasks.forEach((task) => {\n\t\tif (!task.c(now)) {\n\t\t\ttasks.delete(task);\n\t\t\ttask.f();\n\t\t}\n\t});\n\tif (tasks.size !== 0) raf(run_tasks);\n}\n\n/**\n * For testing purposes only!\n * @returns {void}\n */\nexport function clear_loops() {\n\ttasks.clear();\n}\n\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n * @param {import('./private.js').TaskCallback} callback\n * @returns {import('./private.js').Task}\n */\nexport function loop(callback) {\n\t/** @type {import('./private.js').TaskEntry} */\n\tlet task;\n\tif (tasks.size === 0) raf(run_tasks);\n\treturn {\n\t\tpromise: new Promise((fulfill) => {\n\t\t\ttasks.add((task = { c: callback, f: fulfill }));\n\t\t}),\n\t\tabort() {\n\t\t\ttasks.delete(task);\n\t\t}\n\t};\n}\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { append_empty_stylesheet, detach, get_root_for_style } from './dom.js';\nimport { raf } from './environment.js';\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\n/** @type {Map<Document | ShadowRoot, import('./private.d.ts').StyleInformation>} */\nconst managed_styles = new Map();\n\nlet active = 0;\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\n/**\n * @param {string} str\n * @returns {number}\n */\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\n/**\n * @param {Document | ShadowRoot} doc\n * @param {Element & ElementCSSInlineStyle} node\n * @returns {{ stylesheet: any; rules: {}; }}\n */\nfunction create_style_information(doc, node) {\n\tconst info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n\tmanaged_styles.set(doc, info);\n\treturn info;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {number} a\n * @param {number} b\n * @param {number} duration\n * @param {number} delay\n * @param {(t: number) => number} ease\n * @param {(t: number, u: number) => string} fn\n * @param {number} uid\n * @returns {string}\n */\nexport function create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + (b - a) * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\tconst rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n\tconst name = `__svelte_${hash(rule)}_${uid}`;\n\tconst doc = get_root_for_style(node);\n\tconst { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n\tif (!rules[name]) {\n\t\trules[name] = true;\n\t\tstylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n\t}\n\tconst animation = node.style.animation || '';\n\tnode.style.animation = `${\n\t\tanimation ? `${animation}, ` : ''\n\t}${name} ${duration}ms linear ${delay}ms 1 both`;\n\tactive += 1;\n\treturn name;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {string} [name]\n * @returns {void}\n */\nexport function delete_rule(node, name) {\n\tconst previous = (node.style.animation || '').split(', ');\n\tconst next = previous.filter(\n\t\tname\n\t\t\t? (anim) => anim.indexOf(name) < 0 // remove specific animation\n\t\t\t: (anim) => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n\t);\n\tconst deleted = previous.length - next.length;\n\tif (deleted) {\n\t\tnode.style.animation = next.join(', ');\n\t\tactive -= deleted;\n\t\tif (!active) clear_rules();\n\t}\n}\n\n/** @returns {void} */\nexport function clear_rules() {\n\traf(() => {\n\t\tif (active) return;\n\t\tmanaged_styles.forEach((info) => {\n\t\t\tconst { ownerNode } = info.stylesheet;\n\t\t\t// there is no ownerNode if it runs on jsdom.\n\t\t\tif (ownerNode) detach(ownerNode);\n\t\t});\n\t\tmanaged_styles.clear();\n\t});\n}\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nexport { identity as linear } from '../internal/index.js';\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backInOut(t) {\n\tconst s = 1.70158 * 1.525;\n\tif ((t *= 2) < 1) return 0.5 * (t * t * ((s + 1) * t - s));\n\treturn 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backIn(t) {\n\tconst s = 1.70158;\n\treturn t * t * ((s + 1) * t - s);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backOut(t) {\n\tconst s = 1.70158;\n\treturn --t * t * ((s + 1) * t + s) + 1;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceOut(t) {\n\tconst a = 4.0 / 11.0;\n\tconst b = 8.0 / 11.0;\n\tconst c = 9.0 / 10.0;\n\tconst ca = 4356.0 / 361.0;\n\tconst cb = 35442.0 / 1805.0;\n\tconst cc = 16061.0 / 1805.0;\n\tconst t2 = t * t;\n\treturn t < a\n\t\t? 7.5625 * t2\n\t\t: t < b\n\t\t? 9.075 * t2 - 9.9 * t + 3.4\n\t\t: t < c\n\t\t? ca * t2 - cb * t + cc\n\t\t: 10.8 * t * t - 20.52 * t + 10.72;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceInOut(t) {\n\treturn t < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0)) : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceIn(t) {\n\treturn 1.0 - bounceOut(1.0 - t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circInOut(t) {\n\tif ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circIn(t) {\n\treturn 1.0 - Math.sqrt(1.0 - t * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circOut(t) {\n\treturn Math.sqrt(1 - --t * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicInOut(t) {\n\treturn t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicIn(t) {\n\treturn t * t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicOut(t) {\n\tconst f = t - 1.0;\n\treturn f * f * f + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticInOut(t) {\n\treturn t < 0.5\n\t\t? 0.5 * Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) * Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n\t\t: 0.5 *\n\t\t\t\tMath.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n\t\t\t\tMath.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n\t\t\t\t1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticIn(t) {\n\treturn Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticOut(t) {\n\treturn Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoInOut(t) {\n\treturn t === 0.0 || t === 1.0\n\t\t? t\n\t\t: t < 0.5\n\t\t? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n\t\t: -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoIn(t) {\n\treturn t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoOut(t) {\n\treturn t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadInOut(t) {\n\tt /= 0.5;\n\tif (t < 1) return 0.5 * t * t;\n\tt--;\n\treturn -0.5 * (t * (t - 2) - 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadIn(t) {\n\treturn t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadOut(t) {\n\treturn -t * (t - 2.0);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartInOut(t) {\n\treturn t < 0.5 ? +8.0 * Math.pow(t, 4.0) : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartIn(t) {\n\treturn Math.pow(t, 4.0);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartOut(t) {\n\treturn Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintInOut(t) {\n\tif ((t *= 2) < 1) return 0.5 * t * t * t * t * t;\n\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintIn(t) {\n\treturn t * t * t * t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintOut(t) {\n\treturn --t * t * t * t * t + 1;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineInOut(t) {\n\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineIn(t) {\n\tconst v = Math.cos(t * Math.PI * 0.5);\n\tif (Math.abs(v) < 1e-14) return 1;\n\telse return 1 - v;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineOut(t) {\n\treturn Math.sin((t * Math.PI) / 2);\n}\n","import { cubicOut, cubicInOut, linear } from '../easing/index.js';\nimport { assign, split_css_unit, is_function } from '../internal/index.js';\n\n/**\n * Animates a `blur` filter alongside an element's opacity.\n *\n * https://svelte.dev/docs/svelte-transition#blur\n * @param {Element} node\n * @param {import('./public').BlurParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function blur(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst f = style.filter === 'none' ? '' : style.filter;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [value, unit] = split_css_unit(amount);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `opacity: ${target_opacity - od * u}; filter: ${f} blur(${u * value}${unit});`\n\t};\n}\n\n/**\n * Animates the opacity of an element from 0 to the current opacity for `in` transitions and from the current opacity to 0 for `out` transitions.\n *\n * https://svelte.dev/docs/svelte-transition#fade\n * @param {Element} node\n * @param {import('./public').FadeParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n\tconst o = +getComputedStyle(node).opacity;\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) => `opacity: ${t * o}`\n\t};\n}\n\n/**\n * Animates the x and y positions and the opacity of an element. `in` transitions animate from the provided values, passed as parameters to the element's default values. `out` transitions animate from the element's default values to the provided values.\n *\n * https://svelte.dev/docs/svelte-transition#fly\n * @param {Element} node\n * @param {import('./public').FlyParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function fly(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [xValue, xUnit] = split_css_unit(x);\n\tconst [yValue, yUnit] = split_css_unit(y);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * xValue}${xUnit}, ${(1 - t) * yValue}${yUnit});\n\t\t\topacity: ${target_opacity - od * u}`\n\t};\n}\n\n/**\n * Slides an element in and out.\n *\n * https://svelte.dev/docs/svelte-transition#slide\n * @param {Element} node\n * @param {import('./public').SlideParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function slide(node, { delay = 0, duration = 400, easing = cubicOut, axis = 'y' } = {}) {\n\tconst style = getComputedStyle(node);\n\tconst opacity = +style.opacity;\n\tconst primary_property = axis === 'y' ? 'height' : 'width';\n\tconst primary_property_value = parseFloat(style[primary_property]);\n\tconst secondary_properties = axis === 'y' ? ['top', 'bottom'] : ['left', 'right'];\n\tconst capitalized_secondary_properties = secondary_properties.map(\n\t\t(e) => `${e[0].toUpperCase()}${e.slice(1)}`\n\t);\n\tconst padding_start_value = parseFloat(style[`padding${capitalized_secondary_properties[0]}`]);\n\tconst padding_end_value = parseFloat(style[`padding${capitalized_secondary_properties[1]}`]);\n\tconst margin_start_value = parseFloat(style[`margin${capitalized_secondary_properties[0]}`]);\n\tconst margin_end_value = parseFloat(style[`margin${capitalized_secondary_properties[1]}`]);\n\tconst border_width_start_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[0]}Width`]\n\t);\n\tconst border_width_end_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[1]}Width`]\n\t);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) =>\n\t\t\t'overflow: hidden;' +\n\t\t\t`opacity: ${Math.min(t * 20, 1) * opacity};` +\n\t\t\t`${primary_property}: ${t * primary_property_value}px;` +\n\t\t\t`padding-${secondary_properties[0]}: ${t * padding_start_value}px;` +\n\t\t\t`padding-${secondary_properties[1]}: ${t * padding_end_value}px;` +\n\t\t\t`margin-${secondary_properties[0]}: ${t * margin_start_value}px;` +\n\t\t\t`margin-${secondary_properties[1]}: ${t * margin_end_value}px;` +\n\t\t\t`border-${secondary_properties[0]}-width: ${t * border_width_start_value}px;` +\n\t\t\t`border-${secondary_properties[1]}-width: ${t * border_width_end_value}px;`\n\t};\n}\n\n/**\n * Animates the opacity and scale of an element. `in` transitions animate from an element's current (default) values to the provided values, passed as parameters. `out` transitions animate from the provided values to an element's default values.\n *\n * https://svelte.dev/docs/svelte-transition#scale\n * @param {Element} node\n * @param {import('./public').ScaleParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function scale(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst sd = 1 - start;\n\tconst od = target_opacity * (1 - opacity);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - sd * u});\n\t\t\topacity: ${target_opacity - od * u}\n\t\t`\n\t};\n}\n\n/**\n * Animates the stroke of an SVG element, like a snake in a tube. `in` transitions begin with the path invisible and draw the path to the screen over time. `out` transitions start in a visible state and gradually erase the path. `draw` only works with elements that have a `getTotalLength` method, like `<path>` and `<polyline>`.\n *\n * https://svelte.dev/docs/svelte-transition#draw\n * @param {SVGElement & { getTotalLength(): number }} node\n * @param {import('./public').DrawParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n\tlet len = node.getTotalLength();\n\tconst style = getComputedStyle(node);\n\tif (style.strokeLinecap !== 'butt') {\n\t\tlen += parseInt(style.strokeWidth);\n\t}\n\tif (duration === undefined) {\n\t\tif (speed === undefined) {\n\t\t\tduration = 800;\n\t\t} else {\n\t\t\tduration = len / speed;\n\t\t}\n\t} else if (typeof duration === 'function') {\n\t\tduration = duration(len);\n\t}\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_, u) => `\n\t\t\tstroke-dasharray: ${len};\n\t\t\tstroke-dashoffset: ${u * len};\n\t\t`\n\t};\n}\n\n/**\n * The `crossfade` function creates a pair of [transitions](https://svelte.dev/docs#template-syntax-element-directives-transition-fn) called `send` and `receive`. When an element is 'sent', it looks for a corresponding element being 'received', and generates a transition that transforms the element to its counterpart's position and fades it out. When an element is 'received', the reverse happens. If there is no counterpart, the `fallback` transition is used.\n *\n * https://svelte.dev/docs/svelte-transition#crossfade\n * @param {import('./public').CrossfadeParams & {\n * \tfallback?: (node: Element, params: import('./public').CrossfadeParams, intro: boolean) => import('./public').TransitionConfig;\n * }} params\n * @returns {[(node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig, (node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig]}\n */\nexport function crossfade({ fallback, ...defaults }) {\n\t/** @type {Map<any, Element>} */\n\tconst to_receive = new Map();\n\t/** @type {Map<any, Element>} */\n\tconst to_send = new Map();\n\t/**\n\t * @param {Element} from_node\n\t * @param {Element} node\n\t * @param {import('./public').CrossfadeParams} params\n\t * @returns {import('./public').TransitionConfig}\n\t */\n\tfunction crossfade(from_node, node, params) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = (d) => Math.sqrt(d) * 30,\n\t\t\teasing = cubicOut\n\t\t} = assign(assign({}, defaults), params);\n\t\tconst from = from_node.getBoundingClientRect();\n\t\tconst to = node.getBoundingClientRect();\n\t\tconst dx = from.left - to.left;\n\t\tconst dy = from.top - to.top;\n\t\tconst dw = from.width / to.width;\n\t\tconst dh = from.height / to.height;\n\t\tconst d = Math.sqrt(dx * dx + dy * dy);\n\t\tconst style = getComputedStyle(node);\n\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\t\tconst opacity = +style.opacity;\n\t\treturn {\n\t\t\tdelay,\n\t\t\tduration: is_function(duration) ? duration(d) : duration,\n\t\t\teasing,\n\t\t\tcss: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${\n\t\t\t\tt + (1 - t) * dh\n\t\t\t});\n\t\t\t`\n\t\t};\n\t}\n\n\t/**\n\t * @param {Map<any, Element>} items\n\t * @param {Map<any, Element>} counterparts\n\t * @param {boolean} intro\n\t * @returns {(node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig}\n\t */\n\tfunction transition(items, counterparts, intro) {\n\t\treturn (node, params) => {\n\t\t\titems.set(params.key, node);\n\t\t\treturn () => {\n\t\t\t\tif (counterparts.has(params.key)) {\n\t\t\t\t\tconst other_node = counterparts.get(params.key);\n\t\t\t\t\tcounterparts.delete(params.key);\n\t\t\t\t\treturn crossfade(other_node, node, params);\n\t\t\t\t}\n\t\t\t\t// if the node is disappearing altogether\n\t\t\t\t// (i.e. wasn't claimed by the other list)\n\t\t\t\t// then we need to supply an outro\n\t\t\t\titems.delete(params.key);\n\t\t\t\treturn fallback && fallback(node, params, intro);\n\t\t\t};\n\t\t};\n\t}\n\treturn [transition(to_send, to_receive, false), transition(to_receive, to_send, true)];\n}\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.19';\nexport const PUBLIC_VERSION = '4';\n","/*! @license DOMPurify 3.1.7 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.1.7/LICENSE */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.DOMPurify = factory());\n})(this, (function () { 'use strict';\n\n  const {\n    entries,\n    setPrototypeOf,\n    isFrozen,\n    getPrototypeOf,\n    getOwnPropertyDescriptor\n  } = Object;\n  let {\n    freeze,\n    seal,\n    create\n  } = Object; // eslint-disable-line import/no-mutable-exports\n  let {\n    apply,\n    construct\n  } = typeof Reflect !== 'undefined' && Reflect;\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return new Func(...args);\n    };\n  }\n  const arrayForEach = unapply(Array.prototype.forEach);\n  const arrayPop = unapply(Array.prototype.pop);\n  const arrayPush = unapply(Array.prototype.push);\n  const stringToLowerCase = unapply(String.prototype.toLowerCase);\n  const stringToString = unapply(String.prototype.toString);\n  const stringMatch = unapply(String.prototype.match);\n  const stringReplace = unapply(String.prototype.replace);\n  const stringIndexOf = unapply(String.prototype.indexOf);\n  const stringTrim = unapply(String.prototype.trim);\n  const objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\n  const regExpTest = unapply(RegExp.prototype.test);\n  const typeErrorCreate = unconstruct(TypeError);\n\n  /**\n   * Creates a new function that calls the given function with a specified thisArg and arguments.\n   *\n   * @param {Function} func - The function to be wrapped and called.\n   * @returns {Function} A new function that calls the given function with a specified thisArg and arguments.\n   */\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      return apply(func, thisArg, args);\n    };\n  }\n\n  /**\n   * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n   *\n   * @param {Function} func - The constructor function to be wrapped and called.\n   * @returns {Function} A new function that constructs an instance of the given constructor function with the provided arguments.\n   */\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return construct(func, args);\n    };\n  }\n\n  /**\n   * Add properties to a lookup table\n   *\n   * @param {Object} set - The set to which elements will be added.\n   * @param {Array} array - The array containing elements to be added to the set.\n   * @param {Function} transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n   * @returns {Object} The modified set with added elements.\n   */\n  function addToSet(set, array) {\n    let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n    let l = array.length;\n    while (l--) {\n      let element = array[l];\n      if (typeof element === 'string') {\n        const lcElement = transformCaseFunc(element);\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n          element = lcElement;\n        }\n      }\n      set[element] = true;\n    }\n    return set;\n  }\n\n  /**\n   * Clean up an array to harden against CSPP\n   *\n   * @param {Array} array - The array to be cleaned.\n   * @returns {Array} The cleaned version of the array\n   */\n  function cleanArray(array) {\n    for (let index = 0; index < array.length; index++) {\n      const isPropertyExist = objectHasOwnProperty(array, index);\n      if (!isPropertyExist) {\n        array[index] = null;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * Shallow clone an object\n   *\n   * @param {Object} object - The object to be cloned.\n   * @returns {Object} A new object that copies the original.\n   */\n  function clone(object) {\n    const newObject = create(null);\n    for (const [property, value] of entries(object)) {\n      const isPropertyExist = objectHasOwnProperty(object, property);\n      if (isPropertyExist) {\n        if (Array.isArray(value)) {\n          newObject[property] = cleanArray(value);\n        } else if (value && typeof value === 'object' && value.constructor === Object) {\n          newObject[property] = clone(value);\n        } else {\n          newObject[property] = value;\n        }\n      }\n    }\n    return newObject;\n  }\n\n  /**\n   * This method automatically checks if the prop is function or getter and behaves accordingly.\n   *\n   * @param {Object} object - The object to look up the getter function in its prototype chain.\n   * @param {String} prop - The property name for which to find the getter function.\n   * @returns {Function} The getter function found in the prototype chain or a fallback function.\n   */\n  function lookupGetter(object, prop) {\n    while (object !== null) {\n      const desc = getOwnPropertyDescriptor(object, prop);\n      if (desc) {\n        if (desc.get) {\n          return unapply(desc.get);\n        }\n        if (typeof desc.value === 'function') {\n          return unapply(desc.value);\n        }\n      }\n      object = getPrototypeOf(object);\n    }\n    function fallbackValue() {\n      return null;\n    }\n    return fallbackValue;\n  }\n\n  const html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n  // SVG\n  const svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n  const svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\n  // List of SVG elements that are disallowed by default.\n  // We still need to know them so that we can do namespace\n  // checks properly in case one wants to add them to\n  // allow-list.\n  const svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n  const mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n\n  // Similarly to SVG, we want to know all MathML elements,\n  // even those that we disallow by default.\n  const mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n  const text = freeze(['#text']);\n\n  const html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\n  const svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n  const mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n  const xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n  // eslint-disable-next-line unicorn/better-regex\n  const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n  const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\n  const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\n  const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n  const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n  const IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n  const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  const ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n  );\n  const DOCTYPE_NAME = seal(/^html$/i);\n  const CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\n  var EXPRESSIONS = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    MUSTACHE_EXPR: MUSTACHE_EXPR,\n    ERB_EXPR: ERB_EXPR,\n    TMPLIT_EXPR: TMPLIT_EXPR,\n    DATA_ATTR: DATA_ATTR,\n    ARIA_ATTR: ARIA_ATTR,\n    IS_ALLOWED_URI: IS_ALLOWED_URI,\n    IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE: ATTR_WHITESPACE,\n    DOCTYPE_NAME: DOCTYPE_NAME,\n    CUSTOM_ELEMENT: CUSTOM_ELEMENT\n  });\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n  const NODE_TYPE = {\n    element: 1,\n    attribute: 2,\n    text: 3,\n    cdataSection: 4,\n    entityReference: 5,\n    // Deprecated\n    entityNode: 6,\n    // Deprecated\n    progressingInstruction: 7,\n    comment: 8,\n    document: 9,\n    documentType: 10,\n    documentFragment: 11,\n    notation: 12 // Deprecated\n  };\n  const getGlobal = function getGlobal() {\n    return typeof window === 'undefined' ? null : window;\n  };\n\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param {TrustedTypePolicyFactory} trustedTypes The policy factory.\n   * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n   * @return {TrustedTypePolicy} The policy created (or null, if Trusted Types\n   * are not supported or creating the policy failed).\n   */\n  const _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n    if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    }\n\n    // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n    let suffix = null;\n    const ATTR_NAME = 'data-tt-policy-suffix';\n    if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n      suffix = purifyHostElement.getAttribute(ATTR_NAME);\n    }\n    const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML(html) {\n          return html;\n        },\n        createScriptURL(scriptUrl) {\n          return scriptUrl;\n        }\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n  function createDOMPurify() {\n    let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n    const DOMPurify = root => createDOMPurify(root);\n\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n    DOMPurify.version = '3.1.7';\n\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n    DOMPurify.removed = [];\n    if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n      return DOMPurify;\n    }\n    let {\n      document\n    } = window;\n    const originalDocument = document;\n    const currentScript = originalDocument.currentScript;\n    const {\n      DocumentFragment,\n      HTMLTemplateElement,\n      Node,\n      Element,\n      NodeFilter,\n      NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n      HTMLFormElement,\n      DOMParser,\n      trustedTypes\n    } = window;\n    const ElementPrototype = Element.prototype;\n    const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n    const remove = lookupGetter(ElementPrototype, 'remove');\n    const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n    const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n    const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n    // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n    if (typeof HTMLTemplateElement === 'function') {\n      const template = document.createElement('template');\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n    let trustedTypesPolicy;\n    let emptyHTML = '';\n    const {\n      implementation,\n      createNodeIterator,\n      createDocumentFragment,\n      getElementsByTagName\n    } = document;\n    const {\n      importNode\n    } = originalDocument;\n    let hooks = {};\n\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n    DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n    const {\n      MUSTACHE_EXPR,\n      ERB_EXPR,\n      TMPLIT_EXPR,\n      DATA_ATTR,\n      ARIA_ATTR,\n      IS_SCRIPT_OR_DATA,\n      ATTR_WHITESPACE,\n      CUSTOM_ELEMENT\n    } = EXPRESSIONS;\n    let {\n      IS_ALLOWED_URI: IS_ALLOWED_URI$1\n    } = EXPRESSIONS;\n\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n    let ALLOWED_TAGS = null;\n    const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n\n    /* Allowed attribute names */\n    let ALLOWED_ATTR = null;\n    const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n\n    /*\n     * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n     * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n     * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n     * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n     */\n    let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false\n      }\n    }));\n\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n    let FORBID_TAGS = null;\n\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n    let FORBID_ATTR = null;\n\n    /* Decide if ARIA attributes are okay */\n    let ALLOW_ARIA_ATTR = true;\n\n    /* Decide if custom data attributes are okay */\n    let ALLOW_DATA_ATTR = true;\n\n    /* Decide if unknown protocols are okay */\n    let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n    /* Decide if self-closing tags in attributes are allowed.\n     * Usually removed due to a mXSS issue in jQuery 3.0 */\n    let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n    let SAFE_FOR_TEMPLATES = false;\n\n    /* Output should be safe even for XML used within HTML and alike.\n     * This means, DOMPurify removes comments when containing risky content.\n     */\n    let SAFE_FOR_XML = true;\n\n    /* Decide if document with <html>... should be returned */\n    let WHOLE_DOCUMENT = false;\n\n    /* Track whether config is already set on this instance of DOMPurify. */\n    let SET_CONFIG = false;\n\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n    let FORCE_BODY = false;\n\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n    let RETURN_DOM = false;\n\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n    let RETURN_DOM_FRAGMENT = false;\n\n    /* Try to return a Trusted Type object instead of a string, return a string in\n     * case Trusted Types are not supported  */\n    let RETURN_TRUSTED_TYPE = false;\n\n    /* Output should be free from DOM clobbering attacks?\n     * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n     */\n    let SANITIZE_DOM = true;\n\n    /* Achieve full DOM Clobbering protection by isolating the namespace of named\n     * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n     *\n     * HTML/DOM spec rules that enable DOM Clobbering:\n     *   - Named Access on Window (§7.3.3)\n     *   - DOM Tree Accessors (§3.1.5)\n     *   - Form Element Parent-Child Relations (§4.10.3)\n     *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n     *   - HTMLCollection (§4.2.10.2)\n     *\n     * Namespace isolation is implemented by prefixing `id` and `name` attributes\n     * with a constant string, i.e., `user-content-`\n     */\n    let SANITIZE_NAMED_PROPS = false;\n    const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n    /* Keep element content when removing element? */\n    let KEEP_CONTENT = true;\n\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n    let IN_PLACE = false;\n\n    /* Allow usage of profiles like html, svg and mathMl */\n    let USE_PROFILES = {};\n\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n    let FORBID_CONTENTS = null;\n    const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n    /* Tags that are safe for data: URIs */\n    let DATA_URI_TAGS = null;\n    const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n    /* Attributes safe for values like \"javascript:\" */\n    let URI_SAFE_ATTRIBUTES = null;\n    const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n    const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n    const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n    /* Document namespace */\n    let NAMESPACE = HTML_NAMESPACE;\n    let IS_EMPTY_INPUT = false;\n\n    /* Allowed XHTML+XML namespaces */\n    let ALLOWED_NAMESPACES = null;\n    const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n\n    /* Parsing of strict XHTML documents */\n    let PARSER_MEDIA_TYPE = null;\n    const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n    const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n    let transformCaseFunc = null;\n\n    /* Keep a reference to config to pass to hooks */\n    let CONFIG = null;\n\n    /* Ideally, do not touch anything below this line */\n    /* ______________________________________________ */\n\n    const formElement = document.createElement('form');\n    const isRegexOrFunction = function isRegexOrFunction(testValue) {\n      return testValue instanceof RegExp || testValue instanceof Function;\n    };\n\n    /**\n     * _parseConfig\n     *\n     * @param  {Object} cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n    const _parseConfig = function _parseConfig() {\n      let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n\n      /* Shield configuration object from tampering */\n      if (!cfg || typeof cfg !== 'object') {\n        cfg = {};\n      }\n\n      /* Shield configuration object from prototype pollution */\n      cfg = clone(cfg);\n      PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n\n      // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n      transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n\n      /* Set configuration parameters */\n      ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n      ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n      URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES),\n      // eslint-disable-line indent\n      cfg.ADD_URI_SAFE_ATTR,\n      // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS),\n      // eslint-disable-line indent\n      cfg.ADD_DATA_URI_TAGS,\n      // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_DATA_URI_TAGS;\n      FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n      FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n      FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n      USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n      ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n      SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n      SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n      IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n      CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n      }\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n      }\n      if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n        CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n      }\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n\n      /* Parse profile info */\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, text);\n        ALLOWED_ATTR = [];\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html$1);\n          addToSet(ALLOWED_ATTR, html);\n        }\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg$1);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl$1);\n          addToSet(ALLOWED_ATTR, mathMl);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n\n      /* Merge configuration parameters */\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n      }\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n      }\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n      }\n      if (cfg.FORBID_CONTENTS) {\n        if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n          FORBID_CONTENTS = clone(FORBID_CONTENTS);\n        }\n        addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n      }\n\n      /* Add #text in case KEEP_CONTENT is set to true */\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      }\n      if (cfg.TRUSTED_TYPES_POLICY) {\n        if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n        }\n        if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n        }\n\n        // Overwrite existing TrustedTypes policy.\n        trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n\n        // Sign local variables required by `sanitize`.\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      } else {\n        // Uninitialized policy, attempt to initialize the internal dompurify policy.\n        if (trustedTypesPolicy === undefined) {\n          trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n        }\n\n        // If creating the internal policy succeeded sign internal variables.\n        if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n          emptyHTML = trustedTypesPolicy.createHTML('');\n        }\n      }\n\n      // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n      if (freeze) {\n        freeze(cfg);\n      }\n      CONFIG = cfg;\n    };\n    const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n    const HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n\n    // Certain elements are allowed in both SVG and HTML\n    // namespace. We need to specify them explicitly\n    // so that they don't get erroneously deleted from\n    // HTML namespace.\n    const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n\n    /* Keep track of all possible SVG and MathML tags\n     * so that we can perform the namespace checks\n     * correctly. */\n    const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n    const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n\n    /**\n     * @param  {Element} element a DOM element whose namespace is being checked\n     * @returns {boolean} Return false if the element has a\n     *  namespace that a spec-compliant parser would never\n     *  return. Return true otherwise.\n     */\n    const _checkValidNamespace = function _checkValidNamespace(element) {\n      let parent = getParentNode(element);\n\n      // In JSDOM, if we're inside shadow DOM, then parentNode\n      // can be null. We just simulate parent in this case.\n      if (!parent || !parent.tagName) {\n        parent = {\n          namespaceURI: NAMESPACE,\n          tagName: 'template'\n        };\n      }\n      const tagName = stringToLowerCase(element.tagName);\n      const parentTagName = stringToLowerCase(parent.tagName);\n      if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return false;\n      }\n      if (element.namespaceURI === SVG_NAMESPACE) {\n        // The only way to switch from HTML namespace to SVG\n        // is via <svg>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'svg';\n        }\n\n        // The only way to switch from MathML to SVG is via`\n        // svg if parent is either <annotation-xml> or MathML\n        // text integration points.\n        if (parent.namespaceURI === MATHML_NAMESPACE) {\n          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n        }\n\n        // We only allow elements that are defined in SVG\n        // spec. All others are disallowed in SVG namespace.\n        return Boolean(ALL_SVG_TAGS[tagName]);\n      }\n      if (element.namespaceURI === MATHML_NAMESPACE) {\n        // The only way to switch from HTML namespace to MathML\n        // is via <math>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'math';\n        }\n\n        // The only way to switch from SVG to MathML is via\n        // <math> and HTML integration points\n        if (parent.namespaceURI === SVG_NAMESPACE) {\n          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n        }\n\n        // We only allow elements that are defined in MathML\n        // spec. All others are disallowed in MathML namespace.\n        return Boolean(ALL_MATHML_TAGS[tagName]);\n      }\n      if (element.namespaceURI === HTML_NAMESPACE) {\n        // The only way to switch from SVG to HTML is via\n        // HTML integration points, and from MathML to HTML\n        // is via MathML text integration points\n        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n\n        // We disallow tags that are specific for MathML\n        // or SVG and should never appear in HTML namespace\n        return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n      }\n\n      // For XHTML and XML documents that support custom namespaces\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return true;\n      }\n\n      // The code should never reach this place (this means\n      // that the element somehow got namespace that is not\n      // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n      // Return false just in case.\n      return false;\n    };\n\n    /**\n     * _forceRemove\n     *\n     * @param  {Node} node a DOM node\n     */\n    const _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, {\n        element: node\n      });\n      try {\n        // eslint-disable-next-line unicorn/prefer-dom-node-remove\n        getParentNode(node).removeChild(node);\n      } catch (_) {\n        remove(node);\n      }\n    };\n\n    /**\n     * _removeAttribute\n     *\n     * @param  {String} name an Attribute name\n     * @param  {Node} node a DOM node\n     */\n    const _removeAttribute = function _removeAttribute(name, node) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: node.getAttributeNode(name),\n          from: node\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: node\n        });\n      }\n      node.removeAttribute(name);\n\n      // We void attribute values for unremovable \"is\"\" attributes\n      if (name === 'is' && !ALLOWED_ATTR[name]) {\n        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n          try {\n            _forceRemove(node);\n          } catch (_) {}\n        } else {\n          try {\n            node.setAttribute(name, '');\n          } catch (_) {}\n        }\n      }\n    };\n\n    /**\n     * _initDocument\n     *\n     * @param  {String} dirty a string of dirty markup\n     * @return {Document} a DOM, filled with the dirty markup\n     */\n    const _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      let doc = null;\n      let leadingWhitespace = null;\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n        // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n        dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n      }\n      const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /*\n       * Use the DOMParser API by default, fallback later if needs be\n       * DOMParser not work for svg when has multiple root element.\n       */\n      if (NAMESPACE === HTML_NAMESPACE) {\n        try {\n          doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n        } catch (_) {}\n      }\n\n      /* Use createHTMLDocument in case DOMParser is not available */\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createDocument(NAMESPACE, 'template', null);\n        try {\n          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n        } catch (_) {\n          // Syntax error if dirtyPayload is invalid xml\n        }\n      }\n      const body = doc.body || doc.documentElement;\n      if (dirty && leadingWhitespace) {\n        body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n      }\n\n      /* Work on whole document or just its body */\n      if (NAMESPACE === HTML_NAMESPACE) {\n        return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n      }\n      return WHOLE_DOCUMENT ? doc.documentElement : body;\n    };\n\n    /**\n     * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n     *\n     * @param  {Node} root The root element or node to start traversing on.\n     * @return {NodeIterator} The created NodeIterator\n     */\n    const _createNodeIterator = function _createNodeIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n    };\n\n    /**\n     * _isClobbered\n     *\n     * @param  {Node} elm element to check for clobbering attacks\n     * @return {Boolean} true if clobbered, false if safe\n     */\n    const _isClobbered = function _isClobbered(elm) {\n      return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\n    };\n\n    /**\n     * Checks whether the given object is a DOM node.\n     *\n     * @param  {Node} object object to check whether it's a DOM node\n     * @return {Boolean} true is object is a DOM node\n     */\n    const _isNode = function _isNode(object) {\n      return typeof Node === 'function' && object instanceof Node;\n    };\n\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode node to work on with the hook\n     * @param  {Object} data additional hook parameters\n     */\n    const _executeHook = function _executeHook(entryPoint, currentNode, data) {\n      if (!hooks[entryPoint]) {\n        return;\n      }\n      arrayForEach(hooks[entryPoint], hook => {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    };\n\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   {Node} currentNode to check for permission to exist\n     * @return  {Boolean} true if node was killed, false if left alive\n     */\n    const _sanitizeElements = function _sanitizeElements(currentNode) {\n      let content = null;\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeElements', currentNode, null);\n\n      /* Check if element is clobbered or can clobber */\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Now let's check the element's type and name */\n      const tagName = transformCaseFunc(currentNode.nodeName);\n\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeElement', currentNode, {\n        tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n\n      /* Detect mXSS attempts abusing namespace confusion */\n      if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove any occurrence of processing instructions */\n      if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove any kind of possibly harmful comments */\n      if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove element if anything forbids its presence */\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Check if we have a custom element to handle */\n        if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n            return false;\n          }\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n            return false;\n          }\n        }\n\n        /* Keep content except for bad-listed elements */\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n          const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n          const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n          if (childNodes && parentNode) {\n            const childCount = childNodes.length;\n            for (let i = childCount - 1; i >= 0; --i) {\n              const childClone = cloneNode(childNodes[i], true);\n              childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n              parentNode.insertBefore(childClone, getNextSibling(currentNode));\n            }\n          }\n        }\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Check whether element has a valid namespace */\n      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Make sure that older browsers don't get fallback-tag mXSS */\n      if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Sanitize element content to be template-safe */\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          content = stringReplace(content, expr, ' ');\n        });\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, {\n            element: currentNode.cloneNode()\n          });\n          currentNode.textContent = content;\n        }\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeElements', currentNode, null);\n      return false;\n    };\n\n    /**\n     * _isValidAttribute\n     *\n     * @param  {string} lcTag Lowercase tag name of containing element.\n     * @param  {string} lcName Lowercase attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n    const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n      if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n          return false;\n        }\n        /* Check value is safe. First, is attr inert? If so, is safe */\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n        return false;\n      } else ;\n      return true;\n    };\n\n    /**\n     * _isBasicCustomElement\n     * checks if at least one dash is included in tagName, and it's not the first char\n     * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n     *\n     * @param {string} tagName name of the tag of the node to sanitize\n     * @returns {boolean} Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n     */\n    const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n      return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n    };\n\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param  {Node} currentNode to sanitize\n     */\n    const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\n      const {\n        attributes\n      } = currentNode;\n\n      /* Check if we have attributes; if not we might have a text node */\n      if (!attributes) {\n        return;\n      }\n      const hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR\n      };\n      let l = attributes.length;\n\n      /* Go backwards over all attributes; safely remove bad ones */\n      while (l--) {\n        const attr = attributes[l];\n        const {\n          name,\n          namespaceURI,\n          value: attrValue\n        } = attr;\n        const lcName = transformCaseFunc(name);\n        let value = name === 'value' ? attrValue : stringTrim(attrValue);\n\n        /* Execute a hook if present */\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n        value = hookEvent.attrValue;\n\n        /* Did the hooks approve of the attribute? */\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n\n        /* Remove attribute */\n        _removeAttribute(name, currentNode);\n\n        /* Did the hooks approve of the attribute? */\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n\n        /* Work around a security issue in jQuery 3.0 */\n        if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n\n        /* Sanitize attribute content to be template-safe */\n        if (SAFE_FOR_TEMPLATES) {\n          arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n            value = stringReplace(value, expr, ' ');\n          });\n        }\n\n        /* Is `value` valid for this attribute? */\n        const lcTag = transformCaseFunc(currentNode.nodeName);\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n\n        /* Full DOM Clobbering protection via namespace isolation,\n         * Prefix id and name attributes with `user-content-`\n         */\n        if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n          // Remove the attribute with this value\n          _removeAttribute(name, currentNode);\n\n          // Prefix the value and later re-create the attribute with the sanitized value\n          value = SANITIZE_NAMED_PROPS_PREFIX + value;\n        }\n\n        /* Work around a security issue with comments inside attributes */\n        if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n\n        /* Handle attributes that require Trusted Types */\n        if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n          if (namespaceURI) ; else {\n            switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n              case 'TrustedHTML':\n                {\n                  value = trustedTypesPolicy.createHTML(value);\n                  break;\n                }\n              case 'TrustedScriptURL':\n                {\n                  value = trustedTypesPolicy.createScriptURL(value);\n                  break;\n                }\n            }\n          }\n        }\n\n        /* Handle invalid data-* attribute set by try-catching it */\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n          if (_isClobbered(currentNode)) {\n            _forceRemove(currentNode);\n          } else {\n            arrayPop(DOMPurify.removed);\n          }\n        } catch (_) {}\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  {DocumentFragment} fragment to iterate over recursively\n     */\n    const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      let shadowNode = null;\n      const shadowIterator = _createNodeIterator(fragment);\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(shadowNode)) {\n          continue;\n        }\n\n        /* Deep shadow DOM detected */\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(shadowNode);\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n\n    /**\n     * Sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} cfg object\n     */\n    // eslint-disable-next-line complexity\n    DOMPurify.sanitize = function (dirty) {\n      let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let body = null;\n      let importedNode = null;\n      let currentNode = null;\n      let returnNode = null;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n      IS_EMPTY_INPUT = !dirty;\n      if (IS_EMPTY_INPUT) {\n        dirty = '<!-->';\n      }\n\n      /* Stringify, in case dirty is an object */\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        if (typeof dirty.toString === 'function') {\n          dirty = dirty.toString();\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        } else {\n          throw typeErrorCreate('toString is not a function');\n        }\n      }\n\n      /* Return dirty HTML if DOMPurify cannot run */\n      if (!DOMPurify.isSupported) {\n        return dirty;\n      }\n\n      /* Assign config vars */\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n\n      /* Clean up removed elements */\n      DOMPurify.removed = [];\n\n      /* Check if dirty is correctly typed for IN_PLACE */\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n      if (IN_PLACE) {\n        /* Do some early pre-sanitization to avoid unsafe root nodes */\n        if (dirty.nodeName) {\n          const tagName = transformCaseFunc(dirty.nodeName);\n          if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n            throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n          }\n        }\n      } else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!---->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n        if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n\n        /* Initialize the document to work on */\n        body = _initDocument(dirty);\n\n        /* Check we have a DOM node from the data */\n        if (!body) {\n          return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n        }\n      }\n\n      /* Remove first element node (ours) if FORCE_BODY is set */\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n\n      /* Get node iterator */\n      const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n\n      /* Now start iterating over the created document */\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(currentNode)) {\n          continue;\n        }\n\n        /* Shadow DOM detected, sanitize it */\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(currentNode);\n      }\n\n      /* If we sanitized `dirty` in-place, return it. */\n      if (IN_PLACE) {\n        return dirty;\n      }\n\n      /* Return sanitized string or DOM */\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-dom-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n        if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n        return returnNode;\n      }\n      let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n      /* Serialize doctype if allowed */\n      if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n        serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n      }\n\n      /* Sanitize final string template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          serializedHTML = stringReplace(serializedHTML, expr, ' ');\n        });\n      }\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n\n    /**\n     * Public method to set the configuration once\n     * setConfig\n     *\n     * @param {Object} cfg configuration object\n     */\n    DOMPurify.setConfig = function () {\n      let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _parseConfig(cfg);\n      SET_CONFIG = true;\n    };\n\n    /**\n     * Public method to remove the configuration\n     * clearConfig\n     *\n     */\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n\n    /**\n     * Public method to check if an attribute value is valid.\n     * Uses last set config, if any. Otherwise, uses config defaults.\n     * isValidAttribute\n     *\n     * @param  {String} tag Tag name of containing element.\n     * @param  {String} attr Attribute name.\n     * @param  {String} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n     */\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n      const lcTag = transformCaseFunc(tag);\n      const lcName = transformCaseFunc(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n\n    /**\n     * AddHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint entry point for the hook to add\n     * @param {Function} hookFunction function to execute\n     */\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n      hooks[entryPoint] = hooks[entryPoint] || [];\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n\n    /**\n     * RemoveHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint entry point for the hook to remove\n     * @return {Function} removed(popped) hook\n     */\n    DOMPurify.removeHook = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        return arrayPop(hooks[entryPoint]);\n      }\n    };\n\n    /**\n     * RemoveHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint entry point for the hooks to remove\n     */\n    DOMPurify.removeHooks = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        hooks[entryPoint] = [];\n      }\n    };\n\n    /**\n     * RemoveAllHooks\n     * Public method to remove all DOMPurify hooks\n     */\n    DOMPurify.removeAllHooks = function () {\n      hooks = {};\n    };\n    return DOMPurify;\n  }\n  var purify = createDOMPurify();\n\n  return purify;\n\n}));\n//# sourceMappingURL=purify.js.map\n","/**\n * marked v14.1.3 - a markdown parser\n * Copyright (c) 2011-2024, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n/**\n * Gets the original marked default options.\n */\nfunction _getDefaults() {\n    return {\n        async: false,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        hooks: null,\n        pedantic: false,\n        renderer: null,\n        silent: false,\n        tokenizer: null,\n        walkTokens: null,\n    };\n}\nlet _defaults = _getDefaults();\nfunction changeDefaults(newDefaults) {\n    _defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape$1(html, encode) {\n    if (encode) {\n        if (escapeTest.test(html)) {\n            return html.replace(escapeReplace, getEscapeReplacement);\n        }\n    }\n    else {\n        if (escapeTestNoEncode.test(html)) {\n            return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n        }\n    }\n    return html;\n}\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n    let source = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    const obj = {\n        replace: (name, val) => {\n            let valSource = typeof val === 'string' ? val : val.source;\n            valSource = valSource.replace(caret, '$1');\n            source = source.replace(name, valSource);\n            return obj;\n        },\n        getRegex: () => {\n            return new RegExp(source, opt);\n        },\n    };\n    return obj;\n}\nfunction cleanUrl(href) {\n    try {\n        href = encodeURI(href).replace(/%25/g, '%');\n    }\n    catch {\n        return null;\n    }\n    return href;\n}\nconst noopTest = { exec: () => null };\nfunction splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n        let escaped = false;\n        let curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\')\n            escaped = !escaped;\n        if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n        }\n        else {\n            // add space before unescaped |\n            return ' |';\n        }\n    }), cells = row.split(/ \\|/);\n    let i = 0;\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n        cells.shift();\n    }\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n        cells.pop();\n    }\n    if (count) {\n        if (cells.length > count) {\n            cells.splice(count);\n        }\n        else {\n            while (cells.length < count)\n                cells.push('');\n        }\n    }\n    for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n    return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n    const l = str.length;\n    if (l === 0) {\n        return '';\n    }\n    // Length of suffix matching the invert condition.\n    let suffLen = 0;\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n        const currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && !invert) {\n            suffLen++;\n        }\n        else if (currChar !== c && invert) {\n            suffLen++;\n        }\n        else {\n            break;\n        }\n    }\n    return str.slice(0, l - suffLen);\n}\nfunction findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n        return -1;\n    }\n    let level = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            i++;\n        }\n        else if (str[i] === b[0]) {\n            level++;\n        }\n        else if (str[i] === b[1]) {\n            level--;\n            if (level < 0) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n    const href = link.href;\n    const title = link.title ? escape$1(link.title) : null;\n    const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n    if (cap[0].charAt(0) !== '!') {\n        lexer.state.inLink = true;\n        const token = {\n            type: 'link',\n            raw,\n            href,\n            title,\n            text,\n            tokens: lexer.inlineTokens(text),\n        };\n        lexer.state.inLink = false;\n        return token;\n    }\n    return {\n        type: 'image',\n        raw,\n        href,\n        title,\n        text: escape$1(text),\n    };\n}\nfunction indentCodeCompensation(raw, text) {\n    const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n    if (matchIndentToCode === null) {\n        return text;\n    }\n    const indentToCode = matchIndentToCode[1];\n    return text\n        .split('\\n')\n        .map(node => {\n        const matchIndentInNode = node.match(/^\\s+/);\n        if (matchIndentInNode === null) {\n            return node;\n        }\n        const [indentInNode] = matchIndentInNode;\n        if (indentInNode.length >= indentToCode.length) {\n            return node.slice(indentToCode.length);\n        }\n        return node;\n    })\n        .join('\\n');\n}\n/**\n * Tokenizer\n */\nclass _Tokenizer {\n    options;\n    rules; // set by the lexer\n    lexer; // set by the lexer\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(src) {\n        const cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n            return {\n                type: 'space',\n                raw: cap[0],\n            };\n        }\n    }\n    code(src) {\n        const cap = this.rules.block.code.exec(src);\n        if (cap) {\n            const text = cap[0].replace(/^(?: {1,4}| {0,3}\\t)/gm, '');\n            return {\n                type: 'code',\n                raw: cap[0],\n                codeBlockStyle: 'indented',\n                text: !this.options.pedantic\n                    ? rtrim(text, '\\n')\n                    : text,\n            };\n        }\n    }\n    fences(src) {\n        const cap = this.rules.block.fences.exec(src);\n        if (cap) {\n            const raw = cap[0];\n            const text = indentCodeCompensation(raw, cap[3] || '');\n            return {\n                type: 'code',\n                raw,\n                lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n                text,\n            };\n        }\n    }\n    heading(src) {\n        const cap = this.rules.block.heading.exec(src);\n        if (cap) {\n            let text = cap[2].trim();\n            // remove trailing #s\n            if (/#$/.test(text)) {\n                const trimmed = rtrim(text, '#');\n                if (this.options.pedantic) {\n                    text = trimmed.trim();\n                }\n                else if (!trimmed || / $/.test(trimmed)) {\n                    // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n            }\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[1].length,\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    hr(src) {\n        const cap = this.rules.block.hr.exec(src);\n        if (cap) {\n            return {\n                type: 'hr',\n                raw: rtrim(cap[0], '\\n'),\n            };\n        }\n    }\n    blockquote(src) {\n        const cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n            let lines = rtrim(cap[0], '\\n').split('\\n');\n            let raw = '';\n            let text = '';\n            const tokens = [];\n            while (lines.length > 0) {\n                let inBlockquote = false;\n                const currentLines = [];\n                let i;\n                for (i = 0; i < lines.length; i++) {\n                    // get lines up to a continuation\n                    if (/^ {0,3}>/.test(lines[i])) {\n                        currentLines.push(lines[i]);\n                        inBlockquote = true;\n                    }\n                    else if (!inBlockquote) {\n                        currentLines.push(lines[i]);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                lines = lines.slice(i);\n                const currentRaw = currentLines.join('\\n');\n                const currentText = currentRaw\n                    // precede setext continuation with 4 spaces so it isn't a setext\n                    .replace(/\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g, '\\n    $1')\n                    .replace(/^ {0,3}>[ \\t]?/gm, '');\n                raw = raw ? `${raw}\\n${currentRaw}` : currentRaw;\n                text = text ? `${text}\\n${currentText}` : currentText;\n                // parse blockquote lines as top level tokens\n                // merge paragraphs if this is a continuation\n                const top = this.lexer.state.top;\n                this.lexer.state.top = true;\n                this.lexer.blockTokens(currentText, tokens, true);\n                this.lexer.state.top = top;\n                // if there is no continuation then we are done\n                if (lines.length === 0) {\n                    break;\n                }\n                const lastToken = tokens[tokens.length - 1];\n                if (lastToken?.type === 'code') {\n                    // blockquote continuation cannot be preceded by a code block\n                    break;\n                }\n                else if (lastToken?.type === 'blockquote') {\n                    // include continuation in nested blockquote\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.blockquote(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - oldToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.text.length) + newToken.text;\n                    break;\n                }\n                else if (lastToken?.type === 'list') {\n                    // include continuation in nested list\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.list(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - lastToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.raw.length) + newToken.raw;\n                    lines = newText.substring(tokens[tokens.length - 1].raw.length).split('\\n');\n                    continue;\n                }\n            }\n            return {\n                type: 'blockquote',\n                raw,\n                tokens,\n                text,\n            };\n        }\n    }\n    list(src) {\n        let cap = this.rules.block.list.exec(src);\n        if (cap) {\n            let bull = cap[1].trim();\n            const isordered = bull.length > 1;\n            const list = {\n                type: 'list',\n                raw: '',\n                ordered: isordered,\n                start: isordered ? +bull.slice(0, -1) : '',\n                loose: false,\n                items: [],\n            };\n            bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n            if (this.options.pedantic) {\n                bull = isordered ? bull : '[*+-]';\n            }\n            // Get next list item\n            const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n            let endsWithBlankLine = false;\n            // Check if current bullet point can start a new List Item\n            while (src) {\n                let endEarly = false;\n                let raw = '';\n                let itemContents = '';\n                if (!(cap = itemRegex.exec(src))) {\n                    break;\n                }\n                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                    break;\n                }\n                raw = cap[0];\n                src = src.substring(raw.length);\n                let line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n                let nextLine = src.split('\\n', 1)[0];\n                let blankLine = !line.trim();\n                let indent = 0;\n                if (this.options.pedantic) {\n                    indent = 2;\n                    itemContents = line.trimStart();\n                }\n                else if (blankLine) {\n                    indent = cap[1].length + 1;\n                }\n                else {\n                    indent = cap[2].search(/[^ ]/); // Find first non-space char\n                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                    itemContents = line.slice(indent);\n                    indent += cap[1].length;\n                }\n                if (blankLine && /^[ \\t]*$/.test(nextLine)) { // Items begin with at most one blank line\n                    raw += nextLine + '\\n';\n                    src = src.substring(nextLine.length + 1);\n                    endEarly = true;\n                }\n                if (!endEarly) {\n                    const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n                    const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n                    const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n                    const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n                    const htmlBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}<[a-z].*>`, 'i');\n                    // Check if following lines should be included in List Item\n                    while (src) {\n                        const rawLine = src.split('\\n', 1)[0];\n                        let nextLineWithoutTabs;\n                        nextLine = rawLine;\n                        // Re-align to follow commonmark nesting rules\n                        if (this.options.pedantic) {\n                            nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n                            nextLineWithoutTabs = nextLine;\n                        }\n                        else {\n                            nextLineWithoutTabs = nextLine.replace(/\\t/g, '    ');\n                        }\n                        // End list item if found code fences\n                        if (fencesBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new heading\n                        if (headingBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of html block\n                        if (htmlBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new bullet\n                        if (nextBulletRegex.test(nextLine)) {\n                            break;\n                        }\n                        // Horizontal rule found\n                        if (hrRegex.test(nextLine)) {\n                            break;\n                        }\n                        if (nextLineWithoutTabs.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n                            itemContents += '\\n' + nextLineWithoutTabs.slice(indent);\n                        }\n                        else {\n                            // not enough indentation\n                            if (blankLine) {\n                                break;\n                            }\n                            // paragraph continuation unless last line was a different block level element\n                            if (line.replace(/\\t/g, '    ').search(/[^ ]/) >= 4) { // indented code block\n                                break;\n                            }\n                            if (fencesBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (headingBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (hrRegex.test(line)) {\n                                break;\n                            }\n                            itemContents += '\\n' + nextLine;\n                        }\n                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                            blankLine = true;\n                        }\n                        raw += rawLine + '\\n';\n                        src = src.substring(rawLine.length + 1);\n                        line = nextLineWithoutTabs.slice(indent);\n                    }\n                }\n                if (!list.loose) {\n                    // If the previous item ended with a blank line, the list is loose\n                    if (endsWithBlankLine) {\n                        list.loose = true;\n                    }\n                    else if (/\\n[ \\t]*\\n[ \\t]*$/.test(raw)) {\n                        endsWithBlankLine = true;\n                    }\n                }\n                let istask = null;\n                let ischecked;\n                // Check for task list items\n                if (this.options.gfm) {\n                    istask = /^\\[[ xX]\\] /.exec(itemContents);\n                    if (istask) {\n                        ischecked = istask[0] !== '[ ] ';\n                        itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n                    }\n                }\n                list.items.push({\n                    type: 'list_item',\n                    raw,\n                    task: !!istask,\n                    checked: ischecked,\n                    loose: false,\n                    text: itemContents,\n                    tokens: [],\n                });\n                list.raw += raw;\n            }\n            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n            list.items[list.items.length - 1].raw = list.items[list.items.length - 1].raw.trimEnd();\n            list.items[list.items.length - 1].text = list.items[list.items.length - 1].text.trimEnd();\n            list.raw = list.raw.trimEnd();\n            // Item child tokens handled here at end because we needed to have the final item to trim it first\n            for (let i = 0; i < list.items.length; i++) {\n                this.lexer.state.top = false;\n                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                if (!list.loose) {\n                    // Check if list should be loose\n                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n                    list.loose = hasMultipleLineBreaks;\n                }\n            }\n            // Set all items to loose if list is loose\n            if (list.loose) {\n                for (let i = 0; i < list.items.length; i++) {\n                    list.items[i].loose = true;\n                }\n            }\n            return list;\n        }\n    }\n    html(src) {\n        const cap = this.rules.block.html.exec(src);\n        if (cap) {\n            const token = {\n                type: 'html',\n                block: true,\n                raw: cap[0],\n                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                text: cap[0],\n            };\n            return token;\n        }\n    }\n    def(src) {\n        const cap = this.rules.block.def.exec(src);\n        if (cap) {\n            const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n            const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n            return {\n                type: 'def',\n                tag,\n                raw: cap[0],\n                href,\n                title,\n            };\n        }\n    }\n    table(src) {\n        const cap = this.rules.block.table.exec(src);\n        if (!cap) {\n            return;\n        }\n        if (!/[:|]/.test(cap[2])) {\n            // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n            return;\n        }\n        const headers = splitCells(cap[1]);\n        const aligns = cap[2].replace(/^\\||\\| *$/g, '').split('|');\n        const rows = cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : [];\n        const item = {\n            type: 'table',\n            raw: cap[0],\n            header: [],\n            align: [],\n            rows: [],\n        };\n        if (headers.length !== aligns.length) {\n            // header and align columns must be equal, rows can be different.\n            return;\n        }\n        for (const align of aligns) {\n            if (/^ *-+: *$/.test(align)) {\n                item.align.push('right');\n            }\n            else if (/^ *:-+: *$/.test(align)) {\n                item.align.push('center');\n            }\n            else if (/^ *:-+ *$/.test(align)) {\n                item.align.push('left');\n            }\n            else {\n                item.align.push(null);\n            }\n        }\n        for (let i = 0; i < headers.length; i++) {\n            item.header.push({\n                text: headers[i],\n                tokens: this.lexer.inline(headers[i]),\n                header: true,\n                align: item.align[i],\n            });\n        }\n        for (const row of rows) {\n            item.rows.push(splitCells(row, item.header.length).map((cell, i) => {\n                return {\n                    text: cell,\n                    tokens: this.lexer.inline(cell),\n                    header: false,\n                    align: item.align[i],\n                };\n            }));\n        }\n        return item;\n    }\n    lheading(src) {\n        const cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1]),\n            };\n        }\n    }\n    paragraph(src) {\n        const cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n            const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1];\n            return {\n                type: 'paragraph',\n                raw: cap[0],\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    text(src) {\n        const cap = this.rules.block.text.exec(src);\n        if (cap) {\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0]),\n            };\n        }\n    }\n    escape(src) {\n        const cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n            return {\n                type: 'escape',\n                raw: cap[0],\n                text: escape$1(cap[1]),\n            };\n        }\n    }\n    tag(src) {\n        const cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n            if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n                this.lexer.state.inLink = true;\n            }\n            else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n                this.lexer.state.inLink = false;\n            }\n            if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = true;\n            }\n            else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = false;\n            }\n            return {\n                type: 'html',\n                raw: cap[0],\n                inLink: this.lexer.state.inLink,\n                inRawBlock: this.lexer.state.inRawBlock,\n                block: false,\n                text: cap[0],\n            };\n        }\n    }\n    link(src) {\n        const cap = this.rules.inline.link.exec(src);\n        if (cap) {\n            const trimmedUrl = cap[2].trim();\n            if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n                // commonmark requires matching angle brackets\n                if (!(/>$/.test(trimmedUrl))) {\n                    return;\n                }\n                // ending angle bracket cannot be escaped\n                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                    return;\n                }\n            }\n            else {\n                // find closing parenthesis\n                const lastParenIndex = findClosingBracket(cap[2], '()');\n                if (lastParenIndex > -1) {\n                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                    const linkLen = start + cap[1].length + lastParenIndex;\n                    cap[2] = cap[2].substring(0, lastParenIndex);\n                    cap[0] = cap[0].substring(0, linkLen).trim();\n                    cap[3] = '';\n                }\n            }\n            let href = cap[2];\n            let title = '';\n            if (this.options.pedantic) {\n                // split pedantic href and title\n                const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n                if (link) {\n                    href = link[1];\n                    title = link[3];\n                }\n            }\n            else {\n                title = cap[3] ? cap[3].slice(1, -1) : '';\n            }\n            href = href.trim();\n            if (/^</.test(href)) {\n                if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n                    // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                }\n                else {\n                    href = href.slice(1, -1);\n                }\n            }\n            return outputLink(cap, {\n                href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n                title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title,\n            }, cap[0], this.lexer);\n        }\n    }\n    reflink(src, links) {\n        let cap;\n        if ((cap = this.rules.inline.reflink.exec(src))\n            || (cap = this.rules.inline.nolink.exec(src))) {\n            const linkString = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n            const link = links[linkString.toLowerCase()];\n            if (!link) {\n                const text = cap[0].charAt(0);\n                return {\n                    type: 'text',\n                    raw: text,\n                    text,\n                };\n            }\n            return outputLink(cap, link, cap[0], this.lexer);\n        }\n    }\n    emStrong(src, maskedSrc, prevChar = '') {\n        let match = this.rules.inline.emStrongLDelim.exec(src);\n        if (!match)\n            return;\n        // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n        if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u))\n            return;\n        const nextChar = match[1] || match[2] || '';\n        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n            const lLength = [...match[0]].length - 1;\n            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n            const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n            endReg.lastIndex = 0;\n            // Clip maskedSrc to same section of string as src (move to lexer?)\n            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n            while ((match = endReg.exec(maskedSrc)) != null) {\n                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                if (!rDelim)\n                    continue; // skip single * in __abc*abc__\n                rLength = [...rDelim].length;\n                if (match[3] || match[4]) { // found another Left Delim\n                    delimTotal += rLength;\n                    continue;\n                }\n                else if (match[5] || match[6]) { // either Left or Right Delim\n                    if (lLength % 3 && !((lLength + rLength) % 3)) {\n                        midDelimTotal += rLength;\n                        continue; // CommonMark Emphasis Rules 9-10\n                    }\n                }\n                delimTotal -= rLength;\n                if (delimTotal > 0)\n                    continue; // Haven't found enough closing delimiters\n                // Remove extra characters. *a*** -> *a*\n                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                // char length can be >1 for unicode characters;\n                const lastCharLength = [...match[0]][0].length;\n                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                // Create `em` if smallest delimiter has odd char count. *a***\n                if (Math.min(lLength, rLength) % 2) {\n                    const text = raw.slice(1, -1);\n                    return {\n                        type: 'em',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text),\n                    };\n                }\n                // Create 'strong' if smallest delimiter has even char count. **a***\n                const text = raw.slice(2, -2);\n                return {\n                    type: 'strong',\n                    raw,\n                    text,\n                    tokens: this.lexer.inlineTokens(text),\n                };\n            }\n        }\n    }\n    codespan(src) {\n        const cap = this.rules.inline.code.exec(src);\n        if (cap) {\n            let text = cap[2].replace(/\\n/g, ' ');\n            const hasNonSpaceChars = /[^ ]/.test(text);\n            const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                text = text.substring(1, text.length - 1);\n            }\n            text = escape$1(text, true);\n            return {\n                type: 'codespan',\n                raw: cap[0],\n                text,\n            };\n        }\n    }\n    br(src) {\n        const cap = this.rules.inline.br.exec(src);\n        if (cap) {\n            return {\n                type: 'br',\n                raw: cap[0],\n            };\n        }\n    }\n    del(src) {\n        const cap = this.rules.inline.del.exec(src);\n        if (cap) {\n            return {\n                type: 'del',\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2]),\n            };\n        }\n    }\n    autolink(src) {\n        const cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape$1(cap[1]);\n                href = 'mailto:' + text;\n            }\n            else {\n                text = escape$1(cap[1]);\n                href = text;\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    url(src) {\n        let cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape$1(cap[0]);\n                href = 'mailto:' + text;\n            }\n            else {\n                // do extended autolink path validation\n                let prevCapZero;\n                do {\n                    prevCapZero = cap[0];\n                    cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n                } while (prevCapZero !== cap[0]);\n                text = escape$1(cap[0]);\n                if (cap[1] === 'www.') {\n                    href = 'http://' + cap[0];\n                }\n                else {\n                    href = cap[0];\n                }\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    inlineText(src) {\n        const cap = this.rules.inline.text.exec(src);\n        if (cap) {\n            let text;\n            if (this.lexer.state.inRawBlock) {\n                text = cap[0];\n            }\n            else {\n                text = escape$1(cap[0]);\n            }\n            return {\n                type: 'text',\n                raw: cap[0],\n                text,\n            };\n        }\n    }\n}\n\n/**\n * Block-Level Grammar\n */\nconst newline = /^(?:[ \\t]*(?:\\n|$))+/;\nconst blockCode = /^((?: {4}| {0,3}\\t)[^\\n]+(?:\\n(?:[ \\t]*(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheading = edit(/^(?!bull |blockCode|fences|blockquote|heading|html)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n    .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n    .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n    .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n    .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n    .getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n[ \\t]*)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n[ \\t]*)?| *\\n[ \\t]*)(title))? *(?:\\n+|$)/)\n    .replace('label', _blockLabel)\n    .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n    .getRegex();\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n    .replace(/bull/g, bullet)\n    .getRegex();\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n    + '|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title'\n    + '|tr|track|ul';\nconst _comment = /<!--(?:-?>|[\\s\\S]*?(?:-->|$))/;\nconst html = edit('^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) closing tag\n    + ')', 'i')\n    .replace('comment', _comment)\n    .replace('tag', _tag)\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst paragraph = edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n    .replace('paragraph', paragraph)\n    .getRegex();\n/**\n * Normal Block Grammar\n */\nconst blockNormal = {\n    blockquote,\n    code: blockCode,\n    def,\n    fences,\n    heading,\n    hr,\n    html,\n    lheading,\n    list,\n    newline,\n    paragraph,\n    table: noopTest,\n    text: blockText,\n};\n/**\n * GFM Block Grammar\n */\nconst gfmTable = edit('^ *([^\\\\n ].*)\\\\n' // Header\n    + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('blockquote', ' {0,3}>')\n    .replace('code', '(?: {4}| {0,3}\\t)[^\\\\n]')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockGfm = {\n    ...blockNormal,\n    table: gfmTable,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n        .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n        .replace('table', gfmTable) // interrupt paragraphs with table\n        .replace('blockquote', ' {0,3}>')\n        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n        .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n        .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n        .getRegex(),\n};\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nconst blockPedantic = {\n    ...blockNormal,\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n        .replace('comment', _comment)\n        .replace(/tag/g, '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n        + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n        .getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest, // fences not supported\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' *#{1,6} *[^\\n]')\n        .replace('lheading', lheading)\n        .replace('|table', '')\n        .replace('blockquote', ' {0,3}>')\n        .replace('|fences', '')\n        .replace('|list', '')\n        .replace('|html', '')\n        .replace('|tag', '')\n        .getRegex(),\n};\n/**\n * Inline-Level Grammar\n */\nconst escape = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = '\\\\p{P}\\\\p{S}';\nconst punctuation = edit(/^((?![*_])[\\spunctuation])/, 'u')\n    .replace(/punctuation/g, _punctuation).getRegex();\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\((?:\\\\.|[^\\\\\\(\\)]|\\((?:\\\\.|[^\\\\\\(\\)])*\\))*\\)|`[^`]*?`|<[^<>]*?>/g;\nconst emStrongLDelim = edit(/^(?:\\*+(?:((?!\\*)[punct])|[^\\s*]))|^_+(?:((?!_)[punct])|([^\\s_]))/, 'u')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongRDelimAst = edit('^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n    + '|[^*]+(?=[^*])' // Consume to delim\n    + '|(?!\\\\*)[punct](\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n    + '|[^punct\\\\s](\\\\*+)(?!\\\\*)(?=[punct\\\\s]|$)' // (2) a***#, a*** can only be a Right Delimiter\n    + '|(?!\\\\*)[punct\\\\s](\\\\*+)(?=[^punct\\\\s])' // (3) #***a, ***a can only be Left Delimiter\n    + '|[\\\\s](\\\\*+)(?!\\\\*)(?=[punct])' // (4) ***# can only be Left Delimiter\n    + '|(?!\\\\*)[punct](\\\\*+)(?!\\\\*)(?=[punct])' // (5) #***# can be either Left or Right Delimiter\n    + '|[^punct\\\\s](\\\\*+)(?=[^punct\\\\s])', 'gu') // (6) a***a can be either Left or Right Delimiter\n    .replace(/punct/g, _punctuation)\n    .getRegex();\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit('^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n    + '|[^_]+(?=[^_])' // Consume to delim\n    + '|(?!_)[punct](_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n    + '|[^punct\\\\s](_+)(?!_)(?=[punct\\\\s]|$)' // (2) a___#, a___ can only be a Right Delimiter\n    + '|(?!_)[punct\\\\s](_+)(?=[^punct\\\\s])' // (3) #___a, ___a can only be Left Delimiter\n    + '|[\\\\s](_+)(?!_)(?=[punct])' // (4) ___# can only be Left Delimiter\n    + '|(?!_)[punct](_+)(?!_)(?=[punct])', 'gu') // (5) #___# can be either Left or Right Delimiter\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst anyPunctuation = edit(/\\\\([punct])/, 'gu')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n    .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n    .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n    .getRegex();\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit('^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n    .replace('comment', _inlineComment)\n    .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/)\n    .replace('label', _inlineLabel)\n    .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/)\n    .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n    .getRegex();\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n    .replace('label', _inlineLabel)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n    .replace('reflink', reflink)\n    .replace('nolink', nolink)\n    .getRegex();\n/**\n * Normal Inline Grammar\n */\nconst inlineNormal = {\n    _backpedal: noopTest, // only used for GFM url\n    anyPunctuation,\n    autolink,\n    blockSkip,\n    br,\n    code: inlineCode,\n    del: noopTest,\n    emStrongLDelim,\n    emStrongRDelimAst,\n    emStrongRDelimUnd,\n    escape,\n    link,\n    nolink,\n    punctuation,\n    reflink,\n    reflinkSearch,\n    tag,\n    text: inlineText,\n    url: noopTest,\n};\n/**\n * Pedantic Inline Grammar\n */\nconst inlinePedantic = {\n    ...inlineNormal,\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n};\n/**\n * GFM Inline Grammar\n */\nconst inlineGfm = {\n    ...inlineNormal,\n    escape: edit(escape).replace('])', '~|])').getRegex(),\n    url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n        .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n        .getRegex(),\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/,\n};\n/**\n * GFM + Line Breaks Inline Grammar\n */\nconst inlineBreaks = {\n    ...inlineGfm,\n    br: edit(br).replace('{2,}', '*').getRegex(),\n    text: edit(inlineGfm.text)\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n        .replace(/\\{2,\\}/g, '*')\n        .getRegex(),\n};\n/**\n * exports\n */\nconst block = {\n    normal: blockNormal,\n    gfm: blockGfm,\n    pedantic: blockPedantic,\n};\nconst inline = {\n    normal: inlineNormal,\n    gfm: inlineGfm,\n    breaks: inlineBreaks,\n    pedantic: inlinePedantic,\n};\n\n/**\n * Block Lexer\n */\nclass _Lexer {\n    tokens;\n    options;\n    state;\n    tokenizer;\n    inlineQueue;\n    constructor(options) {\n        // TokenList cannot be created in one go\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || _defaults;\n        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n            inLink: false,\n            inRawBlock: false,\n            top: true,\n        };\n        const rules = {\n            block: block.normal,\n            inline: inline.normal,\n        };\n        if (this.options.pedantic) {\n            rules.block = block.pedantic;\n            rules.inline = inline.pedantic;\n        }\n        else if (this.options.gfm) {\n            rules.block = block.gfm;\n            if (this.options.breaks) {\n                rules.inline = inline.breaks;\n            }\n            else {\n                rules.inline = inline.gfm;\n            }\n        }\n        this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n    static get rules() {\n        return {\n            block,\n            inline,\n        };\n    }\n    /**\n     * Static Lex Method\n     */\n    static lex(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    static lexInline(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    lex(src) {\n        src = src\n            .replace(/\\r\\n|\\r/g, '\\n');\n        this.blockTokens(src, this.tokens);\n        for (let i = 0; i < this.inlineQueue.length; i++) {\n            const next = this.inlineQueue[i];\n            this.inlineTokens(next.src, next.tokens);\n        }\n        this.inlineQueue = [];\n        return this.tokens;\n    }\n    blockTokens(src, tokens = [], lastParagraphClipped = false) {\n        if (this.options.pedantic) {\n            src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n        }\n        let token;\n        let lastToken;\n        let cutSrc;\n        while (src) {\n            if (this.options.extensions\n                && this.options.extensions.block\n                && this.options.extensions.block.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // newline\n            if (token = this.tokenizer.space(src)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.length === 1 && tokens.length > 0) {\n                    // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unnecessary paragraph tags\n                    tokens[tokens.length - 1].raw += '\\n';\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.code(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                // An indented code block cannot interrupt a paragraph.\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // fences\n            if (token = this.tokenizer.fences(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // heading\n            if (token = this.tokenizer.heading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // hr\n            if (token = this.tokenizer.hr(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // blockquote\n            if (token = this.tokenizer.blockquote(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // list\n            if (token = this.tokenizer.list(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // html\n            if (token = this.tokenizer.html(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // def\n            if (token = this.tokenizer.def(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.raw;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else if (!this.tokens.links[token.tag]) {\n                    this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title,\n                    };\n                }\n                continue;\n            }\n            // table (gfm)\n            if (token = this.tokenizer.table(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // lheading\n            if (token = this.tokenizer.lheading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // top-level paragraph\n            // prevent paragraph consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startBlock) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startBlock.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                lastToken = tokens[tokens.length - 1];\n                if (lastParagraphClipped && lastToken?.type === 'paragraph') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                lastParagraphClipped = (cutSrc.length !== src.length);\n                src = src.substring(token.raw.length);\n                continue;\n            }\n            // text\n            if (token = this.tokenizer.text(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        this.state.top = true;\n        return tokens;\n    }\n    inline(src, tokens = []) {\n        this.inlineQueue.push({ src, tokens });\n        return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    inlineTokens(src, tokens = []) {\n        let token, lastToken, cutSrc;\n        // String with links masked to avoid interference with em and strong\n        let maskedSrc = src;\n        let match;\n        let keepPrevChar, prevChar;\n        // Mask out reflinks\n        if (this.tokens.links) {\n            const links = Object.keys(this.tokens.links);\n            if (links.length > 0) {\n                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                        maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                    }\n                }\n            }\n        }\n        // Mask out other blocks\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        }\n        // Mask out escaped characters\n        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n        }\n        while (src) {\n            if (!keepPrevChar) {\n                prevChar = '';\n            }\n            keepPrevChar = false;\n            // extensions\n            if (this.options.extensions\n                && this.options.extensions.inline\n                && this.options.extensions.inline.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // escape\n            if (token = this.tokenizer.escape(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // tag\n            if (token = this.tokenizer.tag(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // link\n            if (token = this.tokenizer.link(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // reflink, nolink\n            if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // em & strong\n            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.codespan(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // br\n            if (token = this.tokenizer.br(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // del (gfm)\n            if (token = this.tokenizer.del(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // autolink\n            if (token = this.tokenizer.autolink(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // url (gfm)\n            if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // text\n            // prevent inlineText consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startInline) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startInline.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (token = this.tokenizer.inlineText(cutSrc)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                }\n                keepPrevChar = true;\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        return tokens;\n    }\n}\n\n/**\n * Renderer\n */\nclass _Renderer {\n    options;\n    parser; // set by the parser\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(token) {\n        return '';\n    }\n    code({ text, lang, escaped }) {\n        const langString = (lang || '').match(/^\\S*/)?.[0];\n        const code = text.replace(/\\n$/, '') + '\\n';\n        if (!langString) {\n            return '<pre><code>'\n                + (escaped ? code : escape$1(code, true))\n                + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"language-'\n            + escape$1(langString)\n            + '\">'\n            + (escaped ? code : escape$1(code, true))\n            + '</code></pre>\\n';\n    }\n    blockquote({ tokens }) {\n        const body = this.parser.parse(tokens);\n        return `<blockquote>\\n${body}</blockquote>\\n`;\n    }\n    html({ text }) {\n        return text;\n    }\n    heading({ tokens, depth }) {\n        return `<h${depth}>${this.parser.parseInline(tokens)}</h${depth}>\\n`;\n    }\n    hr(token) {\n        return '<hr>\\n';\n    }\n    list(token) {\n        const ordered = token.ordered;\n        const start = token.start;\n        let body = '';\n        for (let j = 0; j < token.items.length; j++) {\n            const item = token.items[j];\n            body += this.listitem(item);\n        }\n        const type = ordered ? 'ol' : 'ul';\n        const startAttr = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n        return '<' + type + startAttr + '>\\n' + body + '</' + type + '>\\n';\n    }\n    listitem(item) {\n        let itemBody = '';\n        if (item.task) {\n            const checkbox = this.checkbox({ checked: !!item.checked });\n            if (item.loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                    }\n                }\n                else {\n                    item.tokens.unshift({\n                        type: 'text',\n                        raw: checkbox + ' ',\n                        text: checkbox + ' ',\n                    });\n                }\n            }\n            else {\n                itemBody += checkbox + ' ';\n            }\n        }\n        itemBody += this.parser.parse(item.tokens, !!item.loose);\n        return `<li>${itemBody}</li>\\n`;\n    }\n    checkbox({ checked }) {\n        return '<input '\n            + (checked ? 'checked=\"\" ' : '')\n            + 'disabled=\"\" type=\"checkbox\">';\n    }\n    paragraph({ tokens }) {\n        return `<p>${this.parser.parseInline(tokens)}</p>\\n`;\n    }\n    table(token) {\n        let header = '';\n        // header\n        let cell = '';\n        for (let j = 0; j < token.header.length; j++) {\n            cell += this.tablecell(token.header[j]);\n        }\n        header += this.tablerow({ text: cell });\n        let body = '';\n        for (let j = 0; j < token.rows.length; j++) {\n            const row = token.rows[j];\n            cell = '';\n            for (let k = 0; k < row.length; k++) {\n                cell += this.tablecell(row[k]);\n            }\n            body += this.tablerow({ text: cell });\n        }\n        if (body)\n            body = `<tbody>${body}</tbody>`;\n        return '<table>\\n'\n            + '<thead>\\n'\n            + header\n            + '</thead>\\n'\n            + body\n            + '</table>\\n';\n    }\n    tablerow({ text }) {\n        return `<tr>\\n${text}</tr>\\n`;\n    }\n    tablecell(token) {\n        const content = this.parser.parseInline(token.tokens);\n        const type = token.header ? 'th' : 'td';\n        const tag = token.align\n            ? `<${type} align=\"${token.align}\">`\n            : `<${type}>`;\n        return tag + content + `</${type}>\\n`;\n    }\n    /**\n     * span level renderer\n     */\n    strong({ tokens }) {\n        return `<strong>${this.parser.parseInline(tokens)}</strong>`;\n    }\n    em({ tokens }) {\n        return `<em>${this.parser.parseInline(tokens)}</em>`;\n    }\n    codespan({ text }) {\n        return `<code>${text}</code>`;\n    }\n    br(token) {\n        return '<br>';\n    }\n    del({ tokens }) {\n        return `<del>${this.parser.parseInline(tokens)}</del>`;\n    }\n    link({ href, title, tokens }) {\n        const text = this.parser.parseInline(tokens);\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + title + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    }\n    image({ href, title, text }) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = `<img src=\"${href}\" alt=\"${text}\"`;\n        if (title) {\n            out += ` title=\"${title}\"`;\n        }\n        out += '>';\n        return out;\n    }\n    text(token) {\n        return 'tokens' in token && token.tokens ? this.parser.parseInline(token.tokens) : token.text;\n    }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass _TextRenderer {\n    // no need for block level renderers\n    strong({ text }) {\n        return text;\n    }\n    em({ text }) {\n        return text;\n    }\n    codespan({ text }) {\n        return text;\n    }\n    del({ text }) {\n        return text;\n    }\n    html({ text }) {\n        return text;\n    }\n    text({ text }) {\n        return text;\n    }\n    link({ text }) {\n        return '' + text;\n    }\n    image({ text }) {\n        return '' + text;\n    }\n    br() {\n        return '';\n    }\n}\n\n/**\n * Parsing & Compiling\n */\nclass _Parser {\n    options;\n    renderer;\n    textRenderer;\n    constructor(options) {\n        this.options = options || _defaults;\n        this.options.renderer = this.options.renderer || new _Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.renderer.parser = this;\n        this.textRenderer = new _TextRenderer();\n    }\n    /**\n     * Static Parse Method\n     */\n    static parse(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    static parseInline(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    parse(tokens, top = true) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[anyToken.type]) {\n                const genericToken = anyToken;\n                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'space': {\n                    out += this.renderer.space(token);\n                    continue;\n                }\n                case 'hr': {\n                    out += this.renderer.hr(token);\n                    continue;\n                }\n                case 'heading': {\n                    out += this.renderer.heading(token);\n                    continue;\n                }\n                case 'code': {\n                    out += this.renderer.code(token);\n                    continue;\n                }\n                case 'table': {\n                    out += this.renderer.table(token);\n                    continue;\n                }\n                case 'blockquote': {\n                    out += this.renderer.blockquote(token);\n                    continue;\n                }\n                case 'list': {\n                    out += this.renderer.list(token);\n                    continue;\n                }\n                case 'html': {\n                    out += this.renderer.html(token);\n                    continue;\n                }\n                case 'paragraph': {\n                    out += this.renderer.paragraph(token);\n                    continue;\n                }\n                case 'text': {\n                    let textToken = token;\n                    let body = this.renderer.text(textToken);\n                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                        textToken = tokens[++i];\n                        body += '\\n' + this.renderer.text(textToken);\n                    }\n                    if (top) {\n                        out += this.renderer.paragraph({\n                            type: 'paragraph',\n                            raw: body,\n                            text: body,\n                            tokens: [{ type: 'text', raw: body, text: body }],\n                        });\n                    }\n                    else {\n                        out += body;\n                    }\n                    continue;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    parseInline(tokens, renderer) {\n        renderer = renderer || this.renderer;\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[anyToken.type]) {\n                const ret = this.options.extensions.renderers[anyToken.type].call({ parser: this }, anyToken);\n                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(anyToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'escape': {\n                    out += renderer.text(token);\n                    break;\n                }\n                case 'html': {\n                    out += renderer.html(token);\n                    break;\n                }\n                case 'link': {\n                    out += renderer.link(token);\n                    break;\n                }\n                case 'image': {\n                    out += renderer.image(token);\n                    break;\n                }\n                case 'strong': {\n                    out += renderer.strong(token);\n                    break;\n                }\n                case 'em': {\n                    out += renderer.em(token);\n                    break;\n                }\n                case 'codespan': {\n                    out += renderer.codespan(token);\n                    break;\n                }\n                case 'br': {\n                    out += renderer.br(token);\n                    break;\n                }\n                case 'del': {\n                    out += renderer.del(token);\n                    break;\n                }\n                case 'text': {\n                    out += renderer.text(token);\n                    break;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n}\n\nclass _Hooks {\n    options;\n    block;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    static passThroughHooks = new Set([\n        'preprocess',\n        'postprocess',\n        'processAllTokens',\n    ]);\n    /**\n     * Process markdown before marked\n     */\n    preprocess(markdown) {\n        return markdown;\n    }\n    /**\n     * Process HTML after marked is finished\n     */\n    postprocess(html) {\n        return html;\n    }\n    /**\n     * Process all tokens before walk tokens\n     */\n    processAllTokens(tokens) {\n        return tokens;\n    }\n    /**\n     * Provide function to tokenize markdown\n     */\n    provideLexer() {\n        return this.block ? _Lexer.lex : _Lexer.lexInline;\n    }\n    /**\n     * Provide function to parse tokens\n     */\n    provideParser() {\n        return this.block ? _Parser.parse : _Parser.parseInline;\n    }\n}\n\nclass Marked {\n    defaults = _getDefaults();\n    options = this.setOptions;\n    parse = this.parseMarkdown(true);\n    parseInline = this.parseMarkdown(false);\n    Parser = _Parser;\n    Renderer = _Renderer;\n    TextRenderer = _TextRenderer;\n    Lexer = _Lexer;\n    Tokenizer = _Tokenizer;\n    Hooks = _Hooks;\n    constructor(...args) {\n        this.use(...args);\n    }\n    /**\n     * Run callback for every token\n     */\n    walkTokens(tokens, callback) {\n        let values = [];\n        for (const token of tokens) {\n            values = values.concat(callback.call(this, token));\n            switch (token.type) {\n                case 'table': {\n                    const tableToken = token;\n                    for (const cell of tableToken.header) {\n                        values = values.concat(this.walkTokens(cell.tokens, callback));\n                    }\n                    for (const row of tableToken.rows) {\n                        for (const cell of row) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                    }\n                    break;\n                }\n                case 'list': {\n                    const listToken = token;\n                    values = values.concat(this.walkTokens(listToken.items, callback));\n                    break;\n                }\n                default: {\n                    const genericToken = token;\n                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                            const tokens = genericToken[childTokens].flat(Infinity);\n                            values = values.concat(this.walkTokens(tokens, callback));\n                        });\n                    }\n                    else if (genericToken.tokens) {\n                        values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                    }\n                }\n            }\n        }\n        return values;\n    }\n    use(...args) {\n        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n        args.forEach((pack) => {\n            // copy options to new object\n            const opts = { ...pack };\n            // set async to true if it was set to true before\n            opts.async = this.defaults.async || opts.async || false;\n            // ==-- Parse \"addon\" extensions --== //\n            if (pack.extensions) {\n                pack.extensions.forEach((ext) => {\n                    if (!ext.name) {\n                        throw new Error('extension name required');\n                    }\n                    if ('renderer' in ext) { // Renderer extensions\n                        const prevRenderer = extensions.renderers[ext.name];\n                        if (prevRenderer) {\n                            // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function (...args) {\n                                let ret = ext.renderer.apply(this, args);\n                                if (ret === false) {\n                                    ret = prevRenderer.apply(this, args);\n                                }\n                                return ret;\n                            };\n                        }\n                        else {\n                            extensions.renderers[ext.name] = ext.renderer;\n                        }\n                    }\n                    if ('tokenizer' in ext) { // Tokenizer Extensions\n                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                            throw new Error(\"extension level must be 'block' or 'inline'\");\n                        }\n                        const extLevel = extensions[ext.level];\n                        if (extLevel) {\n                            extLevel.unshift(ext.tokenizer);\n                        }\n                        else {\n                            extensions[ext.level] = [ext.tokenizer];\n                        }\n                        if (ext.start) { // Function to check for start of token\n                            if (ext.level === 'block') {\n                                if (extensions.startBlock) {\n                                    extensions.startBlock.push(ext.start);\n                                }\n                                else {\n                                    extensions.startBlock = [ext.start];\n                                }\n                            }\n                            else if (ext.level === 'inline') {\n                                if (extensions.startInline) {\n                                    extensions.startInline.push(ext.start);\n                                }\n                                else {\n                                    extensions.startInline = [ext.start];\n                                }\n                            }\n                        }\n                    }\n                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    }\n                });\n                opts.extensions = extensions;\n            }\n            // ==-- Parse \"overwrite\" extensions --== //\n            if (pack.renderer) {\n                const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                for (const prop in pack.renderer) {\n                    if (!(prop in renderer)) {\n                        throw new Error(`renderer '${prop}' does not exist`);\n                    }\n                    if (['options', 'parser'].includes(prop)) {\n                        // ignore options property\n                        continue;\n                    }\n                    const rendererProp = prop;\n                    const rendererFunc = pack.renderer[rendererProp];\n                    const prevRenderer = renderer[rendererProp];\n                    // Replace renderer with func to run extension, but fall back if false\n                    renderer[rendererProp] = (...args) => {\n                        let ret = rendererFunc.apply(renderer, args);\n                        if (ret === false) {\n                            ret = prevRenderer.apply(renderer, args);\n                        }\n                        return ret || '';\n                    };\n                }\n                opts.renderer = renderer;\n            }\n            if (pack.tokenizer) {\n                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                for (const prop in pack.tokenizer) {\n                    if (!(prop in tokenizer)) {\n                        throw new Error(`tokenizer '${prop}' does not exist`);\n                    }\n                    if (['options', 'rules', 'lexer'].includes(prop)) {\n                        // ignore options, rules, and lexer properties\n                        continue;\n                    }\n                    const tokenizerProp = prop;\n                    const tokenizerFunc = pack.tokenizer[tokenizerProp];\n                    const prevTokenizer = tokenizer[tokenizerProp];\n                    // Replace tokenizer with func to run extension, but fall back if false\n                    // @ts-expect-error cannot type tokenizer function dynamically\n                    tokenizer[tokenizerProp] = (...args) => {\n                        let ret = tokenizerFunc.apply(tokenizer, args);\n                        if (ret === false) {\n                            ret = prevTokenizer.apply(tokenizer, args);\n                        }\n                        return ret;\n                    };\n                }\n                opts.tokenizer = tokenizer;\n            }\n            // ==-- Parse Hooks extensions --== //\n            if (pack.hooks) {\n                const hooks = this.defaults.hooks || new _Hooks();\n                for (const prop in pack.hooks) {\n                    if (!(prop in hooks)) {\n                        throw new Error(`hook '${prop}' does not exist`);\n                    }\n                    if (['options', 'block'].includes(prop)) {\n                        // ignore options and block properties\n                        continue;\n                    }\n                    const hooksProp = prop;\n                    const hooksFunc = pack.hooks[hooksProp];\n                    const prevHook = hooks[hooksProp];\n                    if (_Hooks.passThroughHooks.has(prop)) {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (arg) => {\n                            if (this.defaults.async) {\n                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                    return prevHook.call(hooks, ret);\n                                });\n                            }\n                            const ret = hooksFunc.call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                    }\n                    else {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (...args) => {\n                            let ret = hooksFunc.apply(hooks, args);\n                            if (ret === false) {\n                                ret = prevHook.apply(hooks, args);\n                            }\n                            return ret;\n                        };\n                    }\n                }\n                opts.hooks = hooks;\n            }\n            // ==-- Parse WalkTokens extensions --== //\n            if (pack.walkTokens) {\n                const walkTokens = this.defaults.walkTokens;\n                const packWalktokens = pack.walkTokens;\n                opts.walkTokens = function (token) {\n                    let values = [];\n                    values.push(packWalktokens.call(this, token));\n                    if (walkTokens) {\n                        values = values.concat(walkTokens.call(this, token));\n                    }\n                    return values;\n                };\n            }\n            this.defaults = { ...this.defaults, ...opts };\n        });\n        return this;\n    }\n    setOptions(opt) {\n        this.defaults = { ...this.defaults, ...opt };\n        return this;\n    }\n    lexer(src, options) {\n        return _Lexer.lex(src, options ?? this.defaults);\n    }\n    parser(tokens, options) {\n        return _Parser.parse(tokens, options ?? this.defaults);\n    }\n    parseMarkdown(blockType) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const parse = (src, options) => {\n            const origOpt = { ...options };\n            const opt = { ...this.defaults, ...origOpt };\n            const throwError = this.onError(!!opt.silent, !!opt.async);\n            // throw error if an extension set async to true but parse was called with async: false\n            if (this.defaults.async === true && origOpt.async === false) {\n                return throwError(new Error('marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise.'));\n            }\n            // throw error in case of non string input\n            if (typeof src === 'undefined' || src === null) {\n                return throwError(new Error('marked(): input parameter is undefined or null'));\n            }\n            if (typeof src !== 'string') {\n                return throwError(new Error('marked(): input parameter is of type '\n                    + Object.prototype.toString.call(src) + ', string expected'));\n            }\n            if (opt.hooks) {\n                opt.hooks.options = opt;\n                opt.hooks.block = blockType;\n            }\n            const lexer = opt.hooks ? opt.hooks.provideLexer() : (blockType ? _Lexer.lex : _Lexer.lexInline);\n            const parser = opt.hooks ? opt.hooks.provideParser() : (blockType ? _Parser.parse : _Parser.parseInline);\n            if (opt.async) {\n                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                    .then(src => lexer(src, opt))\n                    .then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens)\n                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                    .then(tokens => parser(tokens, opt))\n                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                    .catch(throwError);\n            }\n            try {\n                if (opt.hooks) {\n                    src = opt.hooks.preprocess(src);\n                }\n                let tokens = lexer(src, opt);\n                if (opt.hooks) {\n                    tokens = opt.hooks.processAllTokens(tokens);\n                }\n                if (opt.walkTokens) {\n                    this.walkTokens(tokens, opt.walkTokens);\n                }\n                let html = parser(tokens, opt);\n                if (opt.hooks) {\n                    html = opt.hooks.postprocess(html);\n                }\n                return html;\n            }\n            catch (e) {\n                return throwError(e);\n            }\n        };\n        return parse;\n    }\n    onError(silent, async) {\n        return (e) => {\n            e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n            if (silent) {\n                const msg = '<p>An error occurred:</p><pre>'\n                    + escape$1(e.message + '', true)\n                    + '</pre>';\n                if (async) {\n                    return Promise.resolve(msg);\n                }\n                return msg;\n            }\n            if (async) {\n                return Promise.reject(e);\n            }\n            throw e;\n        };\n    }\n}\n\nconst markedInstance = new Marked();\nfunction marked(src, opt) {\n    return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\n    marked.setOptions = function (options) {\n        markedInstance.setOptions(options);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n    markedInstance.use(...args);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = _Parser.parse;\nconst lexer = _Lexer.lex;\n\nexport { _Hooks as Hooks, _Lexer as Lexer, Marked, _Parser as Parser, _Renderer as Renderer, _TextRenderer as TextRenderer, _Tokenizer as Tokenizer, _defaults as defaults, _getDefaults as getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n//# sourceMappingURL=marked.esm.js.map\n","// src/utils/assetHelper.js\r\nexport function getAssetPath(assetType, filename, assetPaths) {\r\n  if (!filename) return '';\r\n  \r\n  const typeMap = {\r\n    'character': 'characters',\r\n    'background': 'backgrounds',\r\n    'sound': 'sounds',\r\n    'music': 'music',\r\n    'style': 'styles'\r\n    // Remove 'full' and 'close' if they're no longer used\r\n  };\r\n\r\n  const pathType = typeMap[assetType];\r\n\r\n  if (pathType && assetPaths[pathType]) {\r\n    // Remove any leading and trailing slashes to ensure relative paths\r\n    const sanitizedPath = assetPaths[pathType].replace(/^\\/+|\\/+$/g, '');\r\n    console.log(`${sanitizedPath}/${filename}`)\r\n    return `${sanitizedPath}/${filename}`;\r\n  }\r\n\r\n  console.warn(`Asset type \"${assetType}\" is not defined in assetPaths.`);\r\n  return filename; // Fallback to filename if pathType not found\r\n}\r\n","// src/utils/transitions.js\r\nimport { cubicOut } from 'svelte/easing';\r\nimport { fade } from 'svelte/transition'; // Import Svelte's built-in fade\r\nimport { scale } from 'svelte/transition'; // Import Svelte's built-in scale\r\n\r\n// Define the different transition effects\r\nexport const transitions = {\r\n  no_effect: {\r\n    name: null,\r\n    duration: 0\r\n  },\r\n  fade_short: {\r\n    name: fade, // Directly use Svelte's fade transition\r\n    duration: 500 // 0.5 seconds\r\n  },\r\n  fade_long: {\r\n    name: fade, // Directly use Svelte's fade transition\r\n    duration: 2000 // 2 seconds\r\n  },\r\n  fade_scale: {\r\n    name: 'fadeScale', // Custom transition name\r\n    duration: 700 // 0.7 seconds\r\n  }\r\n};\r\n\r\n// Function to get transition based on the slide\r\nexport function getTransition(slide) {\r\n  return transitions[slide.transition] || transitions.no_effect;\r\n}\r\n\r\n/**\r\n * Custom fade transition with customizable duration.\r\n * @param {Object} params - Transition parameters.\r\n * @param {number} params.duration - Duration of the transition in milliseconds.\r\n */\r\nexport function customFade(node, { duration = 500 }) {\r\n  return {\r\n    duration,\r\n    css: t => `\r\n      opacity: ${t}\r\n    `\r\n  };\r\n}\r\n\r\n/**\r\n * Custom fly transition with direction and duration.\r\n * @param {Object} params - Transition parameters.\r\n * @param {string} params.direction - Direction from which the element flies in ('left', 'right', 'up', 'down').\r\n * @param {number} params.duration - Duration of the transition in milliseconds.\r\n */\r\nexport function customFly(node, { direction = 'left', duration = 500 }) {\r\n  let x = 0;\r\n  let y = 0;\r\n\r\n  switch(direction) {\r\n    case 'left':\r\n      x = -200;\r\n      break;\r\n    case 'right':\r\n      x = 200;\r\n      break;\r\n    case 'up':\r\n      y = -200;\r\n      break;\r\n    case 'down':\r\n      y = 200;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return {\r\n    duration,\r\n    easing: cubicOut,\r\n    css: t => `\r\n      transform: translate(${x * (1 - t)}px, ${y * (1 - t)}px);\r\n      opacity: ${t}\r\n    `\r\n  };\r\n}\r\n\r\n/**\r\n * Combined Fade and Scale Transition\r\n * @param {Object} params - Transition parameters.\r\n * @param {number} params.duration - Duration of the transition in milliseconds.\r\n */\r\nexport function fadeScale(node, { duration = 700 }) {\r\n  return {\r\n    duration,\r\n    easing: cubicOut,\r\n    css: t => `\r\n      opacity: ${t};\r\n      transform: scale(${t});\r\n    `\r\n  };\r\n}\r\n","<!-- src/components/TransitionWrapper.svelte -->\r\n<script>\r\n  import { fade, fly } from 'svelte/transition';\r\n  import { customFade, customFly } from '../utils/transitions.js';\r\n  import { getAssetPath } from '../utils/assetHelper.js';\r\n  \r\n  export let transition = {};\r\n  export let character = {};\r\n  export let assetPaths = {}; // Plain object\r\n  export let imgborder = false; // New prop for border control\r\n  \r\n  /**\r\n   * Determines the appropriate transition function and options based on the transition object.\r\n   * @param {Object} transition - The transition configuration.\r\n   * @returns {Object} - Contains the transition type and its options.\r\n   */\r\n  function determineTransition(transition) {\r\n    if (!transition || !transition.type) {\r\n      return { type: 'fade', options: { duration: 500 } };\r\n    }\r\n\r\n    switch (transition.type) {\r\n      case 'fade':\r\n        return { type: 'fade', options: { duration: transition.duration || 500 } };\r\n      case 'fly':\r\n        return {\r\n          type: 'fly',\r\n          options: {\r\n            x:\r\n              transition.direction === 'left'\r\n                ? -200\r\n                : transition.direction === 'right'\r\n                ? 200\r\n                : 0,\r\n            y:\r\n              transition.direction === 'up'\r\n                ? -200\r\n                : transition.direction === 'down'\r\n                ? 200\r\n                : 0,\r\n            duration: transition.duration || 500,\r\n          },\r\n        };\r\n      case 'customFade':\r\n        return { type: 'customFade', options: { duration: transition.duration || 500 } };\r\n      case 'customFly':\r\n        return {\r\n          type: 'customFly',\r\n          options: {\r\n            direction: transition.direction || 'left',\r\n            duration: transition.duration || 500,\r\n          },\r\n        };\r\n      default:\r\n        return { type: 'fade', options: { duration: 500 } };\r\n    }\r\n  }\r\n\r\n  const { type: transitionType, options: transitionOptions } = determineTransition(transition);\r\n</script>\r\n\r\n<!-- Conditional Blocks to Apply Transitions -->\r\n{#if transitionType === 'fade'}\r\n  <img\r\n    class:enhanced={imgborder}\r\n    src=\"{getAssetPath('character', character.imageSrc, assetPaths)}\"\r\n    alt=\"{character.speaker || 'Character'}\"\r\n    in:fade={transitionOptions}\r\n    out:fade={{ duration: 500 }}\r\n    loading=\"lazy\"\r\n  />\r\n{:else if transitionType === 'fly'}\r\n  <img\r\n    class:enhanced={imgborder}\r\n    src=\"{getAssetPath('character', character.imageSrc, assetPaths)}\"\r\n    alt=\"{character.speaker || 'Character'}\"\r\n    in:fly={transitionOptions}\r\n    out:fade={{ duration: 500 }}\r\n    loading=\"lazy\"\r\n  />\r\n{:else if transitionType === 'customFade'}\r\n  <img\r\n    class:enhanced={imgborder}\r\n    src=\"{getAssetPath('character', character.imageSrc, assetPaths)}\"\r\n    alt=\"{character.speaker || 'Character'}\"\r\n    in:customFade={transitionOptions}\r\n    out:fade={{ duration: 500 }}\r\n    loading=\"lazy\"\r\n  />\r\n{:else if transitionType === 'customFly'}\r\n  <img\r\n    class:enhanced={imgborder}\r\n    src=\"{getAssetPath('character', character.imageSrc, assetPaths)}\"\r\n    alt=\"{character.speaker || 'Character'}\"\r\n    in:customFly={transitionOptions}\r\n    out:fade={{ duration: 500 }}\r\n    loading=\"lazy\"\r\n  />\r\n{:else}\r\n  <!-- Default to fade if transition type is unrecognized -->\r\n  <img\r\n    class:enhanced={imgborder}\r\n    src=\"{getAssetPath('character', character.imageSrc, assetPaths)}\"\r\n    alt=\"{character.speaker || 'Character'}\"\r\n    in:fade={{ duration: 500 }}\r\n    out:fade={{ duration: 500 }}\r\n    loading=\"lazy\"\r\n  />\r\n{/if}\r\n\r\n<style>\r\n  /* Character Image Styling */\r\n  img {\r\n    display: block;\r\n    max-width: 100%;\r\n    height: auto;\r\n  }\r\n\r\n  /* Enhanced styles applied when 'enhanced' class is present */\r\n  img.enhanced {\r\n    border-radius: 20px; /* Rounded corners */\r\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); /* Shadow for depth */\r\n    transition: transform 0.3s ease, box-shadow 0.3s ease; /* Smooth transitions */\r\n  }\r\n\r\n  /* Hover Effects for Enhanced Images */\r\n  img.enhanced:hover {\r\n    transform: scale(1.05); /* Slight zoom on hover */\r\n    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.3); /* Darker shadow on hover */\r\n  }\r\n</style>\r\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","// src/stores.js\r\nimport { writable } from 'svelte/store';\r\n\r\n// Default asset directories\r\nexport const assetPaths = writable({\r\n  characters: '/images/characters/',\r\n  backgrounds: '/images/backgrounds/',\r\n  music: '/music/',\r\n  sounds: '/sounds/',\r\n  styles: '/styles/' // If you have stylesheets or related assets\r\n});\r\n\r\nexport const currentStage = writable(0);\r\nexport const slides = writable([]);\r\nexport const history = writable([]);\r\nexport const backgroundImage = writable('');\r\nexport const currentChapter = writable(0);\r\nexport const backgroundMusic = writable(''); // Initialize as empty\r\nexport const backgroundVolume = writable(0.5); // Default volume set to 50%\r\n\r\n// Record player choices\r\nexport const playerChoices = writable([]);\r\n\r\n// **Audio Management Stores and Functions**\r\n\r\n// Track the currently playing audio instance\r\nexport const currentAudio = writable(null);\r\n\r\n// Default volume for sound effects (50%)\r\nexport const soundEffectVolume = writable(0.4);\r\n\r\n/**\r\n * Play a sound with specified volume.\r\n * @param {string} soundPath - The path to the sound file.\r\n * @param {boolean} isMuted - Whether the sound is muted.\r\n * @param {number} [volume=0.5] - Volume level (0.0 to 1.0). Defaults to 50%.\r\n */\r\nexport function playSound(soundPath, isMuted, volume = 0.5) {\r\n  if (soundPath && !isMuted) {\r\n    // Pause and reset any currently playing audio\r\n    currentAudio.subscribe(audio => {\r\n      if (audio) {\r\n        audio.pause();\r\n        audio.currentTime = 0;\r\n      }\r\n    })();\r\n    \r\n    const audio = new Audio(soundPath);\r\n    audio.volume = volume;\r\n    audio.play().catch(error => {\r\n      console.error('Sound effect playback failed:', error);\r\n    });\r\n    \r\n    currentAudio.set(audio);\r\n  }\r\n}\r\n\r\n/**\r\n * Stop the currently playing sound.\r\n */\r\nexport function stopSound() {\r\n  currentAudio.subscribe(audio => {\r\n    if (audio) {\r\n      audio.pause();\r\n      audio.currentTime = 0;\r\n    }\r\n  })();\r\n  currentAudio.set(null);\r\n}\r\n","<!-- src/components/ClickToAdvanceOverlay.svelte -->\r\n<script>\r\n  export let onAdvance = () => {};\r\n\r\n  function handleKeydown(event) {\r\n    if (event.key === 'Enter' || event.key === ' ') {\r\n      event.preventDefault();\r\n      onAdvance();\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .overlay {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* Invisible overlay */\r\n    background: transparent;\r\n    cursor: pointer;\r\n    z-index: 998; /* Ensure it's below elements with higher z-index like buttons */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n</style>\r\n\r\n<div \r\n  class=\"overlay\" \r\n  on:click={onAdvance} \r\n  on:keydown={handleKeydown} \r\n  tabindex=\"0\" \r\n  role=\"button\" \r\n  aria-label=\"Click to advance to the next chapter\"\r\n>\r\n</div>\r\n","<!-- src/slides/DialogueSlide.svelte -->\r\n<script>\r\n  import { onMount } from 'svelte';\r\n  import DOMPurify from 'dompurify';\r\n  import { marked } from 'marked';\r\n  import { getAssetPath } from '../utils/assetHelper.js';\r\n  import TransitionWrapper from '../components/TransitionWrapper.svelte';\r\n  import { playSound } from '../stores.js'; // Import from stores.js\r\n  import ClickToAdvanceOverlay from '../components/ClickToAdvanceOverlay.svelte';\r\n  import { fade } from 'svelte/transition';\r\n\r\n  // Component Props\r\n  export let characters = []; // Array of character objects\r\n  export let dialogueText = '';\r\n  export let background = '';\r\n  export let soundEffect = '';\r\n  export let isMuted = false;\r\n  export let updateSlide = () => {};\r\n  export let assetPaths = {}; // Passed as a plain object\r\n\r\n  // Compute full paths using the utility function\r\n  $: backgroundPath = getAssetPath('background', background, assetPaths);\r\n  $: soundEffectPath = getAssetPath('sound', soundEffect, assetPaths);\r\n\r\n  let sanitizedBlocks = []; // Array to hold sanitized HTML blocks\r\n\r\n  /**\r\n   * Parses the dialogueText into individual blocks,\r\n   * sanitizes each block, and stores them in sanitizedBlocks.\r\n   */\r\n  function parseDialogueBlocks(markdownText) {\r\n    if (!markdownText) {\r\n      sanitizedBlocks = [];\r\n      return;\r\n    }\r\n\r\n    // Split the markdown by double newlines to separate blocks (paragraphs)\r\n    const rawBlocks = markdownText.split('\\n\\n');\r\n    sanitizedBlocks = rawBlocks.map(block => {\r\n      // Convert markdown to HTML\r\n      const html = marked.parse(block);\r\n      // Sanitize the HTML\r\n      return DOMPurify.sanitize(html, {\r\n        ALLOWED_TAGS: [\r\n          'b', 'i', 'em', 'strong', 'a', 'p', 'br', 'ul', 'ol', 'li', 'span',\r\n          'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'img', 'table', 'thead', 'tbody', 'tr', 'th', 'td', 'blockquote', 'code', 'pre'\r\n        ],\r\n        ALLOWED_ATTR: ['href', 'target', 'rel', 'style', 'class', 'src', 'alt']\r\n      });\r\n    });\r\n  }\r\n\r\n  // Function to handle dialogue advance\r\n  function handleDialogueAdvance(event) {\r\n    console.log('DialogueSlide handleDialogueAdvance triggered');\r\n    updateSlide();\r\n    // Removed playSound() from here to prevent double playback\r\n  }\r\n\r\n  // Play sound effect on mount at full volume\r\n  onMount(() => {\r\n    playSound(soundEffectPath, isMuted); // Full volume on mount\r\n  });\r\n\r\n  // Parse and sanitize dialogue blocks whenever 'dialogueText' changes\r\n  $: parseDialogueBlocks(dialogueText);\r\n</script>\r\n\r\n<style>\r\n  /* Container for the dialogue slide */\r\n  .dialogue-slide {\r\n    position: relative; /* Establishes a positioning context */\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    background-size: cover;\r\n    background-position: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end; /* Aligns children to the bottom */\r\n    align-items: center; /* Centers children horizontally */\r\n  }\r\n\r\n  /* Portraits Container with Absolute Positioning */\r\n  .portraits-container {\r\n    position: absolute; /* Allows child elements to be positioned absolutely within this container */\r\n    top: 0%; /* Adjust as needed to position portraits near the top */\r\n    left: 50%;\r\n    transform: translateX(-50%); /* Centers the container horizontally */\r\n    width: 100%; /* Full width of the parent */\r\n    height: 80%; /* Occupies 80% of the parent's height */\r\n    pointer-events: none; /* Allows clicks to pass through to underlying elements if needed */\r\n  }\r\n\r\n  /* Character Image Wrapper */\r\n  .character-image {\r\n    position: absolute; /* Positions images absolutely within portraits-container */\r\n    transition: transform 0.3s ease, box-shadow 0.3s ease; /* Smooth transitions for hover effects */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer; /* Indicates interactivity */\r\n  }\r\n\r\n  /* Image Sizes with Relative Dimensions */\r\n  .large {\r\n    width: 40%; /* 40% of the parent's width */\r\n    height: auto; /* Maintains aspect ratio */\r\n  }\r\n\r\n  .medium {\r\n    width: 25%; /* 25% of the parent's width */\r\n    height: auto;\r\n  }\r\n\r\n  .small {\r\n    width: 10%; /* 10% of the parent's width */\r\n    height: auto;\r\n  }\r\n\r\n  /* Ensure images scale proportionally without distortion */\r\n  .large img,\r\n  .medium img,\r\n  .small img {\r\n    width: 100%; /* Fills the container's width */\r\n    height: 100%; /* Fills the container's height */\r\n    object-fit: contain; /* Maintains aspect ratio */\r\n  }\r\n\r\n  /* Positioning Classes */\r\n\r\n  /* Upper Positions */\r\n  .upper-left {\r\n    top: 5%;\r\n    left: 5%;\r\n  }\r\n\r\n  .upper-middle {\r\n    top: 5%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n  }\r\n\r\n  .upper-right {\r\n    top: 5%;\r\n    right: 5%;\r\n  }\r\n\r\n  /* Middle Positions */\r\n  .middle-left {\r\n    top: 25%;\r\n    left: 5%;\r\n  }\r\n\r\n  .middle-middle {\r\n    top: 25%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n  }\r\n\r\n  .middle-right {\r\n    top: 25%;\r\n    right: 5%;\r\n  }\r\n\r\n  /* Lower Positions */\r\n  .lower-left {\r\n    top: 50%;\r\n    left: 10%;\r\n  }\r\n\r\n  .lower-middle {\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n  }\r\n\r\n  .lower-right {\r\n    top: 50%;\r\n    right: 90%;\r\n  }\r\n\r\n  /* Responsive Design */\r\n  @media (max-width: 1024px) {\r\n    .large {\r\n      width: 18%; /* Adjusted percentage for smaller screens */\r\n    }\r\n\r\n    .medium {\r\n      width: 13%;\r\n    }\r\n\r\n    .small {\r\n      width: 9%;\r\n    }\r\n\r\n    /* Adjust positions if necessary */\r\n    .upper-left,\r\n    .upper-right,\r\n    .lower-left,\r\n    .lower-right {\r\n      top: 5%;\r\n      bottom: 5%;\r\n    }\r\n\r\n    .upper-middle,\r\n    .middle-middle,\r\n    .lower-middle {\r\n      transform: translateX(-50%);\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .large {\r\n      width: 16%;\r\n    }\r\n\r\n    .medium {\r\n      width: 11%;\r\n    }\r\n\r\n    .small {\r\n      width: 8%;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    .large {\r\n      width: 20%;\r\n    }\r\n\r\n    .medium {\r\n      width: 12%;\r\n    }\r\n\r\n    .small {\r\n      width: 7%;\r\n    }\r\n\r\n    /* Stack images vertically if necessary */\r\n    .portraits-container {\r\n      top: 5%;\r\n      height: 90%;\r\n    }\r\n\r\n    .upper-left,\r\n    .upper-middle,\r\n    .upper-right,\r\n    .middle-left,\r\n    .middle-middle,\r\n    .middle-right,\r\n    .lower-left,\r\n    .lower-middle,\r\n    .lower-right {\r\n      position: relative;\r\n      transform: none;\r\n      top: auto;\r\n      bottom: auto;\r\n      left: auto;\r\n      right: auto;\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n\r\n  /* Dialogue Box Styling */\r\n  .dialogue-box {\r\n    position: relative; /* Relative to dialogue-slide */\r\n    width: 100%; /* Span the entire width */\r\n    height: 33vh; /* Occupies one-third of the viewport height */\r\n    background: rgba(0, 0, 0, 0.7); /* Semi-transparent dark background */\r\n    color: #fff;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n    cursor: pointer;\r\n    border-top-left-radius: 15px;\r\n    border-top-right-radius: 15px;\r\n    animation: fadeInUp 0.5s ease-in-out;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 2; /* Ensure it's above characters */\r\n  }\r\n\r\n  .dialogue-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start; /* Align text to the left */\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 10px; /* Optional padding */\r\n    box-sizing: border-box;\r\n    overflow: hidden;\r\n  }\r\n\r\n  /* Dialogue Block Styling */\r\n  .dialogue-block {\r\n    opacity: 0; /* Initial state */\r\n    transform: translateY(20px); /* Initial position */\r\n    animation: fadeInUp 0.5s forwards ease-out; /* Animation properties */\r\n    margin-bottom: 10px; /* Space between blocks */\r\n    width: 100%;\r\n  }\r\n\r\n  /* Fade-In Up Animation */\r\n  @keyframes fadeInUp {\r\n    to {\r\n      opacity: 1;\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n\r\n  /* Reference Styling */\r\n  .reference {\r\n    margin-top: 20px;\r\n    font-size: 0.9em;\r\n    color: #666;\r\n    font-style: italic;\r\n  }\r\n\r\n  .source-label {\r\n    font-weight: bold;\r\n  }\r\n\r\n  /* Responsive Design */\r\n  @media (max-width: 1024px) {\r\n    .dialogue-box {\r\n      padding: 20px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .dialogue-box {\r\n      padding: 15px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    .dialogue-box {\r\n      padding: 10px;\r\n    }\r\n  }\r\n\r\n  /* Additional Styling for Content */\r\n  .dialogue-content a {\r\n    color: #007bff;\r\n    text-decoration: none;\r\n  }\r\n\r\n  .dialogue-content a:hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  .dialogue-content img {\r\n    max-width: 100%;\r\n    height: auto;\r\n    border-radius: 5px;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .dialogue-content table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .dialogue-content th,\r\n  .dialogue-content td {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n  }\r\n\r\n  .dialogue-content th {\r\n    background-color: #f2f2f2;\r\n    text-align: left;\r\n  }\r\n\r\n  .dialogue-content blockquote {\r\n    border-left: 4px solid #ccc;\r\n    padding-left: 16px;\r\n    color: #666;\r\n    margin: 20px 0;\r\n    font-style: italic;\r\n  }\r\n\r\n  .dialogue-content pre {\r\n    background-color: #f5f5f5;\r\n    padding: 10px;\r\n    border-radius: 4px;\r\n    overflow-x: auto;\r\n  }\r\n\r\n  .dialogue-content code {\r\n    background-color: #f5f5f5;\r\n    padding: 2px 4px;\r\n    border-radius: 4px;\r\n  }\r\n</style>\r\n\r\n<!-- DialogueSlide Markup with Block-by-Block Fade-In -->\r\n<div class=\"dialogue-slide\" style=\"background-image: url('{backgroundPath}');\">\r\n  \r\n  <!-- Portraits Container -->\r\n  <div class=\"portraits-container\">\r\n    {#each characters as character, index}\r\n      {#if character}\r\n        <div \r\n          class=\"character-image {character.position} {character.imageType}\"\r\n        >\r\n          <TransitionWrapper\r\n            character={character}\r\n            transition={character.transition}\r\n            assetPaths={assetPaths}\r\n            imgborder={character.imgborder} \r\n          />\r\n        </div>\r\n      {/if}\r\n    {/each}\r\n  </div>\r\n  \r\n  <!-- Dialogue Box -->\r\n  <div\r\n    class=\"dialogue-box\"\r\n    in:fade={{ duration: 500 }}\r\n    out:fade={{ duration: 500 }}\r\n  >\r\n    <div class=\"dialogue-content\">\r\n      {#each sanitizedBlocks as block, index (index)}\r\n        <div\r\n          class=\"dialogue-block\"\r\n          style=\"animation-delay: {index * 300}ms;\"\r\n        >\r\n          {@html block}\r\n        </div>\r\n      {/each}\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- Click-to-Advance Overlay -->\r\n  <ClickToAdvanceOverlay onAdvance={handleDialogueAdvance} />\r\n</div>\r\n","<!-- src/slides/ChoicesSlide.svelte -->\r\n<script>\r\n  import { onMount, onDestroy } from 'svelte';\r\n  import DOMPurify from 'dompurify';\r\n  import { playerChoices, playSound, soundEffectVolume } from '../stores.js'; // Import from stores.js\r\n  import { getAssetPath } from \"../utils/assetHelper.js\"; // Import getAssetPath from the correct file\r\n  import TransitionWrapper from '../components/TransitionWrapper.svelte';\r\n  import { fade } from 'svelte/transition';\r\n  \r\n  // Component Props\r\n  export let choices = []; // Array containing two choice objects\r\n  export let background = ''; // Background image filename\r\n  export let soundEffect = ''; // Sound effect filename\r\n  export let isMuted = false; // Mute state\r\n  export let updateSlide = () => {}; // Function to move to the next slide\r\n  export let assetPaths = {}; // Asset paths object\r\n  \r\n  let showPopup = false; // Controls popup visibility\r\n  let selectedChoice = null; // Stores the player's selected choice\r\n  \r\n  // Compute full paths using the utility function\r\n  $: backgroundPath = getAssetPath('background', background, assetPaths);\r\n  $: soundEffectPath = getAssetPath('sound', soundEffect, assetPaths);\r\n  \r\n  let sanitizedPopupMessage = '';\r\n  \r\n  // Parse and sanitize popup message based on selected choice\r\n  $: if (selectedChoice) {\r\n    sanitizedPopupMessage = selectedChoice.popupMessage \r\n      ? DOMPurify.sanitize(selectedChoice.popupMessage, {\r\n          ALLOWED_TAGS: ['b', 'i', 'em', 'strong', 'a', 'p', 'br', 'span'],\r\n          ALLOWED_ATTR: ['href', 'target', 'rel', 'style', 'class']\r\n        })\r\n      : 'You made a choice. Click anywhere to continue.';\r\n  }\r\n  \r\n  // Handle choice selection\r\n  function selectChoice(choice) {\r\n    console.log(`selectChoice called for: ${choice.choiceText}`); // Logging for debugging\r\n    selectedChoice = choice;\r\n    // Record the decision\r\n    playerChoices.update(existingChoices => [...existingChoices, choice.choiceText]);\r\n    // Play sound effect at 50% volume\r\n    playSound(soundEffectPath, isMuted);\r\n    // Show popup message\r\n    showPopup = true;\r\n  }\r\n  \r\n  // Handle click on popup to proceed\r\n  function handlePopupClick() {\r\n    showPopup = false;\r\n    // Navigate to the next slide based on the selected choice\r\n    updateSlide(selectedChoice.nextId);\r\n  }\r\n  \r\n  // Handle keyboard navigation\r\n  function handleKeydown(event) {\r\n    if (showPopup) return; // Ignore if popup is active\r\n    if (event.key === 'ArrowLeft' && choices[0]) {\r\n      selectChoice(choices[0]);\r\n    } else if (event.key === 'ArrowRight' && choices[1]) {\r\n      selectChoice(choices[1]);\r\n    }\r\n  }\r\n  \r\n  // Play sound effect on mount at full volume\r\n  onMount(() => {\r\n    console.log('ChoicesSlide mounted'); // Logging for debugging\r\n    if (soundEffectPath && !isMuted) {\r\n      playSound(soundEffectPath, isMuted); // Full volume on mount\r\n    }\r\n    window.addEventListener('keydown', handleKeydown);\r\n  });\r\n  \r\n  // Remove keyboard listener on destroy\r\n  onDestroy(() => {\r\n    window.removeEventListener('keydown', handleKeydown);\r\n  });\r\n</script>\r\n\r\n<style>\r\n  .choices-slide {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-size: cover;\r\n    background-position: center;\r\n    display: flex;\r\n    flex-direction: column; /* Stack portraits and choices vertically */\r\n    justify-content: space-between;\r\n    padding: 20px 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  /* Portraits Container */\r\n  .portraits-container {\r\n    flex: 1; /* Approximately one-third of the container's height */\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n    gap: 250px; /* Space between portraits */\r\n    padding: 10px 0;\r\n    box-sizing: border-box;\r\n    position: relative; /* To position child elements */\r\n  }\r\n\r\n  /* Portrait Image Containers */\r\n  .portrait-large {\r\n    width: 40%;\r\n  }\r\n\r\n  .portrait-medium {\r\n    width: 30%;\r\n  }\r\n\r\n  .portrait-small {\r\n    width: 20%;\r\n  }\r\n\r\n  /* Choice Boxes Section */\r\n  .choices-container {\r\n    flex: 2; /* Approximately two-thirds of the container's height */\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: stretch; /* Stretch to fill vertical space */\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  .choice-container {\r\n    width: 45%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  .choice-box {\r\n    width: 100%;\r\n    height: 100%; /* Make choice-box fill the entire height of choice-container */\r\n    background: rgba(255, 255, 255, 0.95);\r\n    border-radius: 15px;\r\n    padding: 25px;\r\n    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.2);\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  }\r\n\r\n  .choice-box:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 8px 12px rgba(0, 0, 0, 0.3);\r\n  }\r\n\r\n  .choice-text {\r\n    font-size: 1.2em;\r\n    color: #333;\r\n    margin-bottom: 20px;\r\n    flex-grow: 1;\r\n    overflow-y: auto;\r\n    padding-right: 10px; /* To prevent text from hiding behind scrollbar */\r\n  }\r\n\r\n  .choose-button {\r\n    align-self: center; /* Center the button horizontally */\r\n    padding: 20px 40px; /* Increase size: twice the current size */\r\n    font-size: 1.2em; /* Increase font size */\r\n    background-color: #4caf50;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease, transform 0.2s ease;\r\n  }\r\n\r\n  .choose-button:hover {\r\n    background-color: #45a049;\r\n    transform: scale(1.05);\r\n  }\r\n\r\n  /* Popup Styles */\r\n  .popup-overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: transparent; /* Make overlay transparent */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 1000;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .popup-message {\r\n    background: rgba(128, 128, 128, 0.85); /* Grey stripe */\r\n    padding: 15px 30px;\r\n    border-radius: 10px;\r\n    max-width: 80%;\r\n    width: 60%;\r\n    font-size: 1.5em;\r\n    color: #fff;\r\n    text-align: center;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);\r\n    transition: opacity 0.3s ease, transform 0.3s ease;\r\n  }\r\n\r\n  /* Responsive Design */\r\n  @media (max-width: 1024px) {\r\n    .portraits-container {\r\n      gap: 30px;\r\n    }\r\n\r\n    .choices-container {\r\n      flex-direction: column;\r\n      align-items: center;\r\n      gap: 20px;\r\n    }\r\n\r\n    .choice-container {\r\n      width: 80%;\r\n    }\r\n\r\n    .choice-text {\r\n      font-size: 1em;\r\n    }\r\n\r\n    .choose-button {\r\n      padding: 16px 32px;\r\n      font-size: 1em;\r\n    }\r\n\r\n    .popup-message {\r\n      font-size: 1.3em;\r\n      padding: 12px 24px;\r\n      width: 70%;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .portraits-container {\r\n      flex-direction: column;\r\n      gap: 20px;\r\n    }\r\n\r\n    .choices-container {\r\n      flex-direction: column;\r\n      align-items: center;\r\n      gap: 20px;\r\n    }\r\n\r\n    .choice-container {\r\n      width: 90%;\r\n    }\r\n\r\n    .choice-text {\r\n      font-size: 0.95em;\r\n    }\r\n\r\n    .choose-button {\r\n      padding: 14px 28px;\r\n      font-size: 0.95em;\r\n    }\r\n\r\n    .popup-message {\r\n      font-size: 1.1em;\r\n      padding: 10px 20px;\r\n      width: 80%;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    .portraits-container {\r\n      gap: 15px;\r\n    }\r\n\r\n    .choice-box {\r\n      padding: 20px;\r\n    }\r\n\r\n    .choice-text {\r\n      font-size: 0.9em;\r\n      margin-bottom: 15px;\r\n    }\r\n\r\n    .choose-button {\r\n      padding: 12px 24px;\r\n      font-size: 0.9em;\r\n    }\r\n\r\n    .popup-message {\r\n      font-size: 1em;\r\n      padding: 8px 16px;\r\n      width: 90%;\r\n    }\r\n  }\r\n</style>\r\n\r\n<!-- Background Image -->\r\n<div class=\"choices-slide\" style=\"background-image: url('{backgroundPath}');\">\r\n  \r\n  <!-- Portraits Container -->\r\n  <div class=\"portraits-container\">\r\n    {#each choices as choice, index}\r\n      {#if choice.character}\r\n        <div class={`portrait-${choice.character.imageType}`}>\r\n          <TransitionWrapper\r\n            character={choice.character}\r\n            transition={choice.character.transition}\r\n            assetPaths={assetPaths}\r\n            imgborder={choice.character.imgborder !== undefined ? choice.character.imgborder : false} \r\n            \r\n          />\r\n        </div>\r\n      {/if}\r\n    {/each}\r\n  </div>\r\n  \r\n  <!-- Choices Container -->\r\n  <div class=\"choices-container\">\r\n    {#each choices as choice, index}\r\n      <div class=\"choice-container\">\r\n        <div class=\"choice-box\">\r\n          <p class=\"choice-text\">{choice.choiceText}</p>\r\n          <button \r\n            class=\"choose-button\" \r\n            on:click|stopPropagation={() => selectChoice(choice)}\r\n            aria-label={`Choose option: ${choice.choiceText}`}\r\n          >\r\n            Choose\r\n          </button>\r\n        </div>\r\n      </div>\r\n    {/each}\r\n  </div>\r\n\r\n  <!-- Popup Message -->\r\n  {#if showPopup}\r\n    <div class=\"popup-overlay\" on:click={handlePopupClick}>\r\n      <div class=\"popup-message\">\r\n        <p>{@html sanitizedPopupMessage}</p>\r\n      </div>\r\n    </div>\r\n  {/if}\r\n</div>\r\n","<!-- src/slides/InfoSlide.svelte -->\r\n<script>\r\n  import { assetPaths, playSound } from '../stores.js';\r\n  import { onMount } from 'svelte';\r\n  import DOMPurify from 'dompurify';\r\n  import { marked } from 'marked';\r\n  import { getAssetPath } from '../utils/assetHelper.js';\r\n  import ClickToAdvanceOverlay from '../components/ClickToAdvanceOverlay.svelte';\r\n  import { fade } from 'svelte/transition';\r\n\r\n  // Component Props\r\n  export let text = ''; // Markdown content from JSON\r\n  export let reference = ''; // Source reference\r\n  export let updateSlide; // Function to advance the slide\r\n  export let soundEffect = ''; // Filename only\r\n  export let background = ''; // Filename only\r\n  export let isMuted = false; // Mute state\r\n\r\n  // Compute full paths using the utility function\r\n  $: backgroundPath = getAssetPath('background', background, $assetPaths);\r\n  $: soundEffectPath = getAssetPath('sound', soundEffect, $assetPaths);\r\n\r\n  let sanitizedBlocks = []; // Array to hold sanitized HTML blocks\r\n\r\n  /**\r\n   * Parses the markdown text into individual blocks,\r\n   * sanitizes each block, and stores them in sanitizedBlocks.\r\n   */\r\n  function parseMarkdownBlocks(markdownText) {\r\n      if (!markdownText) {\r\n          sanitizedBlocks = [];\r\n          return;\r\n      }\r\n\r\n      // Split the markdown by double newlines to separate blocks\r\n      const rawBlocks = markdownText.split('\\n\\n');\r\n      sanitizedBlocks = rawBlocks.map(block => {\r\n          // Convert markdown to HTML\r\n          const html = marked.parse(block);\r\n          // Sanitize the HTML\r\n          return DOMPurify.sanitize(html, {\r\n              ALLOWED_TAGS: [\r\n                  'b', 'i', 'em', 'strong', 'a', 'p', 'br', 'ul', 'ol', 'li', 'span',\r\n                  'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'img', 'table', 'thead', 'tbody', 'tr', 'th', 'td', 'blockquote', 'code', 'pre'\r\n              ],\r\n              ALLOWED_ATTR: ['href', 'target', 'rel', 'style', 'class', 'src', 'alt']\r\n          });\r\n      });\r\n  }\r\n\r\n  // Function to handle click events\r\n  function handleClick(event) {\r\n      console.log('InfoSlide handleClick triggered');\r\n      updateSlide();\r\n      // Removed playSound() from here to prevent double playback\r\n  }\r\n\r\n  // Play sound effect on mount at full volume\r\n  onMount(() => {\r\n      playSound(soundEffectPath, isMuted); // Full volume on mount\r\n  });\r\n\r\n  // Parse and sanitize markdown blocks whenever 'text' changes\r\n  $: parseMarkdownBlocks(text);\r\n</script>\r\n\r\n<style>\r\n  /* Container for the info slide */\r\n  .info-slide {\r\n      position: relative;\r\n      width: 100%;\r\n      height: 100%;\r\n      padding: 40px;\r\n      box-sizing: border-box;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      background-size: cover;\r\n      background-position: center;\r\n      overflow: hidden;\r\n  }\r\n\r\n  /* Optional: Dark overlay to enhance text readability */\r\n  .info-slide::before {\r\n      content: '';\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      background: rgba(0, 0, 0, 0.4);\r\n      z-index: 1;\r\n  }\r\n\r\n  /* Info Box Styling */\r\n  .info-box {\r\n      position: relative;\r\n      background: rgba(255, 255, 255, 0.85);\r\n      padding: 30px 40px;\r\n      border-radius: 15px;\r\n      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);\r\n      max-width: 800px;\r\n      width: 100%;\r\n      z-index: 2;\r\n      transform-origin: top center;\r\n  }\r\n\r\n  /* Info Content Styling */\r\n  .info-content {\r\n      font-size: 1.1em;\r\n      color: #333;\r\n      line-height: 1.6;\r\n      overflow-y: auto;\r\n  }\r\n\r\n  /* Reference Styling */\r\n  .reference {\r\n      margin-top: 20px;\r\n      font-size: 0.9em;\r\n      color: #666;\r\n      font-style: italic;\r\n  }\r\n\r\n  .source-label {\r\n      font-weight: bold;\r\n  }\r\n\r\n  /* Animate each block */\r\n  .info-block {\r\n      margin-bottom: 20px;\r\n      opacity: 0; /* Initial state */\r\n      transform: translateY(20px); /* Initial position */\r\n      animation: fadeIn 0.5s forwards ease-out; /* Animation properties */\r\n  }\r\n\r\n  /* Apply animation delay dynamically */\r\n  .info-block:nth-child(1) {\r\n      animation-delay: 0ms;\r\n  }\r\n\r\n  .info-block:nth-child(2) {\r\n      animation-delay: 300ms;\r\n  }\r\n\r\n  .info-block:nth-child(3) {\r\n      animation-delay: 600ms;\r\n  }\r\n\r\n  .info-block:nth-child(4) {\r\n      animation-delay: 900ms;\r\n  }\r\n\r\n  /* Add more nth-child selectors as needed for additional blocks */\r\n\r\n  /* Define the fade-in animation */\r\n  @keyframes fadeIn {\r\n      to {\r\n          opacity: 1;\r\n          transform: translateY(0);\r\n      }\r\n  }\r\n\r\n  /* Responsive Design */\r\n  @media (max-width: 1024px) {\r\n      .info-box {\r\n          padding: 25px 30px;\r\n      }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n      .info-box {\r\n          padding: 20px 25px;\r\n      }\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n      .info-box {\r\n          padding: 15px 20px;\r\n      }\r\n  }\r\n\r\n  /* Additional Styling for Content */\r\n  .info-content a {\r\n      color: #007bff;\r\n      text-decoration: none;\r\n  }\r\n\r\n  .info-content a:hover {\r\n      text-decoration: underline;\r\n  }\r\n\r\n  .info-content img {\r\n      max-width: 100%;\r\n      height: auto;\r\n      border-radius: 5px;\r\n      margin-bottom: 15px;\r\n  }\r\n\r\n  .info-content table {\r\n      width: 100%;\r\n      border-collapse: collapse;\r\n      margin-bottom: 15px;\r\n  }\r\n\r\n  .info-content th,\r\n  .info-content td {\r\n      border: 1px solid #ddd;\r\n      padding: 8px;\r\n  }\r\n\r\n  .info-content th {\r\n      background-color: #f2f2f2;\r\n      text-align: left;\r\n  }\r\n\r\n  .info-content blockquote {\r\n      border-left: 4px solid #ccc;\r\n      padding-left: 16px;\r\n      color: #666;\r\n      margin: 20px 0;\r\n      font-style: italic;\r\n  }\r\n\r\n  .info-content pre {\r\n      background-color: #f5f5f5;\r\n      padding: 10px;\r\n      border-radius: 4px;\r\n      overflow-x: auto;\r\n  }\r\n\r\n  .info-content code {\r\n      background-color: #f5f5f5;\r\n      padding: 2px 4px;\r\n      border-radius: 4px;\r\n  }\r\n</style>\r\n\r\n<!-- Updated Markup with CSS-Based Gradual Reveal -->\r\n<div class=\"info-slide\" style=\"background-image: url('{backgroundPath}');\">\r\n  <!-- Info Box with Combined Transition -->\r\n  <div class=\"info-box\">\r\n      <!-- Animate each block individually -->\r\n      <div class=\"info-content\">\r\n          {#each sanitizedBlocks as block, index (index)}\r\n              <div\r\n                  class=\"info-block\"\r\n                  style=\"animation-delay: {index * 300}ms;\"\r\n              >\r\n                  {@html block}\r\n              </div>\r\n          {/each}\r\n      </div>\r\n  </div>\r\n  \r\n  <!-- Click-to-Advance Overlay -->\r\n  <ClickToAdvanceOverlay onAdvance={handleClick} />\r\n</div>\r\n","<!-- src/components/FlashScreen.svelte -->\r\n<script>\r\n  import { onMount } from 'svelte';\r\n  import { fade } from 'svelte/transition';\r\n  import { createEventDispatcher } from 'svelte';\r\n\r\n  export let screenType = 'start'; // 'start' or 'end'\r\n\r\n  let isVisible = true;\r\n\r\n  let content = '';\r\n  let buttonLabel = '';\r\n  let buttonAction = ''; // Defines what action to perform on click\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  // Fetch the flashscreen content based on screenType\r\n  async function fetchContent() {\r\n      try {\r\n          const response = await fetch('flashscreens.json');\r\n          if (!response.ok) {\r\n              throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n          const data = await response.json();\r\n          content = data[screenType]?.content || '';\r\n          if (data[screenType]?.button) {\r\n              buttonLabel = data[screenType].button.label || '';\r\n              buttonAction = data[screenType].button.action || '';\r\n          }\r\n      } catch (error) {\r\n          console.error('Error fetching flashscreens.json:', error);\r\n          content = screenType === 'start' \r\n              ? '<h1>Click to Start</h1><p><em>\\\"Default Start Quote\\\" - Unknown</em></p>' \r\n              : '<h1>Thank You for Playing</h1><p><em>\\\"Default End Quote\\\" - Unknown</em></p>';\r\n          buttonLabel = screenType === 'start' ? 'Start Game' : 'Restart Game';\r\n          buttonAction = screenType === 'start' ? 'start' : 'reload';\r\n      }\r\n  }\r\n\r\n  onMount(() => {\r\n      fetchContent();\r\n  });\r\n\r\n  // Handle button click based on action\r\n  function handleButtonClick() {\r\n      if (buttonAction === 'start') {\r\n          dispatch('proceed'); // Emit 'proceed' event\r\n      } else if (buttonAction === 'reload') {\r\n          window.location.reload();\r\n      } else {\r\n          dispatch('proceed'); // Default to proceed\r\n      }\r\n  }\r\n\r\n  // Handle the main click event to trigger the fade-out\r\n  function handleClick() {\r\n      isVisible = false; // Start fade-out\r\n  }\r\n\r\n  // Handle outro end to dispatch the proceed event\r\n  function handleOutroEnd() {\r\n      dispatch('proceed'); // Notify parent to proceed\r\n  }\r\n</script>\r\n<!-- src/components/FlashScreen.svelte -->\r\n\r\n<style>\r\n  .flash-screen {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      height: 100vh;\r\n      width: 100vw;\r\n      background-color: #000; /* Black background */\r\n      color: #fff; /* White text */\r\n      cursor: pointer;\r\n      text-align: center;\r\n      font-family: 'Fira Sans', sans-serif;\r\n  }\r\n\r\n  .flash-screen h1 {\r\n      font-size: 3em;\r\n      margin: 0;\r\n      font-weight: 300; /* Light weight */\r\n      animation: fadeIn 2s ease-in-out;\r\n  }\r\n\r\n  .flash-screen p {\r\n      font-size: 1.2em;\r\n      margin-top: 20px;\r\n      font-style: italic;\r\n      font-weight: 400; /* Regular weight */\r\n  }\r\n\r\n  .action-button {\r\n      margin-top: 40px;\r\n      padding: 10px 20px;\r\n      background-color: #28a745; /* Green for distinction */\r\n      color: white;\r\n      border: none;\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n      font-size: 16px;\r\n      transition: background-color 0.3s ease, transform 0.2s ease;\r\n      font-family: 'Fira Sans', sans-serif;\r\n      font-weight: 400;\r\n  }\r\n\r\n  .action-button:hover {\r\n      background-color: #218838;\r\n      transform: scale(1.05);\r\n  }\r\n\r\n  /* Fade-in animation */\r\n  @keyframes fadeIn {\r\n      from { opacity: 0; }\r\n      to { opacity: 1; }\r\n  }\r\n</style>\r\n\r\n<!-- FlashScreen Markup -->\r\n{#if isVisible}\r\n  <div \r\n      class=\"flash-screen\" \r\n      on:click={handleClick} \r\n      transition:fade={{ duration: 1000 }} \r\n      on:outroend={handleOutroEnd}\r\n  >\r\n      {@html content}\r\n      {#if buttonLabel}\r\n          <button \r\n              class=\"action-button\" \r\n              on:click|stopPropagation={handleButtonClick} \r\n              aria-label={screenType === 'start' ? 'Start Game' : 'Restart Game'}\r\n          >\r\n              {buttonLabel}\r\n          </button>\r\n      {/if}\r\n  </div>\r\n{/if}\r\n","module.exports = function(md, options) {\n  options = options || {};\n  options.listUnicodeChar = options.hasOwnProperty('listUnicodeChar') ? options.listUnicodeChar : false;\n  options.stripListLeaders = options.hasOwnProperty('stripListLeaders') ? options.stripListLeaders : true;\n  options.gfm = options.hasOwnProperty('gfm') ? options.gfm : true;\n  options.useImgAltText = options.hasOwnProperty('useImgAltText') ? options.useImgAltText : true;\n  options.abbr = options.hasOwnProperty('abbr') ? options.abbr : false;\n  options.replaceLinksWithURL = options.hasOwnProperty('replaceLinksWithURL') ? options.replaceLinksWithURL : false;\n  options.htmlTagsToSkip = options.hasOwnProperty('htmlTagsToSkip') ? options.htmlTagsToSkip : [];\n  options.throwError = options.hasOwnProperty('throwError') ? options.throwError : false;\n\n  var output = md || '';\n\n  // Remove horizontal rules (stripListHeaders conflict with this rule, which is why it has been moved to the top)\n  output = output.replace(/^(-\\s*?|\\*\\s*?|_\\s*?){3,}\\s*/gm, '');\n\n  try {\n    if (options.stripListLeaders) {\n      if (options.listUnicodeChar)\n        output = output.replace(/^([\\s\\t]*)([\\*\\-\\+]|\\d+\\.)\\s+/gm, options.listUnicodeChar + ' $1');\n      else\n        output = output.replace(/^([\\s\\t]*)([\\*\\-\\+]|\\d+\\.)\\s+/gm, '$1');\n    }\n    if (options.gfm) {\n      output = output\n      // Header\n        .replace(/\\n={2,}/g, '\\n')\n        // Fenced codeblocks\n        .replace(/~{3}.*\\n/g, '')\n        // Strikethrough\n        .replace(/~~/g, '')\n        // Fenced codeblocks\n        .replace(/`{3}.*\\n/g, '');\n    }\n    if (options.abbr) {\n      // Remove abbreviations\n      output = output.replace(/\\*\\[.*\\]:.*\\n/, '');\n    }\n    output = output\n    // Remove HTML tags\n      .replace(/<[^>]*>/g, '')\n\n    var htmlReplaceRegex = new RegExp('<[^>]*>', 'g');\n    if (options.htmlTagsToSkip.length > 0) {\n      // Using negative lookahead. Eg. (?!sup|sub) will not match 'sup' and 'sub' tags.\n      var joinedHtmlTagsToSkip = '(?!' + options.htmlTagsToSkip.join(\"|\") + ')';\n\n      // Adding the lookahead literal with the default regex for html. Eg./<(?!sup|sub)[^>]*>/ig\n      htmlReplaceRegex = new RegExp(\n          '<' +\n          joinedHtmlTagsToSkip +\n          '[^>]*>', \n          'ig'\n      );\n    }\n\n    output = output\n      // Remove HTML tags\n      .replace(htmlReplaceRegex, '')\n      // Remove setext-style headers\n      .replace(/^[=\\-]{2,}\\s*$/g, '')\n      // Remove footnotes?\n      .replace(/\\[\\^.+?\\](\\: .*?$)?/g, '')\n      .replace(/\\s{0,2}\\[.*?\\]: .*?$/g, '')\n      // Remove images\n      .replace(/\\!\\[(.*?)\\][\\[\\(].*?[\\]\\)]/g, options.useImgAltText ? '$1' : '')\n      // Remove inline links\n      .replace(/\\[([^\\]]*?)\\][\\[\\(].*?[\\]\\)]/g, options.replaceLinksWithURL ? '$2' : '$1')\n      // Remove blockquotes\n      .replace(/^(\\n)?\\s{0,3}>\\s?/gm, '$1')\n      // .replace(/(^|\\n)\\s{0,3}>\\s?/g, '\\n\\n')\n      // Remove reference-style links?\n      .replace(/^\\s{1,2}\\[(.*?)\\]: (\\S+)( \".*?\")?\\s*$/g, '')\n      // Remove atx-style headers\n      .replace(/^(\\n)?\\s{0,}#{1,6}\\s*( (.+))? +#+$|^(\\n)?\\s{0,}#{1,6}\\s*( (.+))?$/gm, '$1$3$4$6')\n      // Remove * emphasis\n      .replace(/([\\*]+)(\\S)(.*?\\S)??\\1/g, '$2$3')\n      // Remove _ emphasis. Unlike *, _ emphasis gets rendered only if \n      //   1. Either there is a whitespace character before opening _ and after closing _.\n      //   2. Or _ is at the start/end of the string.\n      .replace(/(^|\\W)([_]+)(\\S)(.*?\\S)??\\2($|\\W)/g, '$1$3$4$5')\n      // Remove code blocks\n      .replace(/(`{3,})(.*?)\\1/gm, '$2')\n      // Remove inline code\n      .replace(/`(.+?)`/g, '$1')\n      // // Replace two or more newlines with exactly two? Not entirely sure this belongs here...\n      // .replace(/\\n{2,}/g, '\\n\\n')\n      // // Remove newlines in a paragraph\n      // .replace(/(\\S+)\\n\\s*(\\S+)/g, '$1 $2')\n      // Replace strike through\n      .replace(/~(.*?)~/g, '$1');\n  } catch(e) {\n    if (options.throwError) throw e;\n\n    console.error(\"remove-markdown encountered error: %s\", e);\n    return md;\n  }\n  return output;\n};\n","// src/utils/appLogic.js\r\nimport { slides, currentStage, history, currentChapter, backgroundImage, backgroundMusic, backgroundVolume, assetPaths } from '../stores';\r\nimport { get } from 'svelte/store';\r\nimport { getAssetPath } from './assetHelper.js'; // Ensure this import exists\r\n\r\n// Function to pre-load images and sound effects\r\nexport function preloadImages(slideData) {\r\n  slideData.forEach((slide) => {\r\n    if (slide.background) {\r\n      const img = new Image();\r\n      img.src = getAssetPath('background', slide.background, get(assetPaths));\r\n    }\r\n    // Pre-load sound effects if any\r\n    if (slide.soundEffect) {\r\n      const audio = new Audio();\r\n      audio.src = getAssetPath('sound', slide.soundEffect, get(assetPaths));\r\n    }\r\n  });\r\n}\r\n\r\n// Fetch the slides from the current chapter's JSON file and preload images\r\n/**\r\n * Loads a chapter by fetching its JSON file and updating relevant stores.\r\n */\r\nexport async function loadChapter(chapterIndex) {\r\n  try {\r\n    console.log(`Loading Chapter ${chapterIndex}`);\r\n    const response = await fetch(`chapter${chapterIndex}.json`);\r\n    if (response.ok) {\r\n      const chapterData = await response.json();\r\n      \r\n      // Update slides\r\n      slides.set(chapterData.slides || []);\r\n      \r\n      // Preload images and sounds\r\n      preloadImages(chapterData.slides || []);\r\n      \r\n      // Update background music if specified\r\n      if (chapterData.music) {\r\n        backgroundMusic.set(chapterData.music); // Only the filename\r\n        backgroundVolume.set(chapterData.volume !== undefined ? chapterData.volume : 0.5);\r\n      } else {\r\n        backgroundMusic.set(''); // No music\r\n      }\r\n      \r\n      // Reset current stage and history\r\n      currentStage.set(0);\r\n      console.log(`currentStage reset to 0 for Chapter ${chapterIndex}`);\r\n      \r\n      history.set([]);\r\n      \r\n      // Optionally, update background image if needed\r\n      if (chapterData.backgroundImage) {\r\n        backgroundImage.set(getAssetPath('background', chapterData.backgroundImage, get(assetPaths)));\r\n      }\r\n      \r\n    } else {\r\n      console.error(`Failed to load chapter${chapterIndex}.json`);\r\n    }\r\n  } catch (error) {\r\n    console.error(`Error loading chapter${chapterIndex}.json:`, error);\r\n  }\r\n}\r\n\r\n// Function to update the current slide and save history\r\nexport function updateSlide(nextId = null) {\r\n  if (nextId !== null) {\r\n    // Navigate directly to the specified nextId\r\n    currentStage.set(nextId);\r\n    // Update background\r\n    const slidesArray = get(slides);\r\n    if (slidesArray[nextId] && slidesArray[nextId].background) {\r\n      backgroundImage.set(getAssetPath('background', slidesArray[nextId].background, get(assetPaths)));\r\n    } else {\r\n      backgroundImage.set(''); // Or set to a default background\r\n    }\r\n  } else {\r\n    // Advance to the next slide sequentially\r\n    slides.update(($slides) => {\r\n      const newStage = get(currentStage) + 1;\r\n      if (newStage < $slides.length) {\r\n        // Save current stage to history\r\n        history.update(($history) => {\r\n          $history.push(get(currentStage));\r\n          return $history;\r\n        });\r\n\r\n        // Update background for the new slide\r\n        if ($slides[newStage].background) {\r\n          backgroundImage.set(getAssetPath('background', $slides[newStage].background, get(assetPaths)));\r\n        } else {\r\n          backgroundImage.set(''); // Or set to a default background\r\n        }\r\n\r\n        // Update current stage\r\n        currentStage.set(newStage);\r\n      } else {\r\n        console.warn('Reached the end of slides.');\r\n        // Optional: Handle end of slides, e.g., show an end screen or loop back\r\n      }\r\n      return $slides;\r\n    });\r\n  }\r\n}\r\n\r\n// Function to go back to the previous slide\r\nexport function goBack() {\r\n  history.update(($history) => {\r\n    if ($history.length > 0) {\r\n      const previousStage = $history.pop();\r\n      currentStage.set(previousStage); // Go back to the previous slide in history\r\n      \r\n      // Update background\r\n      const slidesArray = get(slides);\r\n      if (slidesArray[previousStage] && slidesArray[previousStage].background) {\r\n        backgroundImage.set(getAssetPath('background', slidesArray[previousStage].background, get(assetPaths)));\r\n      } else {\r\n        backgroundImage.set(''); // Or set to a default background\r\n      }\r\n    }\r\n    return $history;\r\n  });\r\n}\r\n\r\n// Function to load the next chapter\r\nexport function loadNextChapter() {\r\n  currentChapter.update(($chapter) => {\r\n    const newChapter = $chapter + 1;\r\n    console.log(`Transitioning to Chapter ${newChapter}`);\r\n    loadChapter(newChapter);\r\n    return newChapter;\r\n  });\r\n}\r\n","<script>\n  import './appStyles.css';\n  import { onMount } from 'svelte';\n  import { fade } from 'svelte/transition';\n  import DialogueSlide from './slides/DialogueSlide.svelte';\n  import ChoicesSlide from './slides/ChoicesSlide.svelte';\n  import InfoSlide from './slides/InfoSlide.svelte';\n  import FlashScreen from './components/FlashScreen.svelte';\n  import ClickToAdvanceOverlay from './components/ClickToAdvanceOverlay.svelte';\n  import { marked } from 'marked';\n  import DOMPurify from 'dompurify';\n  import removeMarkdown from 'remove-markdown';\n  \n  // Import stores\n  import { \n    currentStage, \n    slides, \n    history, \n    backgroundImage, \n    currentChapter, \n    backgroundMusic, \n    backgroundVolume, \n    assetPaths \n  } from './stores.js';\n  \n  // Import utility functions\n  import { getAssetPath } from './utils/assetHelper.js';\n  import { loadChapter, updateSlide, goBack, loadNextChapter } from './utils/appLogic.js';\n  \n  import { playerChoices } from './stores.js'; // Ensure playerChoices is imported\n\n  // Existing variables\n  let gameStarted = false;\n  let isMuted = false;\n  let backgroundAudio;\n\n  // Progress-related variables\n  let slideCounts = [];\n  let cumulativeSlideCounts = [];\n  let totalSlides = 0;\n  let totalChapters = 3;\n  \n  // Current Slide Index (1-based)\n  $: currentSlideIndex = slideCounts\n    .slice(0, $currentChapter)\n    .reduce((a, b) => a + b, 0) + ($currentStage || 0) + 1;\n  \n  // Progress Percentage\n  $: progress = totalSlides ? (currentSlideIndex / totalSlides) * 100 : 0;\n  \n  // Define separate counter texts\n  $: slideCounterText = `Slide ${currentSlideIndex}/${slideCounts[$currentChapter] || 1}`;\n  $: chapterCounterText = `Chapter ${$currentChapter + 1}/${totalChapters}`;\n  \n  // Compute Cumulative Slide Counts whenever slideCounts changes\n  $: cumulativeSlideCounts = slideCounts.reduce((acc, count, index) => {\n    acc.push((acc[index - 1] || 0) + count);\n    return acc;\n  }, []);\n  \n  // Function to fetch all chapters and count slides\n  async function fetchAllChapters() {\n    const counts = [];\n    for (let i = 0; i < totalChapters; i++) {\n      try {\n        const response = await fetch(`chapter${i}.json`);\n        if (response.ok) {\n          const chapterData = await response.json();\n          const slides = chapterData.slides || [];\n          counts.push(slides.length);\n        } else {\n          console.error(`chapter${i}.json not found.`);\n          counts.push(0);\n        }\n      } catch (error) {\n        console.error(`Error fetching chapter${i}.json:`, error);\n        counts.push(0);\n      }\n    }\n    slideCounts = counts;\n    totalSlides = slideCounts.reduce((a, b) => a + b, 0);\n  }\n  \n  onMount(() => {\n    fetchAllChapters();\n  });\n  \n  // Function to start the game\n  function startGame() {\n    gameStarted = true;\n    currentChapter.set(0); // Start with Chapter 0\n    loadChapter(0); // Load Chapter 0\n  }\n  \n  // Function to toggle mute state\n  function toggleMute() {\n    isMuted = !isMuted;\n    if (backgroundAudio) {\n      backgroundAudio.muted = isMuted;\n      if (isMuted) {\n        backgroundAudio.pause();\n      } else {\n        if ($backgroundMusic) {\n          backgroundAudio.play().catch(error => {\n            console.error('Background music playback failed:', error);\n          });\n        }\n      }\n    }\n  }\n\n  // Reactive statement to update audio src and play music when backgroundMusic changes\n  $: if (backgroundAudio && $backgroundMusic) {\n    const fullMusicPath = getAssetPath('music', $backgroundMusic, $assetPaths);\n    if (backgroundAudio.src !== fullMusicPath) { // Prevent resetting src if already correct\n      backgroundAudio.src = fullMusicPath;\n      if (!isMuted) {\n        backgroundAudio.volume = $backgroundVolume; // Set the volume\n        backgroundAudio.play().catch(error => {\n          console.error('Background music playback failed:', error);\n        });\n      }\n    }\n  }\n\n  // Reactive statement to update audio volume when backgroundVolume changes\n  $: if (backgroundAudio) {\n    backgroundAudio.volume = $backgroundVolume;\n  }\n  \n  // Function to advance to the next slide\n  function handleDialogueEnd(nextId = null) {\n    if (nextId !== null) {\n      updateSlide(nextId); // Navigate to the specified nextId\n    } else {\n      updateSlide();\n    }\n  }\n\n  // Function to restart the game\n  function restartGame() {\n    // Reset game state\n    gameStarted = false;\n    isMuted = false;\n    currentChapter.set(0);\n    currentStage.set(0);\n    slides.set([]);\n    history.set([]);\n    backgroundImage.set('');\n    backgroundMusic.set('');\n    backgroundVolume.set(1);\n    playerChoices.set([]);\n    // Additional resets if necessary\n\n    // Pause and reset background audio\n    if (backgroundAudio) {\n      backgroundAudio.pause();\n      backgroundAudio.currentTime = 0;\n      backgroundAudio.src = '';\n    }\n  }\n\n  // State variables for the confirmation banner\n  let showBanner = false;\n  let copiedReference = '';\n  let sanitizedCopiedReference = '';\n\n  // Reactive variable to hold the sanitized reference HTML\n  $: sanitizedReference = $slides[$currentStage]?.reference\n    ? DOMPurify.sanitize(marked.parse($slides[$currentStage].reference), {\n        ALLOWED_TAGS: [\n          'b', 'i', 'em', 'strong', 'a', 'p', 'br', 'ul', 'ol', 'li', 'span',\n          'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'img', 'table', 'thead',\n          'tbody', 'tr', 'th', 'td', 'blockquote', 'code', 'pre'\n        ],\n        ALLOWED_ATTR: ['href', 'target', 'rel', 'style', 'class', 'src', 'alt']\n      })\n    : '';\n\n  // Reactive variable to hold the sanitized copied reference HTML\n  $: sanitizedCopiedReference = copiedReference\n    ? DOMPurify.sanitize(marked.parse(copiedReference), {\n        ALLOWED_TAGS: [\n          'b', 'i', 'em', 'strong', 'a', 'p', 'br', 'ul', 'ol', 'li', 'span',\n          'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'img', 'table', 'thead',\n          'tbody', 'tr', 'th', 'td', 'blockquote', 'code', 'pre'\n        ],\n        ALLOWED_ATTR: ['href', 'target', 'rel', 'style', 'class', 'src', 'alt']\n      })\n    : '';\n\n  /**\n   * Copies the provided reference text to the clipboard.\n   * @param {string} reference - The reference text to copy.\n   */\n  async function copyReferenceToClipboard(reference) {\n    try {\n      // Convert Markdown to plain text by removing Markdown syntax\n      const plainTextReference = removeMarkdown(reference);\n      \n      // Copy the plain text to the clipboard\n      await navigator.clipboard.writeText(plainTextReference);\n      \n      // Set the copied reference for the confirmation banner\n      copiedReference = plainTextReference;\n      showBanner = true;\n      \n      // Sanitize the copied reference for display in the banner\n      sanitizedCopiedReference = DOMPurify.sanitize(marked.parse(reference), {\n        ALLOWED_TAGS: [\n          'b', 'i', 'em', 'strong', 'a', 'p', 'br', 'ul', 'ol', 'li', 'span',\n          'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'img', 'table', 'thead',\n          'tbody', 'tr', 'th', 'td', 'blockquote', 'code', 'pre'\n        ],\n        ALLOWED_ATTR: ['href', 'target', 'rel', 'style', 'class', 'src', 'alt']\n      });\n      \n      // Hide the banner after 3 seconds\n      setTimeout(() => {\n        showBanner = false;\n        copiedReference = '';\n        sanitizedCopiedReference = '';\n      }, 3000);\n    } catch (err) {\n      console.error('Failed to copy:', err);\n      // Optionally, handle the error (e.g., show an error message)\n    }\n  }\n\n  /**\n   * Handles the click event on the reference section.\n   * Copies the reference to the clipboard if available.\n   */\n  function handleReferenceClick() {\n    const reference = $slides[$currentStage]?.reference;\n    if (reference) {\n      copyReferenceToClipboard(reference);\n    }\n  }\n\n  /**\n   * Handles keydown events on the reference section for accessibility.\n   * @param {KeyboardEvent} event - The keyboard event.\n   */\n  function handleReferenceKeydown(event) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      handleReferenceClick();\n    }\n  }\n</script>\n\n<style>\n  /* Import the global styles */\n  @import './appStyles.css';\n</style>\n\n<!-- Application Markup -->\n{#if !gameStarted}\n  <!-- Starting screen using FlashScreen component -->\n  <FlashScreen screenType=\"start\" on:proceed={startGame} />\n{:else if currentSlideIndex > totalSlides}\n  <!-- Ending screen using FlashScreen component -->\n  <FlashScreen screenType=\"end\" on:proceed={restartGame} />\n{:else}\n  <!-- Existing game content -->\n  <div class=\"meeting-room\">\n    <!-- Background Audio Element -->\n    <audio\n      bind:this={backgroundAudio}\n      loop\n      preload=\"auto\" \n      on:loadeddata={() => {\n        if (!isMuted && $backgroundMusic) {\n          backgroundAudio.play().catch(error => {\n            console.error('Background music playback failed:', error);\n          });\n        }\n      }}\n    ></audio>\n    \n    <div class=\"screen\" style=\"background-image: url('{$backgroundImage}');\">\n      {#if $slides.length > 0}\n        <!-- Slide content transition -->\n        {#key $currentStage}\n          <div class=\"slide-content\" in:fade={{ duration: 500 }}>\n            {#if $slides[$currentStage]?.type === 'dialogue'}\n              <DialogueSlide\n                characters={$slides[$currentStage].characters}\n                dialogueText={$slides[$currentStage].dialogueText}\n                background={$slides[$currentStage].background}\n                soundEffect={$slides[$currentStage].soundEffect}\n                isMuted={isMuted}\n                updateSlide={handleDialogueEnd}\n                assetPaths={$assetPaths}\n              />\n            {:else if $slides[$currentStage]?.type === 'choices'}\n              <ChoicesSlide \n                choices={$slides[$currentStage].choices}\n                background={$slides[$currentStage].background}\n                soundEffect={$slides[$currentStage].soundEffect}\n                isMuted={isMuted}\n                updateSlide={handleDialogueEnd}\n                assetPaths={$assetPaths}\n              />\n            {:else if $slides[$currentStage]?.type === 'info'}\n              <InfoSlide\n                text={$slides[$currentStage]?.text}\n                reference={$slides[$currentStage]?.reference}\n                updateSlide={handleDialogueEnd}\n                soundEffect={$slides[$currentStage]?.soundEffect}\n                isMuted={isMuted}\n                clickToAdvance={$slides[$currentStage]?.clickToAdvance}\n                background={$slides[$currentStage].background}\n              />\n            {/if}\n          </div>\n        {/key}\n      {/if}\n\n      <!-- Back Button -->\n      {#if $history.length > 0}\n        <button on:click={goBack} class=\"back-button\" aria-label=\"Go Back\">\n          Back\n        </button>\n      {/if}\n\n      <!-- Progress Bar and Counters -->\n      <div class=\"progress-container\">\n        <!-- Slide Counter -->\n        <div class=\"slide-counter\">\n          {slideCounterText}\n        </div>\n        \n        <!-- Separator -->\n        <span class=\"separator\" aria-hidden=\"true\">-</span>\n        \n        <!-- Progress Bar -->\n        <div class=\"progress-bar\">\n          <div class=\"progress\" style=\"width: {progress}%\"></div>\n          <!-- Chapter Markers -->\n          {#each cumulativeSlideCounts as cumulativeCount, index}\n            {#if index < totalChapters - 1} <!-- Exclude the last chapter's end -->\n              <div\n                class=\"marker\"\n                style=\"left: { (cumulativeCount / totalSlides) * 100 }%;\"\n                title={`Chapter ${index + 1}`}\n              ></div>\n            {/if}\n          {/each}\n        </div>\n        \n        <!-- Separator -->\n        <span class=\"separator\" aria-hidden=\"true\">-</span>\n        \n        <!-- Chapter Counter -->\n        <div class=\"chapter-counter\">\n          {chapterCounterText}\n        </div>\n      </div>\n\n      <!-- Mute/Unmute Button -->\n      <button on:click={toggleMute} class=\"mute-button\" aria-label={isMuted ? 'Unmute Music' : 'Mute Music'}>\n        {#if isMuted}\n          Unmute 🔊\n        {:else}\n          Mute 🔇\n        {/if}\n      </button>\n\n      <!-- Reference Section -->\n      {#if $slides[$currentStage]?.reference}\n        <div \n          class=\"reference\" \n          on:click={handleReferenceClick} \n          on:keydown={handleReferenceKeydown}\n          tabindex=\"0\" \n          role=\"button\" \n          aria-label=\"Copy reference to clipboard\"\n        >\n          <span class=\"source-label\">Source:</span>\n          {@html sanitizedReference}\n        </div>\n      {/if}\n\n      <!-- Reference Copy Confirmation Banner -->\n      {#if showBanner}\n        <div class=\"copy-banner\" transition:fade={{ duration: 500 }} role=\"alert\" aria-live=\"assertive\">\n          Reference successfully copied:<br/><br/>\n          {copiedReference}\n        </div>\n      {/if}\n\n      <!-- Click to Advance Overlay -->\n      {#if $currentStage === (slideCounts[$currentChapter] || 0) - 1}\n        <ClickToAdvanceOverlay onAdvance={loadNextChapter} />\n      {/if}\n    </div>\n  </div>\n{/if}\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","callback","undefined","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","$$","on_destroy","push","null_to_empty","split_css_unit","split","match","parseFloat","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","promise","Promise","fulfill","add","abort","append","target","node","appendChild","get_root_for_style","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","textContent","style","head","sheet","append_stylesheet","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","stop_propagation","stopPropagation","call","this","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","set_style","key","important","removeProperty","setProperty","toggle_class","toggle","classList","custom_event","type","detail","bubbles","cancelable","CustomEvent","HtmlTag","is_svg","e","n","t","constructor","html","h","m","createElementNS","nodeType","nodeName","tagName","content","innerHTML","Array","from","childNodes","p","managed_styles","Map","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","rule","str","hash","charCodeAt","doc","stylesheet","rules","get","info","set","create_style_information","insertRule","cssRules","animation","delete_rule","previous","next","filter","anim","indexOf","deleted","join","ownerNode","clear","set_current_component","get_current_component","Error","onMount","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","seen_callbacks","flushidx","flush","saved_component","update","pop","has","fragment","before_update","dirty","ctx","after_update","wait","then","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_in_transition","params","animation_name","config","running","cleanup","go","easing","linear","tick","css","start_time","end_time","started","start","invalidate","end","create_out_transition","group","original_inert_value","inert","reset","create_bidirectional_transition","intro","running_program","pending_program","clear_animation","init","program","Math","abs","ensure_array_like","array_like_or_iterator","destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","updates","child_ctx","will_move","did_move","first","new_block","old_block","new_key","old_key","create_component","mount_component","new_on_destroy","map","destroy_component","filtered","targets","flush_render_callbacks","make_dirty","fill","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","skip_bound","ready","ret","rest","hydrate","nodes","children","l","SvelteComponent","$$set","$destroy","$on","index","splice","$set","obj","keys","cubicOut","fade","getComputedStyle","opacity","fly","y","target_opacity","transform","od","xValue","xUnit","yValue","yUnit","u","__svelte","v","exports","entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","apply","construct","Reflect","fun","thisValue","args","Func","arrayForEach","unapply","prototype","arrayPop","arrayPush","stringToLowerCase","String","toLowerCase","stringToString","toString","stringMatch","stringReplace","replace","stringIndexOf","stringTrim","trim","objectHasOwnProperty","hasOwnProperty","regExpTest","RegExp","test","typeErrorCreate","unconstruct","TypeError","func","thisArg","_len","arguments","_key","_len2","_key2","addToSet","array","transformCaseFunc","lcElement","cleanArray","clone","object","newObject","property","isArray","lookupGetter","prop","desc","fallbackValue","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","EXPRESSIONS","__proto__","NODE_TYPE","cdataSection","entityReference","entityNode","progressingInstruction","comment","documentType","documentFragment","notation","getGlobal","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","createPolicy","suffix","ATTR_NAME","hasAttribute","policyName","createHTML","createScriptURL","scriptUrl","console","warn","createDOMPurify","DOMPurify","version","removed","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","remove","getNextSibling","getChildNodes","getParentNode","template","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","createHTMLDocument","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","TRUSTED_TYPES_POLICY","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","namespaceURI","parentTagName","Boolean","_forceRemove","_removeAttribute","getAttributeNode","_initDocument","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","body","_createNodeIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","SHOW_PROCESSING_INSTRUCTION","SHOW_CDATA_SECTION","_isClobbered","elm","attributes","hasChildNodes","_isNode","_executeHook","entryPoint","currentNode","hook","_sanitizeElements","allowedTags","firstElementChild","_isBasicCustomElement","childClone","__removalCount","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","firstChild","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","purify","factory","_getDefaults","async","breaks","extensions","gfm","pedantic","renderer","silent","tokenizer","walkTokens","_defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","source","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape$1","encode","caret","edit","regex","opt","val","valSource","getRegex","cleanUrl","encodeURI","noopTest","exec","splitCells","tableRow","count","cells","offset","escaped","curr","shift","rtrim","invert","suffLen","currChar","charAt","slice","outputLink","cap","link","raw","lexer","title","state","inLink","token","tokens","inlineTokens","_Tokenizer","src","newline","code","codeBlockStyle","fences","matchIndentToCode","indentToCode","matchIndentInNode","indentInNode","indentCodeCompensation","lang","inline","anyPunctuation","heading","trimmed","depth","hr","blockquote","lines","inBlockquote","currentLines","currentRaw","currentText","top","blockTokens","lastToken","oldToken","newText","newToken","substring","bull","isordered","ordered","loose","items","itemRegex","endsWithBlankLine","endEarly","itemContents","line","repeat","nextLine","blankLine","indent","trimStart","search","nextBulletRegex","min","hrRegex","fencesBeginRegex","headingBeginRegex","htmlBeginRegex","rawLine","nextLineWithoutTabs","ischecked","istask","checked","trimEnd","spacers","hasMultipleLineBreaks","some","pre","def","headers","aligns","rows","item","header","align","row","cell","lheading","paragraph","escape","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","level","findClosingBracket","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","emStrongLDelim","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","emStrongRDelimAst","emStrongRDelimUnd","lastIndex","lastCharLength","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","prevCapZero","_backpedal","inlineText","bullet","_paragraph","_blockLabel","_tag","_comment","blockNormal","gfmTable","blockGfm","blockPedantic","_punctuation","_inlineComment","_inlineLabel","inlineNormal","blockSkip","reflinkSearch","inlinePedantic","inlineGfm","inlineBreaks","normal","_Lexer","inlineQueue","lex","lexInline","lastParagraphClipped","cutSrc","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","error","keepPrevChar","includes","lastIndexOf","startInline","_Renderer","parser","langString","parse","parseInline","j","listitem","itemBody","checkbox","unshift","tablecell","tablerow","k","strong","em","cleanHref","out","image","_TextRenderer","_Parser","textRenderer","anyToken","renderers","genericToken","textToken","_Hooks","static","preprocess","markdown","postprocess","processAllTokens","provideLexer","provideParser","markedInstance","defaults","setOptions","parseMarkdown","Parser","Renderer","TextRenderer","Lexer","Tokenizer","Hooks","use","values","concat","tableToken","listToken","childTokens","flat","pack","opts","ext","prevRenderer","extLevel","rendererProp","rendererFunc","tokenizerProp","tokenizerFunc","prevTokenizer","hooksProp","hooksFunc","prevHook","passThroughHooks","arg","packWalktokens","blockType","origOpt","throwError","onError","all","catch","message","msg","reject","marked","getAssetPath","assetType","filename","assetPaths","pathType","character","background","sound","music","sanitizedPath","log","customFade","customFly","img","img_src_value","imageSrc","speaker","current","img_intro","img_outro","transition","$$props","imgborder","transitionType","transitionOptions","determineTransition","getDefaults","subscriber_queue","stop","subscribers","new_value","run_queue","subscriber","characters","backgrounds","sounds","styles","currentStage","slides","history","backgroundImage","currentChapter","backgroundMusic","backgroundVolume","playerChoices","currentAudio","playSound","soundPath","isMuted","volume","audio","pause","currentTime","Audio","play","div","onAdvance","preventDefault","div_class_value","position","imageType","transitionwrapper_changes","create_if_block","html_tag","raw_value","div3","div0","div2","div1","each_blocks_1","div2_intro","div2_outro","dialogueText","soundEffect","updateSlide","sanitizedBlocks","soundEffectPath","$$invalidate","backgroundPath","markdownText","rawBlocks","parseDialogueBlocks","if_block","create_if_block_1","t0_value","choiceText","button","button_aria_label_value","t0","choices","showPopup","selectedChoice","sanitizedPopupMessage","selectChoice","choice","existingChoices","handleKeydown","popupMessage","nextId","reference","$assetPaths","parseMarkdownBlocks","div_transition","screenType","isVisible","buttonLabel","buttonAction","defaultPrevented","createEventDispatcher","response","fetch","ok","status","json","label","action","fetchContent","location","reload","md","listUnicodeChar","stripListLeaders","useImgAltText","abbr","replaceLinksWithURL","htmlTagsToSkip","output","htmlReplaceRegex","joinedHtmlTagsToSkip","loadChapter","chapterIndex","chapterData","slide","Image","slidesArray","$slides","newStage","$history","goBack","previousStage","loadNextChapter","$chapter","newChapter","create_if_block_8","create_if_block_7","create_if_block_5","create_if_block_4","create_if_block_3","if_block5","create_if_block_2","div6","div5","div4","span0","span1","clickToAdvance","div_intro","totalChapters","create_if_block_6","span","br0","br1","backgroundAudio","gameStarted","slideCounts","cumulativeSlideCounts","totalSlides","counts","reduce","fetchAllChapters","showBanner","copiedReference","sanitizedCopiedReference","handleReferenceClick","$currentStage","plainTextReference","removeMarkdown","navigator","clipboard","writeText","setTimeout","err","copyReferenceToClipboard","currentSlideIndex","$currentChapter","progress","slideCounterText","chapterCounterText","acc","$backgroundMusic","fullMusicPath","$backgroundVolume","sanitizedReference","muted","$$value"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,26]}